{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Eclipse Dirigible \u2122 API Eclipse Dirigible \u2122 API Portal provides the most recent information about the Enterprise JavaScript API availability, versions and status. Hello World Create new project: hello-world Create new file: helloWorld.js Copy and paste the sample code. Save the changes. See the result in the Preview tab. var response = require ( \"http/v4/response\" ); response . println ( \"Hello World!\" ); Next Steps Explore some of the following core APIs: Console HTTP Client HTTP Request Database Base64","title":"Home"},{"location":"#eclipse-dirigible-api","text":"Eclipse Dirigible \u2122 API Portal provides the most recent information about the Enterprise JavaScript API availability, versions and status.","title":"Eclipse Dirigible&trade; API"},{"location":"#hello-world","text":"Create new project: hello-world Create new file: helloWorld.js Copy and paste the sample code. Save the changes. See the result in the Preview tab. var response = require ( \"http/v4/response\" ); response . println ( \"Hello World!\" );","title":"Hello World"},{"location":"#next-steps","text":"Explore some of the following core APIs: Console HTTP Client HTTP Request Database Base64","title":"Next Steps"},{"location":"bpm-process/","text":"BPM Process BPM Process object is used to access and manage the BPM process within the underlying engine. Overview Module: bpm/v4/process Alias: bpm/process Definition: https://github.com/eclipse/dirigible/issues/227 Source: /bpm/v4/process.js Facade: BpmFacade Status: stable Basic Usage The service which starts the process: var process = require ( \"bpm/v4/process\" ); process . start ( \"hello\" , { variable1 : \"value1\" }); The process definition: <?xml version='1.0' encoding='UTF-8'?> <definitions xmlns= \"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd= \"http://www.w3.org/2001/XMLSchema\" xmlns:flowable= \"http://flowable.org/bpmn\" xmlns:bpmndi= \"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc= \"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi= \"http://www.omg.org/spec/DD/20100524/DI\" typeLanguage= \"http://www.w3.org/2001/XMLSchema\" expressionLanguage= \"http://www.w3.org/1999/XPath\" targetNamespace= \"http://www.flowable.org/processdef\" > <process id= \"hello\" name= \"hello\" isExecutable= \"true\" > <startEvent id= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" /> <serviceTask id= \"sayHello\" name= \"SayHello\" flowable:class= \"org.eclipse.dirigible.bpm.flowable.DirigibleCallDelegate\" > <extensionElements> <flowable:field name= \"handler\" > <flowable:string> <![CDATA[bpmFlows/hello.js]]> </flowable:string> </flowable:field> </extensionElements> </serviceTask> <sequenceFlow id= \"sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" sourceRef= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" targetRef= \"sayHello\" /> <endEvent id= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" /> <sequenceFlow id= \"sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" sourceRef= \"sayHello\" targetRef= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" /> </process> <bpmndi:BPMNDiagram id= \"BPMNDiagram_hello\" > <bpmndi:BPMNPlane bpmnElement= \"hello\" id= \"BPMNPlane_hello\" > <bpmndi:BPMNShape bpmnElement= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" id= \"BPMNShape_sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" > <omgdc:Bounds height= \"30.0\" width= \"30.0\" x= \"103.0\" y= \"78.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNShape bpmnElement= \"sayHello\" id= \"BPMNShape_sayHello\" > <omgdc:Bounds height= \"80.0\" width= \"100.0\" x= \"300.0\" y= \"105.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNShape bpmnElement= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" id= \"BPMNShape_sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" > <omgdc:Bounds height= \"28.0\" width= \"28.0\" x= \"562.0\" y= \"78.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNEdge bpmnElement= \"sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" id= \"BPMNEdge_sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" > <omgdi:waypoint x= \"133.0\" y= \"93.0\" /> <omgdi:waypoint x= \"201.0\" y= \"93.0\" /> <omgdi:waypoint x= \"201.0\" y= \"145.0\" /> <omgdi:waypoint x= \"300.0\" y= \"145.0\" /> </bpmndi:BPMNEdge> <bpmndi:BPMNEdge bpmnElement= \"sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" id= \"BPMNEdge_sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" > <omgdi:waypoint x= \"400.0\" y= \"145.0\" /> <omgdi:waypoint x= \"466.0\" y= \"145.0\" /> <omgdi:waypoint x= \"466.0\" y= \"92.0\" /> <omgdi:waypoint x= \"562.0\" y= \"92.0\" /> </bpmndi:BPMNEdge> </bpmndi:BPMNPlane> </bpmndi:BPMNDiagram> </definitions> The delegate 'hello.js': // Hello from the Enterprise Javascript delegate console . info ( \"Hello from the Javascript Engine!\" ); // manipulating process variables throughout the execution context var process = require ( \"bpm/v4/process\" ); var execution = process . getExecutionContext (); process . setVariable ( execution . getId (), \"variable2\" , \"value2\" ); try { console . info ( \"variable1: \" + process . getVariable ( execution . getId (), \"variable1\" )); console . info ( \"variable2: \" + process . getVariable ( execution . getId (), \"variable2\" )); } catch ( e ) { console . error ( e . message ); } Delegate parameters: Type: ServiceType Class: org.eclipse.dirigible.bpm.flowable.DirigibleCallDelegate Field for Service Callback: handler (e.g. 'bpmFlows/hello.js') Field for Service Engine Type: type (e.g. 'javascript') Functions Function Description Returns start(key, parameters) Starts a process by its key and initial parameters and returns the process instance id string getExecutionContext() Returns the execution context object ExecutionContext Objects ExecutionContext Function Description Returns getId() Returns the id from the execution context string isActive() Returns the isActive flag from the execution context string isScope() Returns the isScope flag from the execution context string isConcurrent() Returns the isConcurrent flag from the execution context string isEnded() Returns the isEnded flag from the execution context string isEventScope() Returns the isEventScope flag from the execution context string isMultiInstanceRoot() Returns the isMultiInstanceRoot flag from the execution context string isCountEnabled() Returns the isCountEnabled flag from the execution context string suspensionState() Returns the suspensionState flag from the execution context string startTime() Returns the start time from the execution context string eventSubscriptionCount() Returns the event subscription count from the execution context string taskCount() Returns the task count from the execution context string jobCount() Returns the job count from the execution context string timerJobCount() Returns the timer job count from the execution context string suspendedJobCount() Returns the suspended job count from the execution context string deadLetterJobCount() Returns the dead letter job count from the execution context string variableCount() Returns the variable count from the execution context string identityLinkCount() Returns the identity link count from the execution context string processDefinitionId() Returns the process definition id from the execution context string processDefinitionKey() Returns the process definition key from the execution context string activityId() Returns the activity id from the execution context string processInstanceId() Returns the process instance id from the execution context string parentId() Returns the parent process id from the execution context string rootProcessInstanceId() Returns the root process instance id from the execution context string forcedUpdate() Returns the forcedUpdate flag from the execution context string revision() Returns the revision from the execution context string tenantId() Returns the tenant id from the execution context string","title":"BPM Process"},{"location":"bpm-process/#bpm-process","text":"BPM Process object is used to access and manage the BPM process within the underlying engine. Overview Module: bpm/v4/process Alias: bpm/process Definition: https://github.com/eclipse/dirigible/issues/227 Source: /bpm/v4/process.js Facade: BpmFacade Status: stable","title":"BPM Process"},{"location":"bpm-process/#basic-usage","text":"The service which starts the process: var process = require ( \"bpm/v4/process\" ); process . start ( \"hello\" , { variable1 : \"value1\" }); The process definition: <?xml version='1.0' encoding='UTF-8'?> <definitions xmlns= \"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd= \"http://www.w3.org/2001/XMLSchema\" xmlns:flowable= \"http://flowable.org/bpmn\" xmlns:bpmndi= \"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc= \"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi= \"http://www.omg.org/spec/DD/20100524/DI\" typeLanguage= \"http://www.w3.org/2001/XMLSchema\" expressionLanguage= \"http://www.w3.org/1999/XPath\" targetNamespace= \"http://www.flowable.org/processdef\" > <process id= \"hello\" name= \"hello\" isExecutable= \"true\" > <startEvent id= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" /> <serviceTask id= \"sayHello\" name= \"SayHello\" flowable:class= \"org.eclipse.dirigible.bpm.flowable.DirigibleCallDelegate\" > <extensionElements> <flowable:field name= \"handler\" > <flowable:string> <![CDATA[bpmFlows/hello.js]]> </flowable:string> </flowable:field> </extensionElements> </serviceTask> <sequenceFlow id= \"sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" sourceRef= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" targetRef= \"sayHello\" /> <endEvent id= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" /> <sequenceFlow id= \"sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" sourceRef= \"sayHello\" targetRef= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" /> </process> <bpmndi:BPMNDiagram id= \"BPMNDiagram_hello\" > <bpmndi:BPMNPlane bpmnElement= \"hello\" id= \"BPMNPlane_hello\" > <bpmndi:BPMNShape bpmnElement= \"sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" id= \"BPMNShape_sid-3334E861-7999-4B89-B8B0-11724BA17A3E\" > <omgdc:Bounds height= \"30.0\" width= \"30.0\" x= \"103.0\" y= \"78.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNShape bpmnElement= \"sayHello\" id= \"BPMNShape_sayHello\" > <omgdc:Bounds height= \"80.0\" width= \"100.0\" x= \"300.0\" y= \"105.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNShape bpmnElement= \"sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" id= \"BPMNShape_sid-70B488C1-384A-4E19-8091-1B12D1AEC7FD\" > <omgdc:Bounds height= \"28.0\" width= \"28.0\" x= \"562.0\" y= \"78.0\" /> </bpmndi:BPMNShape> <bpmndi:BPMNEdge bpmnElement= \"sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" id= \"BPMNEdge_sid-797626AE-B2F6-4C00-ABEE-FB30ADC177E4\" > <omgdi:waypoint x= \"133.0\" y= \"93.0\" /> <omgdi:waypoint x= \"201.0\" y= \"93.0\" /> <omgdi:waypoint x= \"201.0\" y= \"145.0\" /> <omgdi:waypoint x= \"300.0\" y= \"145.0\" /> </bpmndi:BPMNEdge> <bpmndi:BPMNEdge bpmnElement= \"sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" id= \"BPMNEdge_sid-645847E8-C959-48BD-816B-2E9CC4A2F08A\" > <omgdi:waypoint x= \"400.0\" y= \"145.0\" /> <omgdi:waypoint x= \"466.0\" y= \"145.0\" /> <omgdi:waypoint x= \"466.0\" y= \"92.0\" /> <omgdi:waypoint x= \"562.0\" y= \"92.0\" /> </bpmndi:BPMNEdge> </bpmndi:BPMNPlane> </bpmndi:BPMNDiagram> </definitions> The delegate 'hello.js': // Hello from the Enterprise Javascript delegate console . info ( \"Hello from the Javascript Engine!\" ); // manipulating process variables throughout the execution context var process = require ( \"bpm/v4/process\" ); var execution = process . getExecutionContext (); process . setVariable ( execution . getId (), \"variable2\" , \"value2\" ); try { console . info ( \"variable1: \" + process . getVariable ( execution . getId (), \"variable1\" )); console . info ( \"variable2: \" + process . getVariable ( execution . getId (), \"variable2\" )); } catch ( e ) { console . error ( e . message ); }","title":"Basic Usage"},{"location":"bpm-process/#delegate-parameters","text":"Type: ServiceType Class: org.eclipse.dirigible.bpm.flowable.DirigibleCallDelegate Field for Service Callback: handler (e.g. 'bpmFlows/hello.js') Field for Service Engine Type: type (e.g. 'javascript')","title":"Delegate parameters:"},{"location":"bpm-process/#functions","text":"Function Description Returns start(key, parameters) Starts a process by its key and initial parameters and returns the process instance id string getExecutionContext() Returns the execution context object ExecutionContext","title":"Functions"},{"location":"bpm-process/#objects","text":"","title":"Objects"},{"location":"bpm-process/#executioncontext","text":"Function Description Returns getId() Returns the id from the execution context string isActive() Returns the isActive flag from the execution context string isScope() Returns the isScope flag from the execution context string isConcurrent() Returns the isConcurrent flag from the execution context string isEnded() Returns the isEnded flag from the execution context string isEventScope() Returns the isEventScope flag from the execution context string isMultiInstanceRoot() Returns the isMultiInstanceRoot flag from the execution context string isCountEnabled() Returns the isCountEnabled flag from the execution context string suspensionState() Returns the suspensionState flag from the execution context string startTime() Returns the start time from the execution context string eventSubscriptionCount() Returns the event subscription count from the execution context string taskCount() Returns the task count from the execution context string jobCount() Returns the job count from the execution context string timerJobCount() Returns the timer job count from the execution context string suspendedJobCount() Returns the suspended job count from the execution context string deadLetterJobCount() Returns the dead letter job count from the execution context string variableCount() Returns the variable count from the execution context string identityLinkCount() Returns the identity link count from the execution context string processDefinitionId() Returns the process definition id from the execution context string processDefinitionKey() Returns the process definition key from the execution context string activityId() Returns the activity id from the execution context string processInstanceId() Returns the process instance id from the execution context string parentId() Returns the parent process id from the execution context string rootProcessInstanceId() Returns the root process instance id from the execution context string forcedUpdate() Returns the forcedUpdate flag from the execution context string revision() Returns the revision from the execution context string tenantId() Returns the tenant id from the execution context string","title":"ExecutionContext"},{"location":"cmis/","text":"CMIS CMIS object is used for access of the underlying Content Management System (CMS) with CMIS API . Overview Module: cms/v4/cmis Alias: cms/cmis Definition: https://github.com/eclipse/dirigible/issues/178 Source: /cms/v4/cmis.js Facade: CmisFacade Status: stable Basic Usage var cmis = require ( \"cms/v4/cmis\" ); var response = require ( \"http/v4/response\" ); var streams = require ( \"io/v4/streams\" ); var cmisSession = cmis . getSession (); var rootFolder = cmisSession . getRootFolder (); var children = rootFolder . getChildren (); response . println ( \"Listing the children of the root folder:\" ); for ( var i in children ) { response . println ( \"Object ID: \" + children [ i ]. getId ()); response . println ( \"Object Name: \" + children [ i ]. getName ()); } var textFileName = \"test.txt\" ; response . println ( \"Creating a simple text file, \" + textFileName ); var mimetype = \"text/plain; charset=UTF-8\" ; var content = \"This is some test content.\" ; var filename = textFileName ; var outputStream = streams . createByteArrayOutputStream (); outputStream . writeText ( content ); var bytes = outputStream . getBytes (); var inputStream = streams . createByteArrayInputStream ( bytes ); var contentStream = cmisSession . getObjectFactory (). createContentStream ( filename , bytes . length , mimetype , inputStream ); var properties = {}; properties [ cmis . OBJECT_TYPE_ID ] = cmis . OBJECT_TYPE_DOCUMENT ; properties [ cmis . NAME ] = filename ; var newDocument ; try { newDocument = rootFolder . createDocument ( properties , contentStream , cmis . VERSIONING_STATE_MAJOR ); } catch ( e ) { response . println ( \"Error: \" + e ); } var documentId = newDocument . getId (); response . println ( \"Document ID: \" + documentId ); children = rootFolder . getChildren (); response . println ( \"Listing the children of the root folder again:\" ); for ( var i in children ) { response . println ( \"Object ID: \" + children [ i ]. getId ()); response . println ( \"Object Name: \" + children [ i ]. getName ()); response . println ( \"Object Type: \" + children [ i ]. getType ()); } // Get the contents of the file var doc = cmisSession . getObject ( documentId ); contentStream = doc . getContentStream (); // returns null if the document has no content if ( contentStream !== null ) { content = contentStream . getStream (). readText (); response . println ( \"Contents of \" + filename + \" are: \" + content ); } else { response . println ( \"No content.\" ); } response . println ( \"Deleting the newly created document\" ); if ( newDocument ) { newDocument . delete (); } response . flush (); response . close (); Functions Function Description Returns getSession() Returns the CMIS connection session to the CMS system Session Objects Session Function Description Returns getRepositoryInfo() Returns the information about the CMIS repository RepositoryInfo getObjectFactory() Returns the ObjectFactory utility ObjectFactory getRootFolder() Returns the root folder of this repository Folder getObject() Returns a CMIS Object by name CmisObject getObjectByPath() Returns a CMIS Object by path CmisObject RepositoryInfo Function Description Returns getId() Returns the ID of the CMIS repository string getName() Returns the Name of the CMIS repository string ObjectFactory Function Description Returns createContentStream() Returns a newly created ContentStream object ContentStream ContentStream Function Description Returns getStream() Returns the InputStream of this ContentStream object streams.InputStream CmisObject Function Description Returns getId() Returns the ID of this CmisObject string getName() Returns the Name of this CmisObject string getType() Returns the Type of this CmisObject string delete() Deletes this CmisObject string rename(newName) Renames this CmisObject - Folder Function Description Returns getId() Returns the ID of this Folder string getName() Returns the Name of this Folder string getPath() Returns the Path of this Folder string createFolder(properties) Creates a new folder under this Folder Folder createDocument(properties, contentStream, versioningState) Creates a new document under this Folder Document getChildren() Returns an array of CmisObject sub-elements of this Folder array of CmisObject isRootFolder() Returns true if this Folder is a root folder and false otherwise boolean getFolderParent() Returns the parent Folder of this Folder Folder delete() Deletes this Folder string rename(newName) Renames this Folder - Document Function Description Returns getId() Returns the ID of this Document string getName() Returns the Name of this Document string delete() Deletes this Document string getContentStream() Returns the ContentStream representing the contents of this Document ContentStream rename(newName) Renames this Document - Constants Base Constant Description Type NAME Value is cmis:name string OBJECT_ID Value is cmis:objectId string OBJECT_TYPE_ID Value is cmis:objectTypeId string BASE_TYPE_ID Value is cmis:baseTypeId string CREATED_BY Value is cmis:createdBy string CREATION_DATE Value is cmis:creationDate string LAST_MODIFIED_BY Value is cmis:lastModifiedBy string LAST_MODIFICATION_DATE Value is cmis:lastModificationDate string CHANGE_TOKEN Value is mis:changeToken string Document Constant Description Type IS_IMMUTABLE Value is cmis:isImmutable string IS_LATEST_VERSION Value is cmis:isLatestVersion string IS_MAJOR_VERSION Value is cmis:isMajorVersion string IS_LATEST_MAJOR_VERSION Value is cmis:isLatestMajorVersion string VERSION_LABEL Value is cmis:versionLabel string VERSION_SERIES_ID Value is ccmis:versionSeriesId string IS_VERSION_SERIES_CHECKED_OUT Value is cmis:isVersionSeriesCheckedOut string VERSION_SERIES_CHECKED_OUT_BY Value is cmis:versionSeriesCheckedOutBy string VERSION_SERIES_CHECKED_OUT_ID Value is cmis:versionSeriesCheckedOutId string CHECKIN_COMMENT Value is cmis:checkinComment string CONTENT_STREAM_LENGTH Value is cmis:contentStreamLength string CONTENT_STREAM_MIME_TYPE Value is cmis:contentStreamMimeType string CONTENT_STREAM_FILE_NAME Value is cmis:contentStreamFileName string CONTENT_STREAM_ID Value is cmis:contentStreamId string Folder Constant Description Type PARENT_ID Value is cmis:parentId string ALLOWED_CHILD_OBJECT_TYPE_IDS Value is cmis:allowedChildObjectTypeIds string PATH Value is cmis:path string Relationship Constant Description Type SOURCE_ID Value is cmis:sourceId string TARGET_ID Value is cmis:targetId string Relationship Constant Description Type POLICY_TEXT Value is cmis:policyText string Versioning States Constant Description Type VERSIONING_STATE_NONE Value is none string VERSIONING_STATE_MAJOR Value is major string VERSIONING_STATE_MINOR Value is minor string VERSIONING_STATE_CHECKEDOUT Value is checkedout string Object Types Constant Description Type OBJECT_TYPE_DOCUMENT Value is cmis:document string OBJECT_TYPE_FOLDER Value is cmis:folder string OBJECT_TYPE_RELATIONSHIP Value is cmis:relationship string OBJECT_TYPE_POLICY Value is cmis:policy string OBJECT_TYPE_ITEM Value is cmis:item string OBJECT_TYPE_SECONDARY Value is cmis:secondary string","title":"CMIS"},{"location":"cmis/#cmis","text":"CMIS object is used for access of the underlying Content Management System (CMS) with CMIS API . Overview Module: cms/v4/cmis Alias: cms/cmis Definition: https://github.com/eclipse/dirigible/issues/178 Source: /cms/v4/cmis.js Facade: CmisFacade Status: stable","title":"CMIS"},{"location":"cmis/#basic-usage","text":"var cmis = require ( \"cms/v4/cmis\" ); var response = require ( \"http/v4/response\" ); var streams = require ( \"io/v4/streams\" ); var cmisSession = cmis . getSession (); var rootFolder = cmisSession . getRootFolder (); var children = rootFolder . getChildren (); response . println ( \"Listing the children of the root folder:\" ); for ( var i in children ) { response . println ( \"Object ID: \" + children [ i ]. getId ()); response . println ( \"Object Name: \" + children [ i ]. getName ()); } var textFileName = \"test.txt\" ; response . println ( \"Creating a simple text file, \" + textFileName ); var mimetype = \"text/plain; charset=UTF-8\" ; var content = \"This is some test content.\" ; var filename = textFileName ; var outputStream = streams . createByteArrayOutputStream (); outputStream . writeText ( content ); var bytes = outputStream . getBytes (); var inputStream = streams . createByteArrayInputStream ( bytes ); var contentStream = cmisSession . getObjectFactory (). createContentStream ( filename , bytes . length , mimetype , inputStream ); var properties = {}; properties [ cmis . OBJECT_TYPE_ID ] = cmis . OBJECT_TYPE_DOCUMENT ; properties [ cmis . NAME ] = filename ; var newDocument ; try { newDocument = rootFolder . createDocument ( properties , contentStream , cmis . VERSIONING_STATE_MAJOR ); } catch ( e ) { response . println ( \"Error: \" + e ); } var documentId = newDocument . getId (); response . println ( \"Document ID: \" + documentId ); children = rootFolder . getChildren (); response . println ( \"Listing the children of the root folder again:\" ); for ( var i in children ) { response . println ( \"Object ID: \" + children [ i ]. getId ()); response . println ( \"Object Name: \" + children [ i ]. getName ()); response . println ( \"Object Type: \" + children [ i ]. getType ()); } // Get the contents of the file var doc = cmisSession . getObject ( documentId ); contentStream = doc . getContentStream (); // returns null if the document has no content if ( contentStream !== null ) { content = contentStream . getStream (). readText (); response . println ( \"Contents of \" + filename + \" are: \" + content ); } else { response . println ( \"No content.\" ); } response . println ( \"Deleting the newly created document\" ); if ( newDocument ) { newDocument . delete (); } response . flush (); response . close ();","title":"Basic Usage"},{"location":"cmis/#functions","text":"Function Description Returns getSession() Returns the CMIS connection session to the CMS system Session","title":"Functions"},{"location":"cmis/#objects","text":"","title":"Objects"},{"location":"cmis/#session","text":"Function Description Returns getRepositoryInfo() Returns the information about the CMIS repository RepositoryInfo getObjectFactory() Returns the ObjectFactory utility ObjectFactory getRootFolder() Returns the root folder of this repository Folder getObject() Returns a CMIS Object by name CmisObject getObjectByPath() Returns a CMIS Object by path CmisObject","title":"Session"},{"location":"cmis/#repositoryinfo","text":"Function Description Returns getId() Returns the ID of the CMIS repository string getName() Returns the Name of the CMIS repository string","title":"RepositoryInfo"},{"location":"cmis/#objectfactory","text":"Function Description Returns createContentStream() Returns a newly created ContentStream object ContentStream","title":"ObjectFactory"},{"location":"cmis/#contentstream","text":"Function Description Returns getStream() Returns the InputStream of this ContentStream object streams.InputStream","title":"ContentStream"},{"location":"cmis/#cmisobject","text":"Function Description Returns getId() Returns the ID of this CmisObject string getName() Returns the Name of this CmisObject string getType() Returns the Type of this CmisObject string delete() Deletes this CmisObject string rename(newName) Renames this CmisObject -","title":"CmisObject"},{"location":"cmis/#folder","text":"Function Description Returns getId() Returns the ID of this Folder string getName() Returns the Name of this Folder string getPath() Returns the Path of this Folder string createFolder(properties) Creates a new folder under this Folder Folder createDocument(properties, contentStream, versioningState) Creates a new document under this Folder Document getChildren() Returns an array of CmisObject sub-elements of this Folder array of CmisObject isRootFolder() Returns true if this Folder is a root folder and false otherwise boolean getFolderParent() Returns the parent Folder of this Folder Folder delete() Deletes this Folder string rename(newName) Renames this Folder -","title":"Folder"},{"location":"cmis/#document","text":"Function Description Returns getId() Returns the ID of this Document string getName() Returns the Name of this Document string delete() Deletes this Document string getContentStream() Returns the ContentStream representing the contents of this Document ContentStream rename(newName) Renames this Document -","title":"Document"},{"location":"cmis/#constants","text":"","title":"Constants"},{"location":"cmis/#base","text":"Constant Description Type NAME Value is cmis:name string OBJECT_ID Value is cmis:objectId string OBJECT_TYPE_ID Value is cmis:objectTypeId string BASE_TYPE_ID Value is cmis:baseTypeId string CREATED_BY Value is cmis:createdBy string CREATION_DATE Value is cmis:creationDate string LAST_MODIFIED_BY Value is cmis:lastModifiedBy string LAST_MODIFICATION_DATE Value is cmis:lastModificationDate string CHANGE_TOKEN Value is mis:changeToken string","title":"Base"},{"location":"cmis/#document_1","text":"Constant Description Type IS_IMMUTABLE Value is cmis:isImmutable string IS_LATEST_VERSION Value is cmis:isLatestVersion string IS_MAJOR_VERSION Value is cmis:isMajorVersion string IS_LATEST_MAJOR_VERSION Value is cmis:isLatestMajorVersion string VERSION_LABEL Value is cmis:versionLabel string VERSION_SERIES_ID Value is ccmis:versionSeriesId string IS_VERSION_SERIES_CHECKED_OUT Value is cmis:isVersionSeriesCheckedOut string VERSION_SERIES_CHECKED_OUT_BY Value is cmis:versionSeriesCheckedOutBy string VERSION_SERIES_CHECKED_OUT_ID Value is cmis:versionSeriesCheckedOutId string CHECKIN_COMMENT Value is cmis:checkinComment string CONTENT_STREAM_LENGTH Value is cmis:contentStreamLength string CONTENT_STREAM_MIME_TYPE Value is cmis:contentStreamMimeType string CONTENT_STREAM_FILE_NAME Value is cmis:contentStreamFileName string CONTENT_STREAM_ID Value is cmis:contentStreamId string","title":"Document"},{"location":"cmis/#folder_1","text":"Constant Description Type PARENT_ID Value is cmis:parentId string ALLOWED_CHILD_OBJECT_TYPE_IDS Value is cmis:allowedChildObjectTypeIds string PATH Value is cmis:path string","title":"Folder"},{"location":"cmis/#relationship","text":"Constant Description Type SOURCE_ID Value is cmis:sourceId string TARGET_ID Value is cmis:targetId string","title":"Relationship"},{"location":"cmis/#relationship_1","text":"Constant Description Type POLICY_TEXT Value is cmis:policyText string","title":"Relationship"},{"location":"cmis/#versioning-states","text":"Constant Description Type VERSIONING_STATE_NONE Value is none string VERSIONING_STATE_MAJOR Value is major string VERSIONING_STATE_MINOR Value is minor string VERSIONING_STATE_CHECKEDOUT Value is checkedout string","title":"Versioning States"},{"location":"cmis/#object-types","text":"Constant Description Type OBJECT_TYPE_DOCUMENT Value is cmis:document string OBJECT_TYPE_FOLDER Value is cmis:folder string OBJECT_TYPE_RELATIONSHIP Value is cmis:relationship string OBJECT_TYPE_POLICY Value is cmis:policy string OBJECT_TYPE_ITEM Value is cmis:item string OBJECT_TYPE_SECONDARY Value is cmis:secondary string","title":"Object Types"},{"location":"console/","text":"Console Console object is used to write messages to the default logging output. It has several log levels INFO , WARNING , ERROR , TRACE . Overview Module: built-in Definition: https://github.com/eclipse/dirigible/issues/46 Source: /core/v4/console.js Facade: ConsoleFacade Status: stable Basic Usage console . info ( \"Info message: %s\" , \"Hello World!\" ); console . error ( \"Error message.\" ); console . warn ( \"Warning message.\" ); console . debug ( \"Debug message.\" ); console . log ( \"Log message.\" ); console . trace ( \"Trace.\" ); Functions Function Description Returns info(message, parameters) Logs a message with level INFO with formatting * - error(message, parameters) Logs a message with level ERROR with formatting * - warn(message, parameters) Logs a message with level WARN with formatting * - debug(message, parameters) Logs a message with level DEBUG with formatting * - log(message) Logs a raw message with level INFO - trace(message, parameters) Logs a message with level ERROR with the full stack trace - Formatting support is based on the standard Java Formatter","title":"Console"},{"location":"console/#console","text":"Console object is used to write messages to the default logging output. It has several log levels INFO , WARNING , ERROR , TRACE . Overview Module: built-in Definition: https://github.com/eclipse/dirigible/issues/46 Source: /core/v4/console.js Facade: ConsoleFacade Status: stable","title":"Console"},{"location":"console/#basic-usage","text":"console . info ( \"Info message: %s\" , \"Hello World!\" ); console . error ( \"Error message.\" ); console . warn ( \"Warning message.\" ); console . debug ( \"Debug message.\" ); console . log ( \"Log message.\" ); console . trace ( \"Trace.\" );","title":"Basic Usage"},{"location":"console/#functions","text":"Function Description Returns info(message, parameters) Logs a message with level INFO with formatting * - error(message, parameters) Logs a message with level ERROR with formatting * - warn(message, parameters) Logs a message with level WARN with formatting * - debug(message, parameters) Logs a message with level DEBUG with formatting * - log(message) Logs a raw message with level INFO - trace(message, parameters) Logs a message with level ERROR with the full stack trace - Formatting support is based on the standard Java Formatter","title":"Functions"},{"location":"logging/","text":"Logging Logging API using high-performance underlying framework - logback . Overview Module: log/v4/logging Alias: log/logging Definition: https://github.com/eclipse/dirigible/issues/121 Source: /log/v4/logging.js Facade: LogFacade Status: stable Basic Usage var logging = require ( \"log/v4/logging\" ); var logger = logging . getLogger ( \"org.eclipse.dirigible.mylogger\" ); logger . debug ( \"Hello from {} {}!\" , \"My\" , \"Logger\" ); logger . error ( \"Oops\" , new Error ( \"Something wrong\" )); Functions Function Description Returns getLogger(name) Returns the Logger object by this name Logger Objects Logger Function Description Returns info(message, args?) Logs the message with the INFO log level - warn(message, args?) Logs the message with the WARN log level - error(message, args?) Logs the message with the ERROR log level - debug(message, args?) Logs the message with the DEBUG log level - trace(message, args?) Logs the message with the TRACE log level - log(message, level, args?) Logs the message with the provided log level and optional message parameters - infoError(message, error) Logs the error with the stack trace with the INFO log level - warnError(message, error) Logs the error with the stack trace with the WARN log level - errorError(message, error) Logs the error with the stack trace with the ERROR log level - debugError(message, error) Logs the error with the stack trace with the DEBUG log level - traceError(message, error) Logs the error with the stack trace with the TRACE log level - setLevel(level) Sets the log level ('INFO', 'WARN', 'ERROR', 'DEBUG', 'TRACE') -","title":"Logging"},{"location":"logging/#logging","text":"Logging API using high-performance underlying framework - logback . Overview Module: log/v4/logging Alias: log/logging Definition: https://github.com/eclipse/dirigible/issues/121 Source: /log/v4/logging.js Facade: LogFacade Status: stable","title":"Logging"},{"location":"logging/#basic-usage","text":"var logging = require ( \"log/v4/logging\" ); var logger = logging . getLogger ( \"org.eclipse.dirigible.mylogger\" ); logger . debug ( \"Hello from {} {}!\" , \"My\" , \"Logger\" ); logger . error ( \"Oops\" , new Error ( \"Something wrong\" ));","title":"Basic Usage"},{"location":"logging/#functions","text":"Function Description Returns getLogger(name) Returns the Logger object by this name Logger","title":"Functions"},{"location":"logging/#objects","text":"","title":"Objects"},{"location":"logging/#logger","text":"Function Description Returns info(message, args?) Logs the message with the INFO log level - warn(message, args?) Logs the message with the WARN log level - error(message, args?) Logs the message with the ERROR log level - debug(message, args?) Logs the message with the DEBUG log level - trace(message, args?) Logs the message with the TRACE log level - log(message, level, args?) Logs the message with the provided log level and optional message parameters - infoError(message, error) Logs the error with the stack trace with the INFO log level - warnError(message, error) Logs the error with the stack trace with the WARN log level - errorError(message, error) Logs the error with the stack trace with the ERROR log level - debugError(message, error) Logs the error with the stack trace with the DEBUG log level - traceError(message, error) Logs the error with the stack trace with the TRACE log level - setLevel(level) Sets the log level ('INFO', 'WARN', 'ERROR', 'DEBUG', 'TRACE') -","title":"Logger"},{"location":"mail/","text":"Mail Mail object is used to send e-mails through the mail service. Overview Module: mail/v4/client Alias: mail/client Definition: https://github.com/eclipse/dirigible/issues/108 Source: /mail/v4/client.js Facade: MailFacade Status: stable Basic Usage var response = require ( \"http/v4/response\" ); var mail = require ( \"mail/v4/client\" ); var from = \"dirigible@eclipse.org\" ; var to = \"example@gmail.com\" ; var subject = \"Subject\" ; var content = \"<h1>Content<h1>\" ; var subType = \"html\" ; mail . send ( from , to , subject , content , subType ); response . println ( \"Mail sent\" ); Advance Usage var response = require ( \"http/v4/response\" ); var mail = require ( \"mail/v4/client\" ); var mailConfig = { \"mail.user\" : \"<your-user>\" , \"mail.password\" : \"<your-password>\" , \"mail.transport.protocol\" : \"smtps\" , \"mail.smtps.host\" : \"smtp.gmail.com\" , \"mail.smtps.port\" : \"465\" , \"mail.smtps.auth\" : \"true\" }; var mailClient = mail . getClient ( mailConfig ); var from = \"dirigible@gmail.com\" ; var recipients = { to : \"example@gmail.com\" , cc : [ \"example1@gmail.com\" , \"example2@sap.com\" ], bcc : \"example3@sap.com\" }; var subject = \"Subject\" ; var content = \"<h1>Content</h1>\" ; var subType = \"html\" ; mailClient . send ( from , recipients , subject , content , subType ); response . println ( \"Mail sent\" ); Functions Function Description Returns getClient(options) Get mail client with the provided MailClientOptions , if no options are provided, the default mail client configuration will be used MailClient send(from, recipients, subject, text, subType) Send mail using the default mail client configuration to MailRecipients - Objects MailClient Property Description Type send(from, recipients, subject, text, subType) Send mail to MailRecipients MailClient function MailClientOptions Property Description Type mail.user The mailbox user string mail.password The mailbox password string mail.transport.protocol (optional) The mail transport protocol, default is smtps string mail.smtps.host The mail SMPTPS host string mail.smtps.port The mail SMPTPS port number as string mail.smtps.auth Enable/Disable mail SMPTPS authentication boolean as string mail.smtp.host The mail SMPTP host string mail.smtp.port The mail SMPTP port number as string mail.smtp.auth Enable/Disable mail SMPTP authentication boolean as string Addition mail client options can be found here: - SMTP/SMTPS - IMAP - POP3 MailRecipients Property Description Type to The to recipient(s) string or Array of strings cc The cc recipient(s) string or Array of strings bcc The bcc recipient(s) string or Array of strings","title":"Mail"},{"location":"mail/#mail","text":"Mail object is used to send e-mails through the mail service. Overview Module: mail/v4/client Alias: mail/client Definition: https://github.com/eclipse/dirigible/issues/108 Source: /mail/v4/client.js Facade: MailFacade Status: stable","title":"Mail"},{"location":"mail/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var mail = require ( \"mail/v4/client\" ); var from = \"dirigible@eclipse.org\" ; var to = \"example@gmail.com\" ; var subject = \"Subject\" ; var content = \"<h1>Content<h1>\" ; var subType = \"html\" ; mail . send ( from , to , subject , content , subType ); response . println ( \"Mail sent\" );","title":"Basic Usage"},{"location":"mail/#advance-usage","text":"var response = require ( \"http/v4/response\" ); var mail = require ( \"mail/v4/client\" ); var mailConfig = { \"mail.user\" : \"<your-user>\" , \"mail.password\" : \"<your-password>\" , \"mail.transport.protocol\" : \"smtps\" , \"mail.smtps.host\" : \"smtp.gmail.com\" , \"mail.smtps.port\" : \"465\" , \"mail.smtps.auth\" : \"true\" }; var mailClient = mail . getClient ( mailConfig ); var from = \"dirigible@gmail.com\" ; var recipients = { to : \"example@gmail.com\" , cc : [ \"example1@gmail.com\" , \"example2@sap.com\" ], bcc : \"example3@sap.com\" }; var subject = \"Subject\" ; var content = \"<h1>Content</h1>\" ; var subType = \"html\" ; mailClient . send ( from , recipients , subject , content , subType ); response . println ( \"Mail sent\" );","title":"Advance Usage"},{"location":"mail/#functions","text":"Function Description Returns getClient(options) Get mail client with the provided MailClientOptions , if no options are provided, the default mail client configuration will be used MailClient send(from, recipients, subject, text, subType) Send mail using the default mail client configuration to MailRecipients -","title":"Functions"},{"location":"mail/#objects","text":"","title":"Objects"},{"location":"mail/#mailclient","text":"Property Description Type send(from, recipients, subject, text, subType) Send mail to MailRecipients MailClient function","title":"MailClient"},{"location":"mail/#mailclientoptions","text":"Property Description Type mail.user The mailbox user string mail.password The mailbox password string mail.transport.protocol (optional) The mail transport protocol, default is smtps string mail.smtps.host The mail SMPTPS host string mail.smtps.port The mail SMPTPS port number as string mail.smtps.auth Enable/Disable mail SMPTPS authentication boolean as string mail.smtp.host The mail SMPTP host string mail.smtp.port The mail SMPTP port number as string mail.smtp.auth Enable/Disable mail SMPTP authentication boolean as string Addition mail client options can be found here: - SMTP/SMTPS - IMAP - POP3","title":"MailClientOptions"},{"location":"mail/#mailrecipients","text":"Property Description Type to The to recipient(s) string or Array of strings cc The cc recipient(s) string or Array of strings bcc The bcc recipient(s) string or Array of strings","title":"MailRecipients"},{"location":"user/","text":"User User gives the information about the currently logged in user, if any. Overview Module: security/v4/user Alias: security/user Definition: https://github.com/eclipse/dirigible/issues/17 Source: /security/v4/user.js Facade: UserFacade Status: stable Basic Usage var user = require ( \"security/v4/user\" ); var response = require ( \"http/v4/response\" ); response . println ( \"[UserName]: \" + user . getName ()); response . println ( \"[Is in Role]: \" + user . isInRole ( \"Developer\" )); response . flush (); response . close (); Functions Function Description Returns getName() Returns the name of the currently logged in user, if any or null string isInRole(role) Returns true if the user has a given role and false otherwise boolean","title":"User"},{"location":"user/#user","text":"User gives the information about the currently logged in user, if any. Overview Module: security/v4/user Alias: security/user Definition: https://github.com/eclipse/dirigible/issues/17 Source: /security/v4/user.js Facade: UserFacade Status: stable","title":"User"},{"location":"user/#basic-usage","text":"var user = require ( \"security/v4/user\" ); var response = require ( \"http/v4/response\" ); response . println ( \"[UserName]: \" + user . getName ()); response . println ( \"[Is in Role]: \" + user . isInRole ( \"Developer\" )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"user/#functions","text":"Function Description Returns getName() Returns the name of the currently logged in user, if any or null string isInRole(role) Returns true if the user has a given role and false otherwise boolean","title":"Functions"},{"location":"core/configurations/","text":"Configurations Overview Module: core/v4/configurations Alias: core/configurations Definition: N/A Source: /core/v4/configurations.js Facade: ConfigurationFacade Status: stable Basic Usage var rs = require ( \"http/v4/rs\" ); var configurations = require ( \"core/v4/configurations\" ); rs . service () . resource ( \"\" ) . get ( function ( ctx , request , response ) { let credentials = { envVar1 : configurations . get ( \"ENV_VAR_1\" ), envVar2 : configurations . get ( \"ENV_VAR_2\" ) }; response . println ( JSON . stringify ( credentials )); }) . put ( function ( ctx , request , response ) { let credentials = request . getJSON (); configurations . set ( \"ENV_VAR_1\" , credentials . envVar1 ); configurations . set ( \"ENV_VAR_2\" , credentials . envVar2 ); }) . execute (); Functions Function Description Returns get(key, defaultValue)() Returns the value for the specified key, or the default value string set(key, value) Sets a value, for the specified key - getKeys() Returns an arrays of keys array of string load(path) Loads a configuration from a properties file at path - update() Updates the loaded configurations -","title":"Configurations"},{"location":"core/configurations/#configurations","text":"Overview Module: core/v4/configurations Alias: core/configurations Definition: N/A Source: /core/v4/configurations.js Facade: ConfigurationFacade Status: stable","title":"Configurations"},{"location":"core/configurations/#basic-usage","text":"var rs = require ( \"http/v4/rs\" ); var configurations = require ( \"core/v4/configurations\" ); rs . service () . resource ( \"\" ) . get ( function ( ctx , request , response ) { let credentials = { envVar1 : configurations . get ( \"ENV_VAR_1\" ), envVar2 : configurations . get ( \"ENV_VAR_2\" ) }; response . println ( JSON . stringify ( credentials )); }) . put ( function ( ctx , request , response ) { let credentials = request . getJSON (); configurations . set ( \"ENV_VAR_1\" , credentials . envVar1 ); configurations . set ( \"ENV_VAR_2\" , credentials . envVar2 ); }) . execute ();","title":"Basic Usage"},{"location":"core/configurations/#functions","text":"Function Description Returns get(key, defaultValue)() Returns the value for the specified key, or the default value string set(key, value) Sets a value, for the specified key - getKeys() Returns an arrays of keys array of string load(path) Loads a configuration from a properties file at path - update() Updates the loaded configurations -","title":"Functions"},{"location":"core/context/","text":"Context Context object is used to store and manage properties for a single execution flow (with or without HTTP request) Overview Module: core/v4/context Alias: core/context Definition: https://github.com/eclipse/dirigible/issues/31 Source: /core/v4/context.js Facade: ContextFacade Status: stable Basic Usage var context = require ( 'core/v4/context' ); var response = require ( 'http/v4/response' ); context . set ( \"attr1\" , \"value1\" ); var attr = context . get ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close (); Functions Function Description Returns get(key) Returns the value per key from the context parameters string set(key, value) Sets the value per key to the context parameters -","title":"Context"},{"location":"core/context/#context","text":"Context object is used to store and manage properties for a single execution flow (with or without HTTP request) Overview Module: core/v4/context Alias: core/context Definition: https://github.com/eclipse/dirigible/issues/31 Source: /core/v4/context.js Facade: ContextFacade Status: stable","title":"Context"},{"location":"core/context/#basic-usage","text":"var context = require ( 'core/v4/context' ); var response = require ( 'http/v4/response' ); context . set ( \"attr1\" , \"value1\" ); var attr = context . get ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"core/context/#functions","text":"Function Description Returns get(key) Returns the value per key from the context parameters string set(key, value) Sets the value per key to the context parameters -","title":"Functions"},{"location":"core/destinations/","text":"Destinations Destinations object is used to access properties usually stored and managed by external service. Overview Module: core/v4/destinations Alias: core/destinations Definition: https://github.com/eclipse/dirigible/issues/445 Source: /core/v4/destinations.js Facade: DestinationsFacade Status: stable Basic Usage var destinations = require ( \"core/v4/destinations\" ); var destination = {}; destination . name1 = \"value1\" ; destinations . set ( \"destination1\" , destination ); var result = destinations . get ( \"destination1\" ); result . name1 === \"value1\" ; Functions Function Description Returns get(name) Returns an object representing the destination object set(name, destination) Sets the destination object under the given name -","title":"Destinations"},{"location":"core/destinations/#destinations","text":"Destinations object is used to access properties usually stored and managed by external service. Overview Module: core/v4/destinations Alias: core/destinations Definition: https://github.com/eclipse/dirigible/issues/445 Source: /core/v4/destinations.js Facade: DestinationsFacade Status: stable","title":"Destinations"},{"location":"core/destinations/#basic-usage","text":"var destinations = require ( \"core/v4/destinations\" ); var destination = {}; destination . name1 = \"value1\" ; destinations . set ( \"destination1\" , destination ); var result = destinations . get ( \"destination1\" ); result . name1 === \"value1\" ;","title":"Basic Usage"},{"location":"core/destinations/#functions","text":"Function Description Returns get(name) Returns an object representing the destination object set(name, destination) Sets the destination object under the given name -","title":"Functions"},{"location":"core/env/","text":"Env Env object is used for access of the environment variables. Overview Module: core/v4/env Alias: core/env Definition: https://github.com/eclipse/dirigible/issues/29 Source: /core/v4/env.js Facade: EnvFacade Status: stable Basic Usage var env = require ( \"core/v4/env\" ); var response = require ( \"http/v4/response\" ); var os = env . get ( \"os.name\" ); response . println ( \"[OS]: \" + os ); response . flush (); response . close (); Functions Function Description Returns get(key) Returns the value per key from the environments variables string list() Returns the list of the environments variables in JSON formatted string string","title":"Env"},{"location":"core/env/#env","text":"Env object is used for access of the environment variables. Overview Module: core/v4/env Alias: core/env Definition: https://github.com/eclipse/dirigible/issues/29 Source: /core/v4/env.js Facade: EnvFacade Status: stable","title":"Env"},{"location":"core/env/#basic-usage","text":"var env = require ( \"core/v4/env\" ); var response = require ( \"http/v4/response\" ); var os = env . get ( \"os.name\" ); response . println ( \"[OS]: \" + os ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"core/env/#functions","text":"Function Description Returns get(key) Returns the value per key from the environments variables string list() Returns the list of the environments variables in JSON formatted string string","title":"Functions"},{"location":"core/extensions/","text":"Extensions Overview Module: core/v4/extensions Alias: core/extensions Definition: https://github.com/eclipse/dirigible/issues/18 Source: /core/v4/extensions.js Facade: ExtensionsFacade Status: stable Basic Usage var extensions = require ( \"core/v4/extensions\" ); var response = require ( \"http/v4/response\" ); var mainmenu = []; var menuExtensions = extensions . getExtensions ( \"ide-menu\" ); for ( var i = 0 ; i < menuExtensions . length ; i ++ ) { var module = menuExtensions [ i ]; menuExtension = require ( module ); var menu = menuExtension . getMenu (); mainmenu . push ( menu ); } response . println ( JSON . stringify ( mainmenu )); Functions Function Description Returns getExtensionPoints() Returns an array of the extension points names array of string getExtensions(extensionPoint) Returns an array of the extensions names for the specified extension point array of string","title":"Extensions"},{"location":"core/extensions/#extensions","text":"Overview Module: core/v4/extensions Alias: core/extensions Definition: https://github.com/eclipse/dirigible/issues/18 Source: /core/v4/extensions.js Facade: ExtensionsFacade Status: stable","title":"Extensions"},{"location":"core/extensions/#basic-usage","text":"var extensions = require ( \"core/v4/extensions\" ); var response = require ( \"http/v4/response\" ); var mainmenu = []; var menuExtensions = extensions . getExtensions ( \"ide-menu\" ); for ( var i = 0 ; i < menuExtensions . length ; i ++ ) { var module = menuExtensions [ i ]; menuExtension = require ( module ); var menu = menuExtension . getMenu (); mainmenu . push ( menu ); } response . println ( JSON . stringify ( mainmenu ));","title":"Basic Usage"},{"location":"core/extensions/#functions","text":"Function Description Returns getExtensionPoints() Returns an array of the extension points names array of string getExtensions(extensionPoint) Returns an array of the extensions names for the specified extension point array of string","title":"Functions"},{"location":"core/globals/","text":"Globals Globals object is used to store and manage properties in the global store. Overview Module: core/v4/globals Alias: core/globals Definition: https://github.com/eclipse/dirigible/issues/30 Source: /core/v4/globals.js Facade: GlobalsFacade Status: stable Basic Usage var globals = require ( \"core/v4/globals\" ); var response = require ( \"http/v4/response\" ); globals . set ( \"attr1\" , \"value1\" ); var attr = globals . get ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close (); Functions Function Description Returns get(key) Returns the value per key from the global parameters string set(key, value) Sets the value per key to the global parameters -","title":"Globals"},{"location":"core/globals/#globals","text":"Globals object is used to store and manage properties in the global store. Overview Module: core/v4/globals Alias: core/globals Definition: https://github.com/eclipse/dirigible/issues/30 Source: /core/v4/globals.js Facade: GlobalsFacade Status: stable","title":"Globals"},{"location":"core/globals/#basic-usage","text":"var globals = require ( \"core/v4/globals\" ); var response = require ( \"http/v4/response\" ); globals . set ( \"attr1\" , \"value1\" ); var attr = globals . get ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"core/globals/#functions","text":"Function Description Returns get(key) Returns the value per key from the global parameters string set(key, value) Sets the value per key to the global parameters -","title":"Functions"},{"location":"core/threads/","text":"Thread Threads utility is used to implement multi-threading algorithms - creating and starting own threads, synchronize functions, wait and notify of lock objects. Overview Module: core/v4/threads Alias: core/threads Definition: https://github.com/eclipse/dirigible/issues/389 Source: /core/v4/threads.js Facade: none Status: stable Basic Usage var threads = require ( \"core/v4/threads\" ); var response = require ( \"http/v4/response\" ); response . setContentType ( \"text/plain; charset=UTF-8\" ); // Define a JavaScript function function runnable () { response . println ( \"Hello World from a Thread!\" ); }; // Pass a JavaScript function var worker = threads . create ( runnable , \"I am a thread\" ); response . println ( worker . getName ()); worker . start (); worker . join (); // to be able to print to the response response . flush (); response . close (); Functions Function Description Returns create(runnable, name) Creates a new thread by a callback function and a name Thread sleep(millis) Suspends the execution of the current thread - current() Returns the current thread Thread sync(f) Synchronize a function of an object synchronized function Objects Thread Function Description Returns start() Starts the thread - interrupt() Interrupts the execution of a thread - join() Waits this thread to die - getId() Returns the ID of the thread long getName() Returns the Name of the thread string isAlive() Returns true if the thread is still alive boolean Object Function Description Returns wait(millis) Waits a given period of time until continuing the execution of the current thread or until another thread call notify of this object - notify() Wakes up a single thread waiting for this object - notifyAll() Wakes up all the threads waiting for this object -","title":"Thread"},{"location":"core/threads/#thread","text":"Threads utility is used to implement multi-threading algorithms - creating and starting own threads, synchronize functions, wait and notify of lock objects. Overview Module: core/v4/threads Alias: core/threads Definition: https://github.com/eclipse/dirigible/issues/389 Source: /core/v4/threads.js Facade: none Status: stable","title":"Thread"},{"location":"core/threads/#basic-usage","text":"var threads = require ( \"core/v4/threads\" ); var response = require ( \"http/v4/response\" ); response . setContentType ( \"text/plain; charset=UTF-8\" ); // Define a JavaScript function function runnable () { response . println ( \"Hello World from a Thread!\" ); }; // Pass a JavaScript function var worker = threads . create ( runnable , \"I am a thread\" ); response . println ( worker . getName ()); worker . start (); worker . join (); // to be able to print to the response response . flush (); response . close ();","title":"Basic Usage"},{"location":"core/threads/#functions","text":"Function Description Returns create(runnable, name) Creates a new thread by a callback function and a name Thread sleep(millis) Suspends the execution of the current thread - current() Returns the current thread Thread sync(f) Synchronize a function of an object synchronized function","title":"Functions"},{"location":"core/threads/#objects","text":"","title":"Objects"},{"location":"core/threads/#thread_1","text":"Function Description Returns start() Starts the thread - interrupt() Interrupts the execution of a thread - join() Waits this thread to die - getId() Returns the ID of the thread long getName() Returns the Name of the thread string isAlive() Returns true if the thread is still alive boolean","title":"Thread"},{"location":"core/threads/#object","text":"Function Description Returns wait(millis) Waits a given period of time until continuing the execution of the current thread or until another thread call notify of this object - notify() Wakes up a single thread waiting for this object - notifyAll() Wakes up all the threads waiting for this object -","title":"Object"},{"location":"database/","text":"Database Standard access to the registered relational data sources. Overview Module: db/v4/database Alias: db/database Definition: https://github.com/eclipse/dirigible/issues/21 Source: /db/v4/database.js Facade: DatabaseFacade Status: stable Basic Usage var database = require ( \"db/v4/database\" ); var response = require ( \"http/v4/response\" ); var connection = database . getConnection (); try { var statement = connection . prepareStatement ( \"select * from DIRIGIBLE_EXTENSIONS\" ); var resultSet = statement . executeQuery (); while ( resultSet . next ()) { response . println ( \"[path]: \" + resultSet . getString ( \"EXTENSION_LOCATION\" )); } resultSet . close (); statement . close (); } catch ( e ) { console . trace ( e ); response . println ( e . message ); } finally { connection . close (); } response . flush (); response . close (); Functions Function Description Returns getDatabaseTypes() Returns the list of the available databases in this instance list of string getDataSources(databaseType) Returns the list of the available data-sources in this instance for the given databaseType . In case the databaseType is not present, the data-sources of the default database type are listed list of string createDataSource(name, driver, url, username, password, properties) Creates a named dynamic datasource based on the provided parameters - getMetadata(databaseType, datasourceName) Returns the metadata of the selected databaseType and datasourceName . In case the datasourceName parameter is omitted, then the default data-source for the selected database is taken. In case the databaseType is omitted, then the default data-source of the default database type is taken metadata object getConnection(databaseType, datasourceName) Establishes a connection to the selected data-source. Both parameters are optional Connection Objects Connection Function Description Returns prepareStatement(sql) Creates a prepared statement by the given SQL script Statement close() Closes the Connection and returns it to the pool - commit() Commits the current transaction - getAutoCommit() Returns the value of the auto commit setting boolean getCatalog() Returns the Catalog name, which the Connection is related to string getSchema() Returns the Schema name, which the Connection is related to string getTransactionIsolation() Returns the value of the transaction isolation setting int isClosed() Returns true if the Connection is already closed and false otherwise boolean isReadOnly() Returns true if the Connection is opened in a read only state and false otherwise boolean isValid() Returns true if the Connection is still valid and false otherwise boolean rollback() Rolls the current transaction back - setAutoCommit(autoCommit) Sets the value of the auto commit setting - setCatalog(catalog) Sets the Catalog name, which the Connection is related to - setSchema(schema) Sets the Schema name, which the Connection is related to - setReadOnly(readOnly) Sets the value of the read only state - setTransactionIsolation(transactionIsolation) Sets the value of the transaction isolation setting - Statement Function Description Returns close() Closes the Statement - executeQuery() Executes a query and returns a ResultSet ResultSet executeUpdate() Executes an update SQL statement - setNull(index, value) Sets a parameter as null - setBoolean(index, value) Sets a parameter of type boolean - setDate(index, value) Sets a parameter of type date - setDouble(index, value) Sets a parameter of type double - setFloat(index, value) Sets a parameter of type float - setInt(index, value) Sets a parameter of type integer - setLong(index, value) Sets a parameter of type long - setShort(index, value) Sets a parameter of type short - setString(index, value) Sets a parameter of type string - setTime(index, value) Sets a parameter of type time - setTimestamp(index, value) Sets a parameter of type timestamp - ResultSet Function Description Returns close() Closes the ResultSet - getBoolean(identifier) Returns a value of type boolean boolean getDate(identifier) Returns a value of type date Date getDouble(identifier) Returns a value of type double double getFloat(identifier) Returns a value of type float float getInt(identifier) Returns a value of type integer int getLong(identifier) Returns a value of type long long getShort(identifier) Returns a value of type short short getString(identifier) Returns a value of type string string getTime(identifier) Returns a value of type time Date getTimestamp(identifier) Returns a value of type timestamp Date isAfterLast() Returns true if the ResultSet is iterated at the end and false otherwise boolean isBeforeFirst() Returns true if the ResultSet is iterated at the beginning and false otherwise boolean isFirst() Returns true if the ResultSet is iterated at the first row and false otherwise boolean isLast() Returns true if the ResultSet is iterated at the last row and false otherwise boolean isClosed() Returns true if the ResultSet is already closed and false otherwise boolean next() Iterates the ResultSet to the next row and returns true if it is successful. Returns false if no more rows remain. boolean","title":"Database"},{"location":"database/#database","text":"Standard access to the registered relational data sources. Overview Module: db/v4/database Alias: db/database Definition: https://github.com/eclipse/dirigible/issues/21 Source: /db/v4/database.js Facade: DatabaseFacade Status: stable","title":"Database"},{"location":"database/#basic-usage","text":"var database = require ( \"db/v4/database\" ); var response = require ( \"http/v4/response\" ); var connection = database . getConnection (); try { var statement = connection . prepareStatement ( \"select * from DIRIGIBLE_EXTENSIONS\" ); var resultSet = statement . executeQuery (); while ( resultSet . next ()) { response . println ( \"[path]: \" + resultSet . getString ( \"EXTENSION_LOCATION\" )); } resultSet . close (); statement . close (); } catch ( e ) { console . trace ( e ); response . println ( e . message ); } finally { connection . close (); } response . flush (); response . close ();","title":"Basic Usage"},{"location":"database/#functions","text":"Function Description Returns getDatabaseTypes() Returns the list of the available databases in this instance list of string getDataSources(databaseType) Returns the list of the available data-sources in this instance for the given databaseType . In case the databaseType is not present, the data-sources of the default database type are listed list of string createDataSource(name, driver, url, username, password, properties) Creates a named dynamic datasource based on the provided parameters - getMetadata(databaseType, datasourceName) Returns the metadata of the selected databaseType and datasourceName . In case the datasourceName parameter is omitted, then the default data-source for the selected database is taken. In case the databaseType is omitted, then the default data-source of the default database type is taken metadata object getConnection(databaseType, datasourceName) Establishes a connection to the selected data-source. Both parameters are optional Connection","title":"Functions"},{"location":"database/#objects","text":"","title":"Objects"},{"location":"database/#connection","text":"Function Description Returns prepareStatement(sql) Creates a prepared statement by the given SQL script Statement close() Closes the Connection and returns it to the pool - commit() Commits the current transaction - getAutoCommit() Returns the value of the auto commit setting boolean getCatalog() Returns the Catalog name, which the Connection is related to string getSchema() Returns the Schema name, which the Connection is related to string getTransactionIsolation() Returns the value of the transaction isolation setting int isClosed() Returns true if the Connection is already closed and false otherwise boolean isReadOnly() Returns true if the Connection is opened in a read only state and false otherwise boolean isValid() Returns true if the Connection is still valid and false otherwise boolean rollback() Rolls the current transaction back - setAutoCommit(autoCommit) Sets the value of the auto commit setting - setCatalog(catalog) Sets the Catalog name, which the Connection is related to - setSchema(schema) Sets the Schema name, which the Connection is related to - setReadOnly(readOnly) Sets the value of the read only state - setTransactionIsolation(transactionIsolation) Sets the value of the transaction isolation setting -","title":"Connection"},{"location":"database/#statement","text":"Function Description Returns close() Closes the Statement - executeQuery() Executes a query and returns a ResultSet ResultSet executeUpdate() Executes an update SQL statement - setNull(index, value) Sets a parameter as null - setBoolean(index, value) Sets a parameter of type boolean - setDate(index, value) Sets a parameter of type date - setDouble(index, value) Sets a parameter of type double - setFloat(index, value) Sets a parameter of type float - setInt(index, value) Sets a parameter of type integer - setLong(index, value) Sets a parameter of type long - setShort(index, value) Sets a parameter of type short - setString(index, value) Sets a parameter of type string - setTime(index, value) Sets a parameter of type time - setTimestamp(index, value) Sets a parameter of type timestamp -","title":"Statement"},{"location":"database/#resultset","text":"Function Description Returns close() Closes the ResultSet - getBoolean(identifier) Returns a value of type boolean boolean getDate(identifier) Returns a value of type date Date getDouble(identifier) Returns a value of type double double getFloat(identifier) Returns a value of type float float getInt(identifier) Returns a value of type integer int getLong(identifier) Returns a value of type long long getShort(identifier) Returns a value of type short short getString(identifier) Returns a value of type string string getTime(identifier) Returns a value of type time Date getTimestamp(identifier) Returns a value of type timestamp Date isAfterLast() Returns true if the ResultSet is iterated at the end and false otherwise boolean isBeforeFirst() Returns true if the ResultSet is iterated at the beginning and false otherwise boolean isFirst() Returns true if the ResultSet is iterated at the first row and false otherwise boolean isLast() Returns true if the ResultSet is iterated at the last row and false otherwise boolean isClosed() Returns true if the ResultSet is already closed and false otherwise boolean next() Iterates the ResultSet to the next row and returns true if it is successful. Returns false if no more rows remain. boolean","title":"ResultSet"},{"location":"database/dao/","text":"DAO Simplified database access objects utility. Overview Module: db/v4/dao Alias: db/dao Definition: https://github.com/eclipse/dirigible/issues/84 Source: /db/v4/dao.js Facade: none Status: stable Basic Usage var dao = require ( \"db/v4/dao\" ); //create a DAO from configuration var customers = dao . create ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , required : true }, { name : \"employeesNumber\" , column : \"ORG_EMP_NUM\" , type : \"INTEGER\" , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , required : false }] }); //Create CUSTOMERS table customers . createTable (); try { //Create a new customer entity var customerId = customers . insert ({ orgName : \"ACME\" , employeesNumber : 1000 }); //List all customer entities var customersList = customers . list (); //Get a particular customer entity by its id var customer = customers . find ( customerId ); //Update a customer entity property customer . orgDescription = \"ACME is a company\" ; customers . update ( customer ); //Delete a customer entity customers . remove ( customerId ); } finally { //Drop CUSTOMERS table customers . dropTable (); } Functions Function Description Returns create(oConfiguration, loggerName?) Creates new DAO instances from oConfiguraiton JS object, which can be either standard ORM definition or a standard dirigible table definition DAO Objects DAO Function Description Returns insert(entity) inserts array or entity and returns id (or ids of array of entities was supplied as input) any list(oQuerySettings?) lists entities optionally constrained with the supplied query settings Array find(id, expand?, select?) returns an entity by its id(if any), optionally expanding inline the associations defined in expand and optionally constraining the entitiy properties to those specified in select Object update(entity) updates a persistent entity and returns for its dao chaining DAO remove(?id) delete entity by id, or array of ids, or delete all (if not argument is provided). --- count() returns the number of persisted entities Number createTable() Creates a table for persisting entities --- dropTable() Drops the entities table ---","title":"DAO"},{"location":"database/dao/#dao","text":"Simplified database access objects utility. Overview Module: db/v4/dao Alias: db/dao Definition: https://github.com/eclipse/dirigible/issues/84 Source: /db/v4/dao.js Facade: none Status: stable","title":"DAO"},{"location":"database/dao/#basic-usage","text":"var dao = require ( \"db/v4/dao\" ); //create a DAO from configuration var customers = dao . create ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , required : true }, { name : \"employeesNumber\" , column : \"ORG_EMP_NUM\" , type : \"INTEGER\" , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , required : false }] }); //Create CUSTOMERS table customers . createTable (); try { //Create a new customer entity var customerId = customers . insert ({ orgName : \"ACME\" , employeesNumber : 1000 }); //List all customer entities var customersList = customers . list (); //Get a particular customer entity by its id var customer = customers . find ( customerId ); //Update a customer entity property customer . orgDescription = \"ACME is a company\" ; customers . update ( customer ); //Delete a customer entity customers . remove ( customerId ); } finally { //Drop CUSTOMERS table customers . dropTable (); }","title":"Basic Usage"},{"location":"database/dao/#functions","text":"Function Description Returns create(oConfiguration, loggerName?) Creates new DAO instances from oConfiguraiton JS object, which can be either standard ORM definition or a standard dirigible table definition DAO","title":"Functions"},{"location":"database/dao/#objects","text":"","title":"Objects"},{"location":"database/dao/#dao_1","text":"Function Description Returns insert(entity) inserts array or entity and returns id (or ids of array of entities was supplied as input) any list(oQuerySettings?) lists entities optionally constrained with the supplied query settings Array find(id, expand?, select?) returns an entity by its id(if any), optionally expanding inline the associations defined in expand and optionally constraining the entitiy properties to those specified in select Object update(entity) updates a persistent entity and returns for its dao chaining DAO remove(?id) delete entity by id, or array of ids, or delete all (if not argument is provided). --- count() returns the number of persisted entities Number createTable() Creates a table for persisting entities --- dropTable() Drops the entities table ---","title":"DAO"},{"location":"database/query/","text":"Query Simplified query functionality, accepts SQL script and query parameters and returns the result-set as a JSON object. Overview Module: db/v4/query Alias: db/query Definition: https://github.com/eclipse/dirigible/issues/48 Source: /db/v4/query.js Facade: DatabaseFacade Status: stable Basic Usage var query = require ( \"db/v4/query\" ); var response = require ( \"http/v4/response\" ); var sql = \"SELECT * FROM DIRIGIBLE_EXTENSIONS WHERE EXTENSION_EXTENSIONPOINT_NAME = ?\" ; var resultset = query . execute ( sql , [ \"ide-editor\" ]); response . println ( JSON . stringify ( resultset )); response . flush (); response . close (); Functions Function Description Returns execute(sql, parameters?, databaseType?, datasourceName?) Executes a SQL query against the selected databaseType and datasourceName with the provided parameters result-set as JSON object parameters array supports primitives e.g. [1, 'John', 34.56] or objects in format {'type':'[DATA_TYPE]', 'value':[VALUE]} e.g. [1, {'type':'CHAR', 'value':'ISBN19202323322'}]","title":"Query"},{"location":"database/query/#query","text":"Simplified query functionality, accepts SQL script and query parameters and returns the result-set as a JSON object. Overview Module: db/v4/query Alias: db/query Definition: https://github.com/eclipse/dirigible/issues/48 Source: /db/v4/query.js Facade: DatabaseFacade Status: stable","title":"Query"},{"location":"database/query/#basic-usage","text":"var query = require ( \"db/v4/query\" ); var response = require ( \"http/v4/response\" ); var sql = \"SELECT * FROM DIRIGIBLE_EXTENSIONS WHERE EXTENSION_EXTENSIONPOINT_NAME = ?\" ; var resultset = query . execute ( sql , [ \"ide-editor\" ]); response . println ( JSON . stringify ( resultset )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"database/query/#functions","text":"Function Description Returns execute(sql, parameters?, databaseType?, datasourceName?) Executes a SQL query against the selected databaseType and datasourceName with the provided parameters result-set as JSON object parameters array supports primitives e.g. [1, 'John', 34.56] or objects in format {'type':'[DATA_TYPE]', 'value':[VALUE]} e.g. [1, {'type':'CHAR', 'value':'ISBN19202323322'}]","title":"Functions"},{"location":"database/sequence/","text":"Sequence Functionality for manipulating the database sequence objects. Overview Module: db/v4/sequence Alias: db/sequence Definition: https://github.com/eclipse/dirigible/issues/124 Source: /db/v4/sequence.js Facade: DatabaseFacade Status: stable Basic Usage var sequence = require ( \"db/v4/sequence\" ); var response = require ( \"http/v4/response\" ); var value = sequence . nextval ( \"MYSEQUENCE\" ); response . println ( value ); response . flush (); response . close (); Functions Function Description Returns nextval(name, databaseType?, datasourceName?) Increment the sequence with the given name and returns the value. Creates the sequence implicitly if it deos not exist. integer create(name, databaseType?, datasourceName?) Creates the sequence by the given name . - drop(name, databaseType?, datasourceName?) Remove the sequence by the given name . -","title":"Sequence"},{"location":"database/sequence/#sequence","text":"Functionality for manipulating the database sequence objects. Overview Module: db/v4/sequence Alias: db/sequence Definition: https://github.com/eclipse/dirigible/issues/124 Source: /db/v4/sequence.js Facade: DatabaseFacade Status: stable","title":"Sequence"},{"location":"database/sequence/#basic-usage","text":"var sequence = require ( \"db/v4/sequence\" ); var response = require ( \"http/v4/response\" ); var value = sequence . nextval ( \"MYSEQUENCE\" ); response . println ( value ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"database/sequence/#functions","text":"Function Description Returns nextval(name, databaseType?, datasourceName?) Increment the sequence with the given name and returns the value. Creates the sequence implicitly if it deos not exist. integer create(name, databaseType?, datasourceName?) Creates the sequence by the given name . - drop(name, databaseType?, datasourceName?) Remove the sequence by the given name . -","title":"Functions"},{"location":"database/sql/","text":"SQL Type-safe SQL builders with multi-dialect support. Overview Module: db/v4/sql Alias: db/sql Definition: https://github.com/eclipse/dirigible/issues/125 Source: /db/v4/sql.js Facade: DatabaseFacade Status: stable Basic Usage var sql = require ( \"db/v4/sql\" ); var response = require ( \"http/v4/response\" ); var script = sql . getDialect (). select (). column ( \"FIRST_NAME\" ). column ( \"LAST_NAME\" ). from ( \"CUSTOMERS\" ). build (); response . println ( script ); response . flush (); response . close (); Functions Function Description Returns getDialect(connection?) Returns the dialect based on the provided connection if any or the default one otherwise Dialect Objects Dialect Function Description Returns select() Returns a Select SQL builder Select insert() Returns an Insert SQL builder Insert update() Returns an Update SQL builder Update delete() Returns a Delete SQL builder Delete nextval(name) Returns a Nextval SQL builder by a given name Nextval create() Returns a Create SQL builder Create drop() Returns a Drop SQL builder Drop Select Function Description Returns distinct() Sets the distinct flag and returns the current Select SQL builder Select forUpdate() Sets the forUpdate flag and returns the current Select SQL builder Select column(name) Adds a column with the given name and returns the current Select SQL builder. Use * for all Select from(table, alias?) Adds a table with the given table name and alias and returns the current Select SQL builder Select join(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select innerJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select outerJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select leftJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select rightJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select fullJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select where(condition) Adds a where clause with the given condition and returns the current Select SQL builder Select order(column, asc?) Adds an order clause with the given column and optionally the ascending or descending order and returns the current Select SQL builder Select group(column) Adds a group by clause and returns the current Select SQL builder Select union(select) Adds an union clause and returns the current Select SQL builder Select having(condition) Adds an having clause and returns the current Select SQL builder Select limit() Sets the limit number and returns the current Select SQL builder Select offset() Sets the offset number and returns the current Select SQL builder Select build() Generate and returns the Select SQL statement as a string String Insert Function Description Returns into(table) Sets the table name and returns the current Insert SQL builder Insert column(name) Adds a column name and returns the current Insert SQL builder Insert value(param) Adds a value param and returns the current Insert SQL builder. Use ? for prepared statements afterwards. Insert select(statement) Sets the select statement if needed and returns the current Insert SQL builder Insert build() Generate and returns the Insert SQL statement as a string String Update Function Description Returns table(name) Sets the table name and returns the current Update SQL builder Update set(column, value) Adds a column - value pair and returns the current Update SQL builder Update where(condition) Adds a where clause with the given condition and returns the current Update SQL builder Update build() Generate and returns the Update SQL statement as a string String Delete Function Description Returns from(table) Sets the table name and returns the current Delete SQL builder Delete where(condition) Adds a where clause with the given condition and returns the current Delete SQL builder Delete build() Generate and returns the Delete SQL statement as a string String Nextval Function Description Returns build() Generate and returns the Nextval SQL statement as a string String Create Function Description Returns table(name) Returns a CreateTable SQL builder CreateTable view(name) Returns a CreateView SQL builder CreateView sequence(name) Returns a CreateSequence SQL builder CreateSequence Drop Function Description Returns table(name) Returns a DropTable SQL builder DropTable view(name) Returns a DropView SQL builder DropView sequence(name) Returns a DropSequence SQL builder DropSequence CreateTable Function Description Returns column(name, type, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a column definition and returns the current CreateTable SQL builder CreateTable columnVarchar(name, length, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a VARCHAR column definition and returns the current CreateTable SQL builder CreateTable columnChar(name, length, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a CHAR column definition and returns the current CreateTable SQL builder CreateTable columnDate(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DATE column definition and returns the current CreateTable SQL builder CreateTable columnTime(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TIME column definition and returns the current CreateTable SQL builder CreateTable columnTimestamp(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TIMESTAMP column definition and returns the current CreateTable SQL builder CreateTable columnInteger(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a INTEGER column definition and returns the current CreateTable SQL builder CreateTable columnTinyint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TINYINT column definition and returns the current CreateTable SQL builder CreateTable columnBigint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a BIGINT column definition and returns the current CreateTable SQL builder CreateTable columnSmallint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a SMALLINT column definition and returns the current CreateTable SQL builder CreateTable columnDate(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DATE column definition and returns the current CreateTable SQL builder CreateTable columnReal(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a REAL column definition and returns the current CreateTable SQL builder CreateTable columnDouble(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DOUBLE PRECISION column definition and returns the current CreateTable SQL builder CreateTable columnBoolean(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a BOOLEAN column definition and returns the current CreateTable SQL builder CreateTable columnBlob(name, isNullable?, args?) Adds a BLOB column definition and returns the current CreateTable SQL builder CreateTable columnDecimal(column, precision, scale, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DECIMAL column definition and returns the current CreateTable SQL builder CreateTable primaryKey(columns, name?) Sets a primary key definition and returns the current CreateTable SQL builder CreateTable foreignKey(name, columns, referencedTable, referencedColumns) Adds a foreign key definition and returns the current CreateTable SQL builder CreateTable unique(name, columns) Adds an unique index definition and returns the current CreateTable SQL builder CreateTable check(name, expression) Adds a check definition and returns the current CreateTable SQL builder CreateTable build() Generate and returns the CreateTable SQL statement as a string String CreateView Function Description Returns column(name) Adds a column definition and returns the current VieweTable SQL builder VieweTable asSelect(select) Sets the select definition and returns the current VieweTable SQL builder VieweTable build() Generate and returns the VieweTable SQL statement as a string String CreateSequence Function Description Returns build() Generate and returns the Sequence SQL statement as a string String DropTable Function Description Returns build() Generate and returns the DropTable SQL statement as a string String DropView Function Description Returns build() Generate and returns the DropView SQL statement as a string String DropSequence Function Description Returns build() Generate and returns the DropSequence SQL statement as a string String","title":"SQL"},{"location":"database/sql/#sql","text":"Type-safe SQL builders with multi-dialect support. Overview Module: db/v4/sql Alias: db/sql Definition: https://github.com/eclipse/dirigible/issues/125 Source: /db/v4/sql.js Facade: DatabaseFacade Status: stable","title":"SQL"},{"location":"database/sql/#basic-usage","text":"var sql = require ( \"db/v4/sql\" ); var response = require ( \"http/v4/response\" ); var script = sql . getDialect (). select (). column ( \"FIRST_NAME\" ). column ( \"LAST_NAME\" ). from ( \"CUSTOMERS\" ). build (); response . println ( script ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"database/sql/#functions","text":"Function Description Returns getDialect(connection?) Returns the dialect based on the provided connection if any or the default one otherwise Dialect","title":"Functions"},{"location":"database/sql/#objects","text":"","title":"Objects"},{"location":"database/sql/#dialect","text":"Function Description Returns select() Returns a Select SQL builder Select insert() Returns an Insert SQL builder Insert update() Returns an Update SQL builder Update delete() Returns a Delete SQL builder Delete nextval(name) Returns a Nextval SQL builder by a given name Nextval create() Returns a Create SQL builder Create drop() Returns a Drop SQL builder Drop","title":"Dialect"},{"location":"database/sql/#select","text":"Function Description Returns distinct() Sets the distinct flag and returns the current Select SQL builder Select forUpdate() Sets the forUpdate flag and returns the current Select SQL builder Select column(name) Adds a column with the given name and returns the current Select SQL builder. Use * for all Select from(table, alias?) Adds a table with the given table name and alias and returns the current Select SQL builder Select join(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select innerJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select outerJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select leftJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select rightJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select fullJoin(table, on, alias?) Adds a join clause and returns the current Select SQL builder Select where(condition) Adds a where clause with the given condition and returns the current Select SQL builder Select order(column, asc?) Adds an order clause with the given column and optionally the ascending or descending order and returns the current Select SQL builder Select group(column) Adds a group by clause and returns the current Select SQL builder Select union(select) Adds an union clause and returns the current Select SQL builder Select having(condition) Adds an having clause and returns the current Select SQL builder Select limit() Sets the limit number and returns the current Select SQL builder Select offset() Sets the offset number and returns the current Select SQL builder Select build() Generate and returns the Select SQL statement as a string String","title":"Select"},{"location":"database/sql/#insert","text":"Function Description Returns into(table) Sets the table name and returns the current Insert SQL builder Insert column(name) Adds a column name and returns the current Insert SQL builder Insert value(param) Adds a value param and returns the current Insert SQL builder. Use ? for prepared statements afterwards. Insert select(statement) Sets the select statement if needed and returns the current Insert SQL builder Insert build() Generate and returns the Insert SQL statement as a string String","title":"Insert"},{"location":"database/sql/#update","text":"Function Description Returns table(name) Sets the table name and returns the current Update SQL builder Update set(column, value) Adds a column - value pair and returns the current Update SQL builder Update where(condition) Adds a where clause with the given condition and returns the current Update SQL builder Update build() Generate and returns the Update SQL statement as a string String","title":"Update"},{"location":"database/sql/#delete","text":"Function Description Returns from(table) Sets the table name and returns the current Delete SQL builder Delete where(condition) Adds a where clause with the given condition and returns the current Delete SQL builder Delete build() Generate and returns the Delete SQL statement as a string String","title":"Delete"},{"location":"database/sql/#nextval","text":"Function Description Returns build() Generate and returns the Nextval SQL statement as a string String","title":"Nextval"},{"location":"database/sql/#create","text":"Function Description Returns table(name) Returns a CreateTable SQL builder CreateTable view(name) Returns a CreateView SQL builder CreateView sequence(name) Returns a CreateSequence SQL builder CreateSequence","title":"Create"},{"location":"database/sql/#drop","text":"Function Description Returns table(name) Returns a DropTable SQL builder DropTable view(name) Returns a DropView SQL builder DropView sequence(name) Returns a DropSequence SQL builder DropSequence","title":"Drop"},{"location":"database/sql/#createtable","text":"Function Description Returns column(name, type, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a column definition and returns the current CreateTable SQL builder CreateTable columnVarchar(name, length, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a VARCHAR column definition and returns the current CreateTable SQL builder CreateTable columnChar(name, length, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a CHAR column definition and returns the current CreateTable SQL builder CreateTable columnDate(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DATE column definition and returns the current CreateTable SQL builder CreateTable columnTime(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TIME column definition and returns the current CreateTable SQL builder CreateTable columnTimestamp(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TIMESTAMP column definition and returns the current CreateTable SQL builder CreateTable columnInteger(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a INTEGER column definition and returns the current CreateTable SQL builder CreateTable columnTinyint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a TINYINT column definition and returns the current CreateTable SQL builder CreateTable columnBigint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a BIGINT column definition and returns the current CreateTable SQL builder CreateTable columnSmallint(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a SMALLINT column definition and returns the current CreateTable SQL builder CreateTable columnDate(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DATE column definition and returns the current CreateTable SQL builder CreateTable columnReal(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a REAL column definition and returns the current CreateTable SQL builder CreateTable columnDouble(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DOUBLE PRECISION column definition and returns the current CreateTable SQL builder CreateTable columnBoolean(name, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a BOOLEAN column definition and returns the current CreateTable SQL builder CreateTable columnBlob(name, isNullable?, args?) Adds a BLOB column definition and returns the current CreateTable SQL builder CreateTable columnDecimal(column, precision, scale, isPrimaryKey?, isNullable?, isUnique?, args?) Adds a DECIMAL column definition and returns the current CreateTable SQL builder CreateTable primaryKey(columns, name?) Sets a primary key definition and returns the current CreateTable SQL builder CreateTable foreignKey(name, columns, referencedTable, referencedColumns) Adds a foreign key definition and returns the current CreateTable SQL builder CreateTable unique(name, columns) Adds an unique index definition and returns the current CreateTable SQL builder CreateTable check(name, expression) Adds a check definition and returns the current CreateTable SQL builder CreateTable build() Generate and returns the CreateTable SQL statement as a string String","title":"CreateTable"},{"location":"database/sql/#createview","text":"Function Description Returns column(name) Adds a column definition and returns the current VieweTable SQL builder VieweTable asSelect(select) Sets the select definition and returns the current VieweTable SQL builder VieweTable build() Generate and returns the VieweTable SQL statement as a string String","title":"CreateView"},{"location":"database/sql/#createsequence","text":"Function Description Returns build() Generate and returns the Sequence SQL statement as a string String","title":"CreateSequence"},{"location":"database/sql/#droptable","text":"Function Description Returns build() Generate and returns the DropTable SQL statement as a string String","title":"DropTable"},{"location":"database/sql/#dropview","text":"Function Description Returns build() Generate and returns the DropView SQL statement as a string String","title":"DropView"},{"location":"database/sql/#dropsequence","text":"Function Description Returns build() Generate and returns the DropSequence SQL statement as a string String","title":"DropSequence"},{"location":"database/update/","text":"Update Simplified update functionality, accepts SQL script and query parameters and returns the result-set as a JSON object. Overview Module: db/v4/update Alias: db/update Definition: https://github.com/eclipse/dirigible/issues/49 Source: /db/v4/update.js Facade: DatabaseFacade Status: stable Basic Usage var update = require ( \"db/v4/update\" ); update . execute ( \"CREATE TABLE MY_TABLE (COLUMN_A INT, COLUMN_B VARCHAR(10))\" ); update . execute ( \"INSERT INTO MY_TABLE VALUES (1, 'ABC')\" ); update . execute ( \"INSERT INTO MY_TABLE VALUES (2, 'DEF')\" ); update . execute ( \"DROP TABLE MY_TABLE\" ); Functions Function Description Returns execute(sql, parameters?, databaseType?, datasourceName?) Executes a SQL update against the selected databaseType and datasourceName with the provided parameters and returns the number of affected rows int parameters array supports primitives e.g. [1, 'John', 34.56] or objects in format {'type':'[DATA_TYPE]', 'value':[VALUE]} e.g. [1, {'type':'CHAR', 'value':'ISBN19202323322'}]","title":"Update"},{"location":"database/update/#update","text":"Simplified update functionality, accepts SQL script and query parameters and returns the result-set as a JSON object. Overview Module: db/v4/update Alias: db/update Definition: https://github.com/eclipse/dirigible/issues/49 Source: /db/v4/update.js Facade: DatabaseFacade Status: stable","title":"Update"},{"location":"database/update/#basic-usage","text":"var update = require ( \"db/v4/update\" ); update . execute ( \"CREATE TABLE MY_TABLE (COLUMN_A INT, COLUMN_B VARCHAR(10))\" ); update . execute ( \"INSERT INTO MY_TABLE VALUES (1, 'ABC')\" ); update . execute ( \"INSERT INTO MY_TABLE VALUES (2, 'DEF')\" ); update . execute ( \"DROP TABLE MY_TABLE\" );","title":"Basic Usage"},{"location":"database/update/#functions","text":"Function Description Returns execute(sql, parameters?, databaseType?, datasourceName?) Executes a SQL update against the selected databaseType and datasourceName with the provided parameters and returns the number of affected rows int parameters array supports primitives e.g. [1, 'John', 34.56] or objects in format {'type':'[DATA_TYPE]', 'value':[VALUE]} e.g. [1, {'type':'CHAR', 'value':'ISBN19202323322'}]","title":"Functions"},{"location":"http/client-async/","text":"Client Async Client Async is used by scripting services to call asynchronously external services via HTTP. Overview Module: http/v4/clientAsync Alias: http/clientAsync Definition: https://github.com/eclipse/dirigible/issues/388 Source: /http/v4/clientAsync.js Facade: HttpClientAsync Status: stable Basic Usage var httpClient = require ( \"http/v4/client\" ); var httpClientAsync = require ( \"http/v4/clientAsync\" ); var clientAsync = httpClientAsync . getInstnace (); var api = 'https://services.odata.org/V4/Northwind/Northwind.svc/' ; var northWindResponse = httpClient . get ( api , { params : [{ name : \"$format\" , value : \"json\" }] }); var northWindEntities = JSON . parse ( northWindResponse . text ); for ( var i = 0 ; i < northWindEntities . value . length ; i ++ ) { clientAsync . getAsync ( api + northWindEntities . value [ i ]. url , { success : function ( response ) { var entity = JSON . parse ( response . text ); console . error ( entity [ \"@odata.context\" ] + \" : \" + entity . value . length ); } }); } clientAsync . execute (); Functions Function Description Returns getAsync(url, config, options) Makes a HTTP GET Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - postAsync(url, config, options) Makes a HTTP POST Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - putAsync(url, config, options) Makes a HTTP PUT Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - deleteAsync(url, config, options) Makes a HTTP DELETE Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - headAsync(url, config, options) Makes a HTTP HEAD Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - traceAsync(url, config, options) Makes a HTTP TRACE Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - Objects HttpResponseCallbackConfig Property Description Type success The success response callback HttpResponseCallback function error The error response callback HttpResponseCallback function cancel The cancel response callback HttpResponseCallback function HttpResponseCallback Parameters Description Type response? The HTTP Response object HttpResponse error? The HTTP Response Error Object HttpResponseError HttpResponse Property Description Type statusCode The Response status code int statusMessage The Response status message string data The Response data array of bytes text The Response data as text string binary Whether the Response data is binary in data or string in text boolean protocol The HTTP version of the Response string headers The Response headers array of HttpHeader HttpResponseError Property Description Type message The error message string HttpHeader Property Description Type name The name of the header string value The value of the header string HttpParam Property Description Type name The name of the param string value The value of the param string HttpOptions Property Description Type data The body of the HTTP Request as binary array of bytes text The body of the HTTP Request as text string files The body of the HTTP Request as files (for POST) array of strings params The body of the HTTP Request as form parameters array of HttpParam binary Whether the body of the HTTP Request is binary boolean characterEncodingEnabled The character encoding enabled parameter. Default is true boolean characterEncoding The character encoding parameter. Default is UTF-8 string contentType The content type parameter. Default is plain/text string headers The Response headers array of HttpHeader proxyHost The proxy host parameter string proxyPort The proxy port parameter int expectContinueEnabled The continue enabled parameter boolean cookieSpec The cookieSpec parameter string redirectsEnabled The redirects enabled parameter boolean relativeRedirectsAllowed The relative redirects allowed parameter boolean circularRedirectsAllowed The circular redirects allowed parameter boolean maxRedirects The max redirects parameter int authenticationEnabled The authentication enabled parameter boolean targetPreferredAuthSchemes The target preferred authentication schemes parameter array of strings proxyPreferredAuthSchemes The proxy preferred authentication schemes parameter array of strings connectionRequestTimeout The connection request timeout parameter int connectTimeout The connect timeout parameter int socketTimeout The socket timeout parameter int contentCompressionEnabled The content compression enabled parameter boolean sslTrustAllEnabled The SSL trust all enabled parameter boolean","title":"Client Async"},{"location":"http/client-async/#client-async","text":"Client Async is used by scripting services to call asynchronously external services via HTTP. Overview Module: http/v4/clientAsync Alias: http/clientAsync Definition: https://github.com/eclipse/dirigible/issues/388 Source: /http/v4/clientAsync.js Facade: HttpClientAsync Status: stable","title":"Client Async"},{"location":"http/client-async/#basic-usage","text":"var httpClient = require ( \"http/v4/client\" ); var httpClientAsync = require ( \"http/v4/clientAsync\" ); var clientAsync = httpClientAsync . getInstnace (); var api = 'https://services.odata.org/V4/Northwind/Northwind.svc/' ; var northWindResponse = httpClient . get ( api , { params : [{ name : \"$format\" , value : \"json\" }] }); var northWindEntities = JSON . parse ( northWindResponse . text ); for ( var i = 0 ; i < northWindEntities . value . length ; i ++ ) { clientAsync . getAsync ( api + northWindEntities . value [ i ]. url , { success : function ( response ) { var entity = JSON . parse ( response . text ); console . error ( entity [ \"@odata.context\" ] + \" : \" + entity . value . length ); } }); } clientAsync . execute ();","title":"Basic Usage"},{"location":"http/client-async/#functions","text":"Function Description Returns getAsync(url, config, options) Makes a HTTP GET Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - postAsync(url, config, options) Makes a HTTP POST Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - putAsync(url, config, options) Makes a HTTP PUT Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - deleteAsync(url, config, options) Makes a HTTP DELETE Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - headAsync(url, config, options) Makes a HTTP HEAD Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback - traceAsync(url, config, options) Makes a HTTP TRACE Async request to a remote service at the URL by the HttpOptions and returns HttpResponse to the HttpResponseCallback -","title":"Functions"},{"location":"http/client-async/#objects","text":"","title":"Objects"},{"location":"http/client-async/#httpresponsecallbackconfig","text":"Property Description Type success The success response callback HttpResponseCallback function error The error response callback HttpResponseCallback function cancel The cancel response callback HttpResponseCallback function","title":"HttpResponseCallbackConfig"},{"location":"http/client-async/#httpresponsecallback","text":"Parameters Description Type response? The HTTP Response object HttpResponse error? The HTTP Response Error Object HttpResponseError","title":"HttpResponseCallback"},{"location":"http/client-async/#httpresponse","text":"Property Description Type statusCode The Response status code int statusMessage The Response status message string data The Response data array of bytes text The Response data as text string binary Whether the Response data is binary in data or string in text boolean protocol The HTTP version of the Response string headers The Response headers array of HttpHeader","title":"HttpResponse"},{"location":"http/client-async/#httpresponseerror","text":"Property Description Type message The error message string","title":"HttpResponseError"},{"location":"http/client-async/#httpheader","text":"Property Description Type name The name of the header string value The value of the header string","title":"HttpHeader"},{"location":"http/client-async/#httpparam","text":"Property Description Type name The name of the param string value The value of the param string","title":"HttpParam"},{"location":"http/client-async/#httpoptions","text":"Property Description Type data The body of the HTTP Request as binary array of bytes text The body of the HTTP Request as text string files The body of the HTTP Request as files (for POST) array of strings params The body of the HTTP Request as form parameters array of HttpParam binary Whether the body of the HTTP Request is binary boolean characterEncodingEnabled The character encoding enabled parameter. Default is true boolean characterEncoding The character encoding parameter. Default is UTF-8 string contentType The content type parameter. Default is plain/text string headers The Response headers array of HttpHeader proxyHost The proxy host parameter string proxyPort The proxy port parameter int expectContinueEnabled The continue enabled parameter boolean cookieSpec The cookieSpec parameter string redirectsEnabled The redirects enabled parameter boolean relativeRedirectsAllowed The relative redirects allowed parameter boolean circularRedirectsAllowed The circular redirects allowed parameter boolean maxRedirects The max redirects parameter int authenticationEnabled The authentication enabled parameter boolean targetPreferredAuthSchemes The target preferred authentication schemes parameter array of strings proxyPreferredAuthSchemes The proxy preferred authentication schemes parameter array of strings connectionRequestTimeout The connection request timeout parameter int connectTimeout The connect timeout parameter int socketTimeout The socket timeout parameter int contentCompressionEnabled The content compression enabled parameter boolean sslTrustAllEnabled The SSL trust all enabled parameter boolean","title":"HttpOptions"},{"location":"http/client/","text":"Client Client is used by scripting services to call external services via HTTP. Overview Module: http/v4/client Alias: http/client Definition: https://github.com/eclipse/dirigible/issues/15 Source: /http/v4/client.js Facade: HttpClientFacade Status: stable Basic Usage var httpClient = require ( \"http/v4/client\" ); var response = require ( \"http/v4/response\" ); var httpResponse = httpClient . get ( \"https://services.odata.org/V4/Northwind/Northwind.svc/\" ); response . println ( httpResponse . statusMessage ); response . println ( httpResponse . text ); response . flush (); response . close (); Functions Function Description Returns get(url, options) Makes a HTTP GET request to a remote service at the URL by the HttpOptions and returns the result HttpResponse post(url, options) Makes a HTTP POST request to a remote service at the URL by the HttpOptions and returns the result HttpResponse put(url, options) Makes a HTTP PUT request to a remote service at the URL by the HttpOptions and returns the result HttpResponse delete(url, options) Makes a HTTP DELETE request to a remote service at the URL by the HttpOptions and returns the result HttpResponse head(url, options) Makes a HTTP HEAD request to a remote service at the URL by the HttpOptions and returns the result HttpResponse trace(url, options) Makes a HTTP TRACE request to a remote service at the URL by the HttpOptions and returns the result HttpResponse Objects HttpResponse Property Description Type statusCode The Response status code int statusMessage The Response status message string data The Response data array of bytes text The Response data as text string binary Whether the Response data is binary in data or string in text boolean protocol The HTTP version of the Response string headers The Response headers array of HttpHeader HttpHeader Property Description Type name The name of the header string value The value of the header string HttpParam Property Description Type name The name of the param string value The value of the param string HttpOptions Property Description Type data The body of the HTTP Request as binary array of bytes text The body of the HTTP Request as text string files The body of the HTTP Request as files (for POST) array of strings params The body of the HTTP Request as form parameters array of HttpParam binary Whether the body of the HTTP Request is binary boolean characterEncodingEnabled The character encoding enabled parameter. Default is true boolean characterEncoding The character encoding parameter. Default is UTF-8 string contentType The content type parameter. Default is plain/text string headers The Response headers array of HttpHeader proxyHost The proxy host parameter string proxyPort The proxy port parameter int expectContinueEnabled The continue enabled parameter boolean cookieSpec The cookieSpec parameter string redirectsEnabled The redirects enabled parameter boolean relativeRedirectsAllowed The relative redirects allowed parameter boolean circularRedirectsAllowed The circular redirects allowed parameter boolean maxRedirects The max redirects parameter int authenticationEnabled The authentication enabled parameter boolean targetPreferredAuthSchemes The target preferred authentication schemes parameter array of strings proxyPreferredAuthSchemes The proxy preferred authentication schemes parameter array of strings connectionRequestTimeout The connection request timeout parameter int connectTimeout The connect timeout parameter int socketTimeout The socket timeout parameter int contentCompressionEnabled The content compression enabled parameter boolean sslTrustAllEnabled The SSL trust all enabled parameter boolean","title":"Client"},{"location":"http/client/#client","text":"Client is used by scripting services to call external services via HTTP. Overview Module: http/v4/client Alias: http/client Definition: https://github.com/eclipse/dirigible/issues/15 Source: /http/v4/client.js Facade: HttpClientFacade Status: stable","title":"Client"},{"location":"http/client/#basic-usage","text":"var httpClient = require ( \"http/v4/client\" ); var response = require ( \"http/v4/response\" ); var httpResponse = httpClient . get ( \"https://services.odata.org/V4/Northwind/Northwind.svc/\" ); response . println ( httpResponse . statusMessage ); response . println ( httpResponse . text ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"http/client/#functions","text":"Function Description Returns get(url, options) Makes a HTTP GET request to a remote service at the URL by the HttpOptions and returns the result HttpResponse post(url, options) Makes a HTTP POST request to a remote service at the URL by the HttpOptions and returns the result HttpResponse put(url, options) Makes a HTTP PUT request to a remote service at the URL by the HttpOptions and returns the result HttpResponse delete(url, options) Makes a HTTP DELETE request to a remote service at the URL by the HttpOptions and returns the result HttpResponse head(url, options) Makes a HTTP HEAD request to a remote service at the URL by the HttpOptions and returns the result HttpResponse trace(url, options) Makes a HTTP TRACE request to a remote service at the URL by the HttpOptions and returns the result HttpResponse","title":"Functions"},{"location":"http/client/#objects","text":"","title":"Objects"},{"location":"http/client/#httpresponse","text":"Property Description Type statusCode The Response status code int statusMessage The Response status message string data The Response data array of bytes text The Response data as text string binary Whether the Response data is binary in data or string in text boolean protocol The HTTP version of the Response string headers The Response headers array of HttpHeader","title":"HttpResponse"},{"location":"http/client/#httpheader","text":"Property Description Type name The name of the header string value The value of the header string","title":"HttpHeader"},{"location":"http/client/#httpparam","text":"Property Description Type name The name of the param string value The value of the param string","title":"HttpParam"},{"location":"http/client/#httpoptions","text":"Property Description Type data The body of the HTTP Request as binary array of bytes text The body of the HTTP Request as text string files The body of the HTTP Request as files (for POST) array of strings params The body of the HTTP Request as form parameters array of HttpParam binary Whether the body of the HTTP Request is binary boolean characterEncodingEnabled The character encoding enabled parameter. Default is true boolean characterEncoding The character encoding parameter. Default is UTF-8 string contentType The content type parameter. Default is plain/text string headers The Response headers array of HttpHeader proxyHost The proxy host parameter string proxyPort The proxy port parameter int expectContinueEnabled The continue enabled parameter boolean cookieSpec The cookieSpec parameter string redirectsEnabled The redirects enabled parameter boolean relativeRedirectsAllowed The relative redirects allowed parameter boolean circularRedirectsAllowed The circular redirects allowed parameter boolean maxRedirects The max redirects parameter int authenticationEnabled The authentication enabled parameter boolean targetPreferredAuthSchemes The target preferred authentication schemes parameter array of strings proxyPreferredAuthSchemes The proxy preferred authentication schemes parameter array of strings connectionRequestTimeout The connection request timeout parameter int connectTimeout The connect timeout parameter int socketTimeout The socket timeout parameter int contentCompressionEnabled The content compression enabled parameter boolean sslTrustAllEnabled The SSL trust all enabled parameter boolean","title":"HttpOptions"},{"location":"http/request/","text":"Request HTTP Request object provided to the scripting services implementation. It contains the headers and parameters coming as input from the HTTP call. Overview Module: http/v4/request Alias: http/request Definition: https://github.com/eclipse/dirigible/issues/12 Source: /http/v4/request.js Facade: HttpRequestFacade Status: stable Basic Usage var request = require ( \"http/v4/request\" ); var response = require ( \"http/v4/response\" ); var method = request . getMethod (); response . println ( \"[Method]: \" + method ); response . flush (); response . close (); Functions Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean getMethod() Returns the HTTP request method - GET, POST, PUT, DELETE, HEAD, TRACE string getRemoteUser() Returns the user name performing the request string getPathInfo() Returns the path info section of the URL string getPathTranslated() Returns the translated path string getHeader(name) Returns the value of the header by name, if any string isUserInRole(role) Returns true if the user has the given role and false otherwise string getAttribute(name) Returns the value of the attribute by name, if any string getAuthType() Returns the authentication type string getCookies() Returns all the cookies from the request array of HttpCookie getAttributeNames() Returns the names of all the attribute array of string getCharacterEncoding() Returns the character encoding string getContentLength() Returns the content length string getHeaders() Returns the array of headers array of HttpHeader getContentType() Returns the content type string getBytes() Returns the content as byte array array of bytes getText() Returns the content as text string getJSON() Returns a JSON object, after parsing the content as text Object getParameter(name) Returns the value of the parameter by name, if any string getHeaderNames() Returns the names of all the headers array of string getParameterNames() Returns the names of all the parameters array of string getParameterValues(name) Returns the values of the parameter by name array of string getParameters() Returns the all the parameters - name and value pairs array of pair getProtocol() Returns the protocol string getScheme() Returns the scheme string getContextPath() Returns the context path string getServerName() Returns the server name string getServerPort() Returns the server port int getQueryString() Returns the query string string getRemoteAddress() Returns the remote address string getRemoteHost() Returns the remote host string setAttribute(name,value) Sets the value of the attribute by name - removeAttribute(name) Sets the value of the attribute by name - getLocale() Returns the locale string string getRequestURI() Returns the request URI string isSecure() Whether the request goes via a secured channel boolean getRequestURL() Returns the request URL string getServicePath() Returns the service path string getRemotePort() Returns the remote port string getLocalName() Returns the local name string getLocalAddress() Returns the local address string getLocalPort() Returns the local port string Objects HttpCookie Property Description Type name The HttpCookie name string value The HttpCookie value string comment The HttpCookie comment section string maxAge The HttpCookie maximum age int path The URI path to which the client should return the HttpCookie string domain The domain name set to this HttpCookie string secure Returns true if the client is sending HttpCookie only over a secure protocol string version Returns the version of the protocol this cookie complies with 0 httpOnly The HttpCookie will not be exposed to the client-side scripting code if true boolean HttpHeader Property Description Type name The name of the header string value The value of the header string","title":"Request"},{"location":"http/request/#request","text":"HTTP Request object provided to the scripting services implementation. It contains the headers and parameters coming as input from the HTTP call. Overview Module: http/v4/request Alias: http/request Definition: https://github.com/eclipse/dirigible/issues/12 Source: /http/v4/request.js Facade: HttpRequestFacade Status: stable","title":"Request"},{"location":"http/request/#basic-usage","text":"var request = require ( \"http/v4/request\" ); var response = require ( \"http/v4/response\" ); var method = request . getMethod (); response . println ( \"[Method]: \" + method ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"http/request/#functions","text":"Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean getMethod() Returns the HTTP request method - GET, POST, PUT, DELETE, HEAD, TRACE string getRemoteUser() Returns the user name performing the request string getPathInfo() Returns the path info section of the URL string getPathTranslated() Returns the translated path string getHeader(name) Returns the value of the header by name, if any string isUserInRole(role) Returns true if the user has the given role and false otherwise string getAttribute(name) Returns the value of the attribute by name, if any string getAuthType() Returns the authentication type string getCookies() Returns all the cookies from the request array of HttpCookie getAttributeNames() Returns the names of all the attribute array of string getCharacterEncoding() Returns the character encoding string getContentLength() Returns the content length string getHeaders() Returns the array of headers array of HttpHeader getContentType() Returns the content type string getBytes() Returns the content as byte array array of bytes getText() Returns the content as text string getJSON() Returns a JSON object, after parsing the content as text Object getParameter(name) Returns the value of the parameter by name, if any string getHeaderNames() Returns the names of all the headers array of string getParameterNames() Returns the names of all the parameters array of string getParameterValues(name) Returns the values of the parameter by name array of string getParameters() Returns the all the parameters - name and value pairs array of pair getProtocol() Returns the protocol string getScheme() Returns the scheme string getContextPath() Returns the context path string getServerName() Returns the server name string getServerPort() Returns the server port int getQueryString() Returns the query string string getRemoteAddress() Returns the remote address string getRemoteHost() Returns the remote host string setAttribute(name,value) Sets the value of the attribute by name - removeAttribute(name) Sets the value of the attribute by name - getLocale() Returns the locale string string getRequestURI() Returns the request URI string isSecure() Whether the request goes via a secured channel boolean getRequestURL() Returns the request URL string getServicePath() Returns the service path string getRemotePort() Returns the remote port string getLocalName() Returns the local name string getLocalAddress() Returns the local address string getLocalPort() Returns the local port string","title":"Functions"},{"location":"http/request/#objects","text":"","title":"Objects"},{"location":"http/request/#httpcookie","text":"Property Description Type name The HttpCookie name string value The HttpCookie value string comment The HttpCookie comment section string maxAge The HttpCookie maximum age int path The URI path to which the client should return the HttpCookie string domain The domain name set to this HttpCookie string secure Returns true if the client is sending HttpCookie only over a secure protocol string version Returns the version of the protocol this cookie complies with 0 httpOnly The HttpCookie will not be exposed to the client-side scripting code if true boolean","title":"HttpCookie"},{"location":"http/request/#httpheader","text":"Property Description Type name The name of the header string value The value of the header string","title":"HttpHeader"},{"location":"http/response/","text":"Response HTTP Response object provided to the scripting services implementation to create the result, which will be sent back to the client. Overview Module: http/v4/response Alias: http/response Definition: https://github.com/eclipse/dirigible/issues/13 Source: /http/v4/response.js Facade: HttpResponseFacade Status: stable Basic Usage var response = require ( \"http/v4/response\" ); response . println ( \"Hello World!\" ); response . flush (); response . close (); Functions Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean print(text) Prints the text to the response body - println(text) Prints the text to the response body with line separator at the end - write(bytes) Prints the bytes array to the response body - isCommitted() Whether response is already committed boolean setContentType() Sets the content type - flush() Flushes the content to the response to the client - close() Closes the response stream to the client - addCookie(cookie) Adds a HttpCookie to the response - containsHeader(name) Checks existence of the header by name boolean encodeURL(url) Returns the encoded url parameter string getCharacterEncoding() Returns the character encoding of the response string encodeRedirectURL() Returns the encoded redirect URL string getContentType() Returns the content type of the response string sendError(code, message) Sends an error instruction to the client with the given code and message . The message parameter is optional - setCharacterEncoding(encoding) Sets the character encoding of the response - sendRedirect(location) Sends a redirect instruction to the client to the given location - setContentLength(length) Sets the content length of the response - setHeader(name, value) Updates a header name/value pair to the response - addHeader(name, value) Adds a header name/value pair to the response - setStatus(status) Sets the status of the response - reset(status) Resets the response - getHeader(name) Returns the header value by name - setLocale(language, country, variant) Sets the locale to the response - getHeaders(name) Returns the array of header values by name array of string getHeaderNames() Returns the names of all the headers array of string getLocale() Returns the locale of the response string getOutputStream() Returns the OutputStream of the response OutputStream Constants Constant Description Type ACCEPTED Status code (202) indicating that a request was accepted for processing, but was not completed. int BAD_GATEWAY Status code (502) indicating that the HTTP server received an invalid response from a server it consulted when acting as a proxy or gateway. int BAD_REQUEST Status code (400) indicating the request sent by the client was syntactically incorrect. int CONFLICT Status code (409) indicating that the request could not be completed due to a conflict with the current state of the resource. int CONTINUE Status code (100) indicating the client can continue. int CREATED Status code (201) indicating the request succeeded and created a new resource on the server. int EXPECTATION_FAILED Status code (417) indicating that the server could not meet the expectation given in the Expect request header. int FORBIDDEN Status code (403) indicating the server understood the request but refused to fulfill it. int FOUND Status code (302) indicating that the resource reside temporarily under a different URI. int GATEWAY_TIMEOUT Status code (504) indicating that the server did not receive a timely response from the upstream server while acting as a gateway or proxy. int GONE Status code (410) indicating that the resource is no longer available at the server and no forwarding address is known. int HTTP_VERSION_NOT_SUPPORTED Status code (505) indicating that the server does not support or refuses to support the HTTP protocol version that was used in the request message. int INTERNAL_SERVER_ERROR Status code (500) indicating an error inside the HTTP server which prevented it from fulfilling the request. int LENGTH_REQUIRED Status code (411) indicating that the request cannot be handled without a defined Content-Length. int METHOD_NOT_ALLOWED Status code (405) indicating that the method specified in the Request-Line is not allowed for the resource identified by the Request-URI. int MOVED_PERMANENTLY Status code (301) indicating that the resource has permanently moved to a new location, and that future references should use a new URI with their requests. int MOVED_TEMPORARILY Status code (302) indicating that the resource has temporarily moved to another location, but that future references should still use the original URI to access the resource. int MULTIPLE_CHOICES Status code (300) indicating that the requested resource corresponds to any one of a set of representations, each with its own specific location. int NO_CONTENT Status code (204) indicating that the request succeeded but that there was no new information to return. int NON_AUTHORITATIVE_INFORMATION Status code (203) indicating that the meta information presented by the client did not originate from the server. int NOT_ACCEPTABLE Status code (406) indicating that the resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. int NOT_FOUND Status code (404) indicating that the requested resource is not available. int NOT_IMPLEMENTED Status code (501) indicating the HTTP server does not support the functionality needed to fulfill the request. int NOT_MODIFIED Status code (304) indicating that a conditional GET operation found that the resource was available and not modified. int OK Status code (200) indicating the request succeeded normally. int PARTIAL_CONTENT Status code (206) indicating that the server has fulfilled the partial GET request for the resource. int PAYMENT_REQUIRED Status code (402) reserved for future use. int PRECONDITION_FAILED Status code (412) indicating that the precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. int PROXY_AUTHENTICATION_REQUIRED Status code (407) indicating that the client MUST first authenticate itself with the proxy. int REQUEST_ENTITY_TOO_LARGE Status code (413) indicating that the server is refusing to process the request because the request entity is larger than the server is willing or able to process. int REQUEST_TIMEOUT Status code (408) indicating that the client did not produce a request within the time that the server was prepared to wait. int REQUEST_URI_TOO_LONG Status code (414) indicating that the server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. int REQUESTED_RANGE_NOT_SATISFIABLE Status code (416) indicating that the server cannot serve the requested byte range. int RESET_CONTENT Status code (205) indicating that the agent SHOULD reset the document view which caused the request to be sent. int SEE_OTHER Status code (303) indicating that the response to the request can be found under a different URI. int SERVICE_UNAVAILABLE Status code (503) indicating that the HTTP server is temporarily overloaded, and unable to handle the request. int SERVICE_SWITCHING_PROTOCOLSUNAVAILABLE Status code (101) indicating the server is switching protocols according to Upgrade header. int TEMPORARY_REDIRECT Status code (307) indicating that the requested resource resides temporarily under a different URI. int UNAUTHORIZED Status code (401) indicating that the request requires HTTP authentication. int UNSUPPORTED_MEDIA_TYPE Status code (415) indicating that the server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. int USE_PROXY Status code (305) indicating that the requested resource MUST be accessed through the proxy given by the Location field. int","title":"Response"},{"location":"http/response/#response","text":"HTTP Response object provided to the scripting services implementation to create the result, which will be sent back to the client. Overview Module: http/v4/response Alias: http/response Definition: https://github.com/eclipse/dirigible/issues/13 Source: /http/v4/response.js Facade: HttpResponseFacade Status: stable","title":"Response"},{"location":"http/response/#basic-usage","text":"var response = require ( \"http/v4/response\" ); response . println ( \"Hello World!\" ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"http/response/#functions","text":"Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean print(text) Prints the text to the response body - println(text) Prints the text to the response body with line separator at the end - write(bytes) Prints the bytes array to the response body - isCommitted() Whether response is already committed boolean setContentType() Sets the content type - flush() Flushes the content to the response to the client - close() Closes the response stream to the client - addCookie(cookie) Adds a HttpCookie to the response - containsHeader(name) Checks existence of the header by name boolean encodeURL(url) Returns the encoded url parameter string getCharacterEncoding() Returns the character encoding of the response string encodeRedirectURL() Returns the encoded redirect URL string getContentType() Returns the content type of the response string sendError(code, message) Sends an error instruction to the client with the given code and message . The message parameter is optional - setCharacterEncoding(encoding) Sets the character encoding of the response - sendRedirect(location) Sends a redirect instruction to the client to the given location - setContentLength(length) Sets the content length of the response - setHeader(name, value) Updates a header name/value pair to the response - addHeader(name, value) Adds a header name/value pair to the response - setStatus(status) Sets the status of the response - reset(status) Resets the response - getHeader(name) Returns the header value by name - setLocale(language, country, variant) Sets the locale to the response - getHeaders(name) Returns the array of header values by name array of string getHeaderNames() Returns the names of all the headers array of string getLocale() Returns the locale of the response string getOutputStream() Returns the OutputStream of the response OutputStream","title":"Functions"},{"location":"http/response/#constants","text":"Constant Description Type ACCEPTED Status code (202) indicating that a request was accepted for processing, but was not completed. int BAD_GATEWAY Status code (502) indicating that the HTTP server received an invalid response from a server it consulted when acting as a proxy or gateway. int BAD_REQUEST Status code (400) indicating the request sent by the client was syntactically incorrect. int CONFLICT Status code (409) indicating that the request could not be completed due to a conflict with the current state of the resource. int CONTINUE Status code (100) indicating the client can continue. int CREATED Status code (201) indicating the request succeeded and created a new resource on the server. int EXPECTATION_FAILED Status code (417) indicating that the server could not meet the expectation given in the Expect request header. int FORBIDDEN Status code (403) indicating the server understood the request but refused to fulfill it. int FOUND Status code (302) indicating that the resource reside temporarily under a different URI. int GATEWAY_TIMEOUT Status code (504) indicating that the server did not receive a timely response from the upstream server while acting as a gateway or proxy. int GONE Status code (410) indicating that the resource is no longer available at the server and no forwarding address is known. int HTTP_VERSION_NOT_SUPPORTED Status code (505) indicating that the server does not support or refuses to support the HTTP protocol version that was used in the request message. int INTERNAL_SERVER_ERROR Status code (500) indicating an error inside the HTTP server which prevented it from fulfilling the request. int LENGTH_REQUIRED Status code (411) indicating that the request cannot be handled without a defined Content-Length. int METHOD_NOT_ALLOWED Status code (405) indicating that the method specified in the Request-Line is not allowed for the resource identified by the Request-URI. int MOVED_PERMANENTLY Status code (301) indicating that the resource has permanently moved to a new location, and that future references should use a new URI with their requests. int MOVED_TEMPORARILY Status code (302) indicating that the resource has temporarily moved to another location, but that future references should still use the original URI to access the resource. int MULTIPLE_CHOICES Status code (300) indicating that the requested resource corresponds to any one of a set of representations, each with its own specific location. int NO_CONTENT Status code (204) indicating that the request succeeded but that there was no new information to return. int NON_AUTHORITATIVE_INFORMATION Status code (203) indicating that the meta information presented by the client did not originate from the server. int NOT_ACCEPTABLE Status code (406) indicating that the resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. int NOT_FOUND Status code (404) indicating that the requested resource is not available. int NOT_IMPLEMENTED Status code (501) indicating the HTTP server does not support the functionality needed to fulfill the request. int NOT_MODIFIED Status code (304) indicating that a conditional GET operation found that the resource was available and not modified. int OK Status code (200) indicating the request succeeded normally. int PARTIAL_CONTENT Status code (206) indicating that the server has fulfilled the partial GET request for the resource. int PAYMENT_REQUIRED Status code (402) reserved for future use. int PRECONDITION_FAILED Status code (412) indicating that the precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. int PROXY_AUTHENTICATION_REQUIRED Status code (407) indicating that the client MUST first authenticate itself with the proxy. int REQUEST_ENTITY_TOO_LARGE Status code (413) indicating that the server is refusing to process the request because the request entity is larger than the server is willing or able to process. int REQUEST_TIMEOUT Status code (408) indicating that the client did not produce a request within the time that the server was prepared to wait. int REQUEST_URI_TOO_LONG Status code (414) indicating that the server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. int REQUESTED_RANGE_NOT_SATISFIABLE Status code (416) indicating that the server cannot serve the requested byte range. int RESET_CONTENT Status code (205) indicating that the agent SHOULD reset the document view which caused the request to be sent. int SEE_OTHER Status code (303) indicating that the response to the request can be found under a different URI. int SERVICE_UNAVAILABLE Status code (503) indicating that the HTTP server is temporarily overloaded, and unable to handle the request. int SERVICE_SWITCHING_PROTOCOLSUNAVAILABLE Status code (101) indicating the server is switching protocols according to Upgrade header. int TEMPORARY_REDIRECT Status code (307) indicating that the requested resource resides temporarily under a different URI. int UNAUTHORIZED Status code (401) indicating that the request requires HTTP authentication. int UNSUPPORTED_MEDIA_TYPE Status code (415) indicating that the server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. int USE_PROXY Status code (305) indicating that the requested resource MUST be accessed through the proxy given by the Location field. int","title":"Constants"},{"location":"http/rs-data/","text":"RS-Data HTTP RESTful Data Services framework. Overview Module: http/v4/rs-data Alias: http/rs-data Definition: https://github.com/eclipse/dirigible/issues/85 Source: /http/v4/rs-data.js Facade: none Status: stable Basic Usage var rsdata = require ( \"http/v4/rs-data\" ); rsdata . service () . dao ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , size : 255 , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , size : 255 , required : false }] }) . execute (); Functions Function Description Returns service(oConfiguration?, oProtocolHandlersAdapter?, oDataProtocolDefinition?, sLoggerName?) Creates a new Data Service instance ready to be further configured and executed. Optionally, the instance could be supplied with: configuration (oConfiguration) that will be merged after protocol mappings are initiallized; oProtocolHandlersAdapter object for data-to-protocol mapping; oDataProtocolDefinition object for protocol mappings definition; sLoggerName string to provide logger name for an instance. DataService Objects DataService Property Description Returns mappings() Returns the mapping REST mappings for this data service. The protocol mappings are already setup and the returned object can be used to configure additional mappings or override protocol standard ones. The returned object is of type RestAPI (see http/rs for details) RestAPI dao(ormConfig?) This is an optional method provided by the default protocol handler adapter in this data service instance. Note that a data service instance can be initialized with various adapters. An adapter can contribute methods to the DataService API that are specific to their configuration needs. The defualt adapter is based on the dao framework (see db/dao for details) and exposes this mehtod as a getter/setter for the dao ORM configuraiton that will be used to setup dao backend used by this data service verb handlers. If no argument is provided the method acts like getter and returns the ORM configuration if any. If an ORM config object is supplied as argument, it will use it to create the backing dao for this data service instance and return the data service instance for method chaining. DataService or Object logger the logger instance used by this data service. Defaults to logger with name 'http.rs.data.service' and can be provided with an argument provided to the module service method. --- execute(oResquest?, oResponse?) Creates an http controller instance for the mappings in htis data service instance and executes it, with the provided request/response arguments if any ---","title":"RS-Data"},{"location":"http/rs-data/#rs-data","text":"HTTP RESTful Data Services framework. Overview Module: http/v4/rs-data Alias: http/rs-data Definition: https://github.com/eclipse/dirigible/issues/85 Source: /http/v4/rs-data.js Facade: none Status: stable","title":"RS-Data"},{"location":"http/rs-data/#basic-usage","text":"var rsdata = require ( \"http/v4/rs-data\" ); rsdata . service () . dao ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , size : 255 , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , size : 255 , required : false }] }) . execute ();","title":"Basic Usage"},{"location":"http/rs-data/#functions","text":"Function Description Returns service(oConfiguration?, oProtocolHandlersAdapter?, oDataProtocolDefinition?, sLoggerName?) Creates a new Data Service instance ready to be further configured and executed. Optionally, the instance could be supplied with: configuration (oConfiguration) that will be merged after protocol mappings are initiallized; oProtocolHandlersAdapter object for data-to-protocol mapping; oDataProtocolDefinition object for protocol mappings definition; sLoggerName string to provide logger name for an instance. DataService","title":"Functions"},{"location":"http/rs-data/#objects","text":"","title":"Objects"},{"location":"http/rs-data/#dataservice","text":"Property Description Returns mappings() Returns the mapping REST mappings for this data service. The protocol mappings are already setup and the returned object can be used to configure additional mappings or override protocol standard ones. The returned object is of type RestAPI (see http/rs for details) RestAPI dao(ormConfig?) This is an optional method provided by the default protocol handler adapter in this data service instance. Note that a data service instance can be initialized with various adapters. An adapter can contribute methods to the DataService API that are specific to their configuration needs. The defualt adapter is based on the dao framework (see db/dao for details) and exposes this mehtod as a getter/setter for the dao ORM configuraiton that will be used to setup dao backend used by this data service verb handlers. If no argument is provided the method acts like getter and returns the ORM configuration if any. If an ORM config object is supplied as argument, it will use it to create the backing dao for this data service instance and return the data service instance for method chaining. DataService or Object logger the logger instance used by this data service. Defaults to logger with name 'http.rs.data.service' and can be provided with an argument provided to the module service method. --- execute(oResquest?, oResponse?) Creates an http controller instance for the mappings in htis data service instance and executes it, with the provided request/response arguments if any ---","title":"DataService"},{"location":"http/rs/","text":"RS HTTP RESTful services framework. Overview Module: http/v4/rs Alias: http/rs Definition: https://github.com/eclipse/dirigible/issues/85 Source: /http/v4/rs.js Facade: none Status: stable Basic Usage var rs = require ( \"http/v4/rs\" ); rs . service () . resource ( \"\" ) . get ( function ( ctx , request , response ){ response . println ( \"Hello there!\" ); }) . execute (); Functions Function Description Returns service(oMappings?) Creates an HttpController instance, optionally initialized with a JS configuration or ResourceMappings object HttpController Objects HttpController Property Description Returns execute(oRequest?, oResponse?) processes HTTP requests, to match path, method and constraints to resource mappings and invoke callback handler functions accordingly and generate response. --- mappings() Returns the mappings configured for this controller instance. ResourceMapppngs ResourceMappings Property Description Returns resource(oConfiguration?) Returns the resource configuration object optionally initialized with oConfiguration Resource configuration() Returns the configuration for this ResourceMappings object Object readonly() Disables all but GET requests to this API ResourceMappings disable(sPath, sVerb, arrConsumes, arrProduces) Disables the handling of requests sent to path sPath with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMappings find(sPath, sVerb, arrConsumes, arrProduces) Finds a request handler for requests sent to path sPath with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMethod execute(oRequest?, oResponse?) Executes the service ---- Resource Property Description Returns get(fServeCallback?) Returns the get method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod post(fServeCallback?) Returns the post method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod put(fServeCallback?) Returns the put method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod delete(fServeCallback?) Returns the delete method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod remove(fServeCallback?) Same as delete() ResourceMethod method(sHttpVerb, oConfiguration?) Returns the a method configuration object for the sHttpVerb HTTP method name and optionally initialized with oConfiguration object ResourceMethod configuration() Returns the configuration for this Resource object Object readonly() Disables all but GET requests to this resource ResourceMappings disable(sVerb, arrConsumes, arrProduces) Disables the handling of requests sent to this resource path with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMappings find(sVerb, arrConsumes, arrProduces) Finds a request handler for requests sent to this resource path with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMethod execute(oRequest?, oResponse?) Executes the service ---- ResourceMethod Property Description Returns configuration() Returns the configuration for this ResourceMethod object Object consumes(arrMediaTypeStrings) Assigns a consumes constraint for this verb handler configuration. ResourceMethod produces(arrMediaTypeStrings) Assigns a produces constraint for this verb handler configuration. ResourceMethod before(function) Assign a before callback function for this verb handler configuration ResourceMethod serve(function) Assign a verb handler function for this verb handler configuration ResourceMethod catch(function) Assign a catch on error callback function for this verb handler configuration ResourceMethod finally(function) Assign a finally callback function for this verb handler configuration ResourceMethod execute(oRequest?, oResponse?) Executes the service ----","title":"RS"},{"location":"http/rs/#rs","text":"HTTP RESTful services framework. Overview Module: http/v4/rs Alias: http/rs Definition: https://github.com/eclipse/dirigible/issues/85 Source: /http/v4/rs.js Facade: none Status: stable","title":"RS"},{"location":"http/rs/#basic-usage","text":"var rs = require ( \"http/v4/rs\" ); rs . service () . resource ( \"\" ) . get ( function ( ctx , request , response ){ response . println ( \"Hello there!\" ); }) . execute ();","title":"Basic Usage"},{"location":"http/rs/#functions","text":"Function Description Returns service(oMappings?) Creates an HttpController instance, optionally initialized with a JS configuration or ResourceMappings object HttpController","title":"Functions"},{"location":"http/rs/#objects","text":"","title":"Objects"},{"location":"http/rs/#httpcontroller","text":"Property Description Returns execute(oRequest?, oResponse?) processes HTTP requests, to match path, method and constraints to resource mappings and invoke callback handler functions accordingly and generate response. --- mappings() Returns the mappings configured for this controller instance. ResourceMapppngs","title":"HttpController"},{"location":"http/rs/#resourcemappings","text":"Property Description Returns resource(oConfiguration?) Returns the resource configuration object optionally initialized with oConfiguration Resource configuration() Returns the configuration for this ResourceMappings object Object readonly() Disables all but GET requests to this API ResourceMappings disable(sPath, sVerb, arrConsumes, arrProduces) Disables the handling of requests sent to path sPath with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMappings find(sPath, sVerb, arrConsumes, arrProduces) Finds a request handler for requests sent to path sPath with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMethod execute(oRequest?, oResponse?) Executes the service ----","title":"ResourceMappings"},{"location":"http/rs/#resource","text":"Property Description Returns get(fServeCallback?) Returns the get method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod post(fServeCallback?) Returns the post method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod put(fServeCallback?) Returns the put method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod delete(fServeCallback?) Returns the delete method configuration object, optionally configured with fServeCallback for serving requests ResourceMethod remove(fServeCallback?) Same as delete() ResourceMethod method(sHttpVerb, oConfiguration?) Returns the a method configuration object for the sHttpVerb HTTP method name and optionally initialized with oConfiguration object ResourceMethod configuration() Returns the configuration for this Resource object Object readonly() Disables all but GET requests to this resource ResourceMappings disable(sVerb, arrConsumes, arrProduces) Disables the handling of requests sent to this resource path with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMappings find(sVerb, arrConsumes, arrProduces) Finds a request handler for requests sent to this resource path with HTTP method sVerb and with consumes media type arrConsumes and produces media type arrProduces media type constraints ResourceMethod execute(oRequest?, oResponse?) Executes the service ----","title":"Resource"},{"location":"http/rs/#resourcemethod","text":"Property Description Returns configuration() Returns the configuration for this ResourceMethod object Object consumes(arrMediaTypeStrings) Assigns a consumes constraint for this verb handler configuration. ResourceMethod produces(arrMediaTypeStrings) Assigns a produces constraint for this verb handler configuration. ResourceMethod before(function) Assign a before callback function for this verb handler configuration ResourceMethod serve(function) Assign a verb handler function for this verb handler configuration ResourceMethod catch(function) Assign a catch on error callback function for this verb handler configuration ResourceMethod finally(function) Assign a finally callback function for this verb handler configuration ResourceMethod execute(oRequest?, oResponse?) Executes the service ----","title":"ResourceMethod"},{"location":"http/session/","text":"Session HTTP Session object provided to the scripting services implementation to hold session attributes for multiple client requests. Overview Module: http/v4/session Alias: http/session Definition: https://github.com/eclipse/dirigible/issues/14 Source: /http/v4/session.js Facade: HttpSessionFacade Status: stable Basic Usage var session = require ( \"http/v4/session\" ); var response = require ( \"http/v4/response\" ); session . setAttribute ( \"attr1\" , \"value1\" ); var attr = session . getAttribute ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close (); Functions Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean getAttribute(name) Returns the HTTP session attribute by name string getAttributeNames() Returns all the HTTP session attributes names array of string getCreationTime() Returns the time when the HTTP session has been initialized Date getId() Returns the HTTP session ID string getLastAccessedTime() Returns the time when the HTTP session has been last accessed Date getMaxInactiveInterval() Returns the maximum inactive interval of this HTTP session int invalidate() Invalidates this HTTP session - isNew() Returns true, if the HTTP session is created during this HTTP call and false otherwise boolean setAttribute(name, value) Sets the HTTP session attribute by name and value string removeAttribute(name) Removes the HTTP session attribute by name string setMaxInactiveInterval(interval) Sets the maximum inactive interval of this HTTP session -","title":"Session"},{"location":"http/session/#session","text":"HTTP Session object provided to the scripting services implementation to hold session attributes for multiple client requests. Overview Module: http/v4/session Alias: http/session Definition: https://github.com/eclipse/dirigible/issues/14 Source: /http/v4/session.js Facade: HttpSessionFacade Status: stable","title":"Session"},{"location":"http/session/#basic-usage","text":"var session = require ( \"http/v4/session\" ); var response = require ( \"http/v4/response\" ); session . setAttribute ( \"attr1\" , \"value1\" ); var attr = session . getAttribute ( \"attr1\" ); response . println ( \"[Attribute]: \" + attr ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"http/session/#functions","text":"Function Description Returns isValid() Returns true if the current execution context is in a HTTP call boolean getAttribute(name) Returns the HTTP session attribute by name string getAttributeNames() Returns all the HTTP session attributes names array of string getCreationTime() Returns the time when the HTTP session has been initialized Date getId() Returns the HTTP session ID string getLastAccessedTime() Returns the time when the HTTP session has been last accessed Date getMaxInactiveInterval() Returns the maximum inactive interval of this HTTP session int invalidate() Invalidates this HTTP session - isNew() Returns true, if the HTTP session is created during this HTTP call and false otherwise boolean setAttribute(name, value) Sets the HTTP session attribute by name and value string removeAttribute(name) Removes the HTTP session attribute by name string setMaxInactiveInterval(interval) Sets the maximum inactive interval of this HTTP session -","title":"Functions"},{"location":"http/upload/","text":"Upload HTTP Upload is used to consume files posted as multipart request. Overview Module: http/v4/upload Alias: http/upload Definition: https://github.com/eclipse/dirigible/issues/16 Source: /http/v4/upload.js Facade: HttpUploadFacade Status: stable Basic Usage /* eslint-env node, dirigible */ var upload = require ( \"http/v4/upload\" ); var request = require ( \"http/v4/request\" ); var response = require ( \"http/v4/response\" ); if ( request . getMethod () === \"POST\" ) { if ( upload . isMultipartContent ()) { var fileItems = upload . parseRequest (); for ( i = 0 ; i < fileItems . size (); i ++ ) { var fileItem = fileItems . get ( i ); if ( ! fileItem . isFormField ()) { response . println ( \"File Name: \" + fileItem . getName ()); response . println ( \"File Bytes (as text): \" + String . fromCharCode . apply ( null , fileItem . getBytes ())); } else { response . println ( \"Field Name: \" + fileItem . getFieldName ()); response . println ( \"Field Text: \" + fileItem . getText ()); } } } else { response . println ( \"The request's content must be 'multipart'\" ); } } else if ( request . getMethod () === \"GET\" ) { response . println ( \"Use POST request.\" ); } response . flush (); response . close (); Functions Function Description Returns isMultipartContent() Returns true if the HTTP request contains files content and false otherwise boolean parseRequest() Returns a HttpFileItems object by parsing the HTTP request HttpFileItems Objects HttpFileItems Function Description Returns get(index) The HttpFileItem object by the index HttpFileItem size() The size of the list of HttpFileItem objects HttpFileItem HttpFileItem Function Description Returns getContentType() The HttpFileItem's data content type string getName() The HttpFileItem's name string getSize() The HttpFileItem's size long getBytes() Return the HttpFileItem's content as byte array array of byte getText() Return the HttpFileItem's content as string string getInputStream() Return the input stream of the HttpFileItem's content streams.InputStream isFormField() Whether the HttpFileItem represents a form field boolean getFieldName() The HttpFileItem's field name string","title":"Upload"},{"location":"http/upload/#upload","text":"HTTP Upload is used to consume files posted as multipart request. Overview Module: http/v4/upload Alias: http/upload Definition: https://github.com/eclipse/dirigible/issues/16 Source: /http/v4/upload.js Facade: HttpUploadFacade Status: stable","title":"Upload"},{"location":"http/upload/#basic-usage","text":"/* eslint-env node, dirigible */ var upload = require ( \"http/v4/upload\" ); var request = require ( \"http/v4/request\" ); var response = require ( \"http/v4/response\" ); if ( request . getMethod () === \"POST\" ) { if ( upload . isMultipartContent ()) { var fileItems = upload . parseRequest (); for ( i = 0 ; i < fileItems . size (); i ++ ) { var fileItem = fileItems . get ( i ); if ( ! fileItem . isFormField ()) { response . println ( \"File Name: \" + fileItem . getName ()); response . println ( \"File Bytes (as text): \" + String . fromCharCode . apply ( null , fileItem . getBytes ())); } else { response . println ( \"Field Name: \" + fileItem . getFieldName ()); response . println ( \"Field Text: \" + fileItem . getText ()); } } } else { response . println ( \"The request's content must be 'multipart'\" ); } } else if ( request . getMethod () === \"GET\" ) { response . println ( \"Use POST request.\" ); } response . flush (); response . close ();","title":"Basic Usage"},{"location":"http/upload/#functions","text":"Function Description Returns isMultipartContent() Returns true if the HTTP request contains files content and false otherwise boolean parseRequest() Returns a HttpFileItems object by parsing the HTTP request HttpFileItems","title":"Functions"},{"location":"http/upload/#objects","text":"","title":"Objects"},{"location":"http/upload/#httpfileitems","text":"Function Description Returns get(index) The HttpFileItem object by the index HttpFileItem size() The size of the list of HttpFileItem objects HttpFileItem","title":"HttpFileItems"},{"location":"http/upload/#httpfileitem","text":"Function Description Returns getContentType() The HttpFileItem's data content type string getName() The HttpFileItem's name string getSize() The HttpFileItem's size long getBytes() Return the HttpFileItem's content as byte array array of byte getText() Return the HttpFileItem's content as string string getInputStream() Return the input stream of the HttpFileItem's content streams.InputStream isFormField() Whether the HttpFileItem represents a form field boolean getFieldName() The HttpFileItem's field name string","title":"HttpFileItem"},{"location":"indexing/searcher/","text":"Indexing Searcher The Indexing Searcher is the object used for free-text or exact periods searches over the added documents with the Indexing Writer . This version is backed by the Apache Lucene . Overview Module: indexing/v4/searcher Alias: indexing/searcher Definition: https://github.com/eclipse/dirigible/issues/110 Source: /indexing/v4/searcher.js Facade: IndexingFacade Status: stable Basic Usage var writer = require ( \"indexing/v4/writer\" ); var searcher = require ( \"indexing/v4/searcher\" ); writer . add ( \"index2\" , \"file1\" , \"apache lucene\" , new Date ( 123 )); writer . add ( \"index2\" , \"file2\" , \"lucene - the search engine\" , new Date ( 234 ), { \"name2\" : \"value2\" }); writer . add ( \"index2\" , \"file3\" , \"search engine\" , new Date ( 345 ), { \"name2\" : \"value2\" }); var found = searcher . between ( \"index2\" , new Date ( 124 ), new Date ( 344 )); Functions Function Description Returns search(index, term) Returns an array of document descriptors matching the term list of descriptors before(index, date) Returns an array of document descriptors where lastModified is before the date list of descriptors after(index, date) Returns an array of document descriptors where lastModified is after the date list of descriptors between(index, lower, upper) Returns an array of document descriptors where lastModified is between the lower and upper list of descriptors","title":"Indexing Searcher"},{"location":"indexing/searcher/#indexing-searcher","text":"The Indexing Searcher is the object used for free-text or exact periods searches over the added documents with the Indexing Writer . This version is backed by the Apache Lucene . Overview Module: indexing/v4/searcher Alias: indexing/searcher Definition: https://github.com/eclipse/dirigible/issues/110 Source: /indexing/v4/searcher.js Facade: IndexingFacade Status: stable","title":"Indexing Searcher"},{"location":"indexing/searcher/#basic-usage","text":"var writer = require ( \"indexing/v4/writer\" ); var searcher = require ( \"indexing/v4/searcher\" ); writer . add ( \"index2\" , \"file1\" , \"apache lucene\" , new Date ( 123 )); writer . add ( \"index2\" , \"file2\" , \"lucene - the search engine\" , new Date ( 234 ), { \"name2\" : \"value2\" }); writer . add ( \"index2\" , \"file3\" , \"search engine\" , new Date ( 345 ), { \"name2\" : \"value2\" }); var found = searcher . between ( \"index2\" , new Date ( 124 ), new Date ( 344 ));","title":"Basic Usage"},{"location":"indexing/searcher/#functions","text":"Function Description Returns search(index, term) Returns an array of document descriptors matching the term list of descriptors before(index, date) Returns an array of document descriptors where lastModified is before the date list of descriptors after(index, date) Returns an array of document descriptors where lastModified is after the date list of descriptors between(index, lower, upper) Returns an array of document descriptors where lastModified is between the lower and upper list of descriptors","title":"Functions"},{"location":"indexing/writer/","text":"Indexing Writer The Indexing Writer is an object which can store a text content with additional parameters for later high-performant free-text search. This version is backed by the Apache Lucene . Overview Module: indexing/v4/writer Alias: indexing/writer Definition: https://github.com/eclipse/dirigible/issues/110 Source: /indexing/v4/writer.js Facade: IndexingFacade Status: stable Basic Usage var writer = require ( \"indexing/v4/writer\" ); var searcher = require ( \"indexing/v4/searcher\" ); writer . add ( \"index1\" , \"file1\" , \"apache lucene\" , new Date (), { \"name1\" : \"value1\" }); writer . add ( \"index1\" , \"file2\" , \"lucene - the search engine\" , new Date (), { \"name2\" : \"value2\" }); var found = searcher . search ( \"index1\" , \"lucene\" ); Functions Function Description Returns add(index, location, contents, lastModified, parameters) Adds a document contents with the given location and parameters to an index -","title":"Indexing Writer"},{"location":"indexing/writer/#indexing-writer","text":"The Indexing Writer is an object which can store a text content with additional parameters for later high-performant free-text search. This version is backed by the Apache Lucene . Overview Module: indexing/v4/writer Alias: indexing/writer Definition: https://github.com/eclipse/dirigible/issues/110 Source: /indexing/v4/writer.js Facade: IndexingFacade Status: stable","title":"Indexing Writer"},{"location":"indexing/writer/#basic-usage","text":"var writer = require ( \"indexing/v4/writer\" ); var searcher = require ( \"indexing/v4/searcher\" ); writer . add ( \"index1\" , \"file1\" , \"apache lucene\" , new Date (), { \"name1\" : \"value1\" }); writer . add ( \"index1\" , \"file2\" , \"lucene - the search engine\" , new Date (), { \"name2\" : \"value2\" }); var found = searcher . search ( \"index1\" , \"lucene\" );","title":"Basic Usage"},{"location":"indexing/writer/#functions","text":"Function Description Returns add(index, location, contents, lastModified, parameters) Adds a document contents with the given location and parameters to an index -","title":"Functions"},{"location":"io/bytes/","text":"Bytes Bytes module provides utility functions for working with bytes. Overview Module: io/v4/bytes Alias: io/bytes Definition: n/a Source: /io/v4/bytes.js Facade: n/a Status: stable Basic Usage var bytes = require ( \"io/v4/bytes\" ); console . log ( bytes . textToByteArray ( \"Hello World\" )); console . log ( bytes . byteArrayToText ([ 72 , 101 , 108 , 108 , 111 , 32 , 87 , 111 , 114 , 108 , 100 ])); Functions Function Description Returns textToByteArray(text) Converts a text to a byte array array of bytes byteArrayToText(bytes) Converts a byte array to text string toJavaBytes(bytes) Convert the native JavaScript byte array to Java one, to be used internally by the API layer array of Java bytes toJavaScriptBytes(bytes) Convert the Java byte array to a native JavaScript one, to be used internally by the API layer array of JavaScript bytes","title":"Bytes"},{"location":"io/bytes/#bytes","text":"Bytes module provides utility functions for working with bytes. Overview Module: io/v4/bytes Alias: io/bytes Definition: n/a Source: /io/v4/bytes.js Facade: n/a Status: stable","title":"Bytes"},{"location":"io/bytes/#basic-usage","text":"var bytes = require ( \"io/v4/bytes\" ); console . log ( bytes . textToByteArray ( \"Hello World\" )); console . log ( bytes . byteArrayToText ([ 72 , 101 , 108 , 108 , 111 , 32 , 87 , 111 , 114 , 108 , 100 ]));","title":"Basic Usage"},{"location":"io/bytes/#functions","text":"Function Description Returns textToByteArray(text) Converts a text to a byte array array of bytes byteArrayToText(bytes) Converts a byte array to text string toJavaBytes(bytes) Convert the native JavaScript byte array to Java one, to be used internally by the API layer array of Java bytes toJavaScriptBytes(bytes) Convert the Java byte array to a native JavaScript one, to be used internally by the API layer array of JavaScript bytes","title":"Functions"},{"location":"io/files/","text":"Files Files module provides an access to the underlying File System, where the Dirigible server is deployed on. Overview Module: io/v4/files Alias: io/files Definition: https://github.com/eclipse/dirigible/issues/19 Source: /io/v4/files.js Facade: FilesFacade Status: stable Basic Usage var files = require ( \"io/v4/files\" ); var tempFile = files . createTempFile ( \"dirigible\" , \".txt\" ); console . log ( \"Temp file: \" + tempFile ); files . writeText ( tempFile , \"Eclipse Dirigible\" ); files . deleteFile ( tempFile ); Functions Function Description Returns exists(path) Whether a file by this path exists boolean isExecutable(path) Whether the file by this path is executable boolean isReadable(path) Whether the file by this path is readable boolean isWritable(path) Whether the file by this path is writable boolean isHidden(path) Whether the file by this path is hidden boolean isDirectory(path) Whether the file by this path is directory boolean isFile(path) Whether the file by this path is file boolean isSameFile(path1, path2) Whether the files by these path1 and path2 are pointing to the same file boolean getCanonicalPath(path) Returns the canonical path of the file by this path string getName(path) Returns the name of the file by this path string getParentPath(path) Returns the parent's path of the file by this path string readBytes(path) Returns the content of the given file as byte array array of bytes readText(path) Returns the content of the given file as string string writeBytes(path, bytes) Writes the given byte array content to the file - writeText(path, text) Writes the given text content to the file - getLastModified(path) Returns the last modification date of the file by this path Date setLastModified(path, date) Sets the last modification date of the file by this path - getOwner(path) Returns the owner of the file by this path string setOwner(path, owner) Sets the owner of the file by this path - getPermissions(path) Returns the POSIX permissions of the file by this path string setPermissions(path, owner) Sets the POSIX permissions of the file by this path - size(path) Returns the size of the file by this path long createFile(path) Creates a new file by the given path - createDirectory(path) Creates a new directory by the given path - copy(source, target) Copies a source file to a target - move(source, target) Moves a source file to a target - deleteFile(path) Deletes the file by the given path - deleteDirectory(path) Deletes the directory by the given path - createTempFile(prefix, suffix) Creates a new temporary file by the given prefix and suffix - createTempDirectory(prefix) Creates a new temporary directory by the given prefix - createInputStream(path) Creates an InputStream pointing to a file by the given path streams.InputStream createOutputStream(path) Creates an OutputStream pointing to a file by the given path streams.OutputStream","title":"Files"},{"location":"io/files/#files","text":"Files module provides an access to the underlying File System, where the Dirigible server is deployed on. Overview Module: io/v4/files Alias: io/files Definition: https://github.com/eclipse/dirigible/issues/19 Source: /io/v4/files.js Facade: FilesFacade Status: stable","title":"Files"},{"location":"io/files/#basic-usage","text":"var files = require ( \"io/v4/files\" ); var tempFile = files . createTempFile ( \"dirigible\" , \".txt\" ); console . log ( \"Temp file: \" + tempFile ); files . writeText ( tempFile , \"Eclipse Dirigible\" ); files . deleteFile ( tempFile );","title":"Basic Usage"},{"location":"io/files/#functions","text":"Function Description Returns exists(path) Whether a file by this path exists boolean isExecutable(path) Whether the file by this path is executable boolean isReadable(path) Whether the file by this path is readable boolean isWritable(path) Whether the file by this path is writable boolean isHidden(path) Whether the file by this path is hidden boolean isDirectory(path) Whether the file by this path is directory boolean isFile(path) Whether the file by this path is file boolean isSameFile(path1, path2) Whether the files by these path1 and path2 are pointing to the same file boolean getCanonicalPath(path) Returns the canonical path of the file by this path string getName(path) Returns the name of the file by this path string getParentPath(path) Returns the parent's path of the file by this path string readBytes(path) Returns the content of the given file as byte array array of bytes readText(path) Returns the content of the given file as string string writeBytes(path, bytes) Writes the given byte array content to the file - writeText(path, text) Writes the given text content to the file - getLastModified(path) Returns the last modification date of the file by this path Date setLastModified(path, date) Sets the last modification date of the file by this path - getOwner(path) Returns the owner of the file by this path string setOwner(path, owner) Sets the owner of the file by this path - getPermissions(path) Returns the POSIX permissions of the file by this path string setPermissions(path, owner) Sets the POSIX permissions of the file by this path - size(path) Returns the size of the file by this path long createFile(path) Creates a new file by the given path - createDirectory(path) Creates a new directory by the given path - copy(source, target) Copies a source file to a target - move(source, target) Moves a source file to a target - deleteFile(path) Deletes the file by the given path - deleteDirectory(path) Deletes the directory by the given path - createTempFile(prefix, suffix) Creates a new temporary file by the given prefix and suffix - createTempDirectory(prefix) Creates a new temporary directory by the given prefix - createInputStream(path) Creates an InputStream pointing to a file by the given path streams.InputStream createOutputStream(path) Creates an OutputStream pointing to a file by the given path streams.OutputStream","title":"Functions"},{"location":"io/ftp/","text":"FTP Client FTP Client API provides utility functions for working with FTP servers. Overview Module: io/v4/ftp Alias: io/ftp Definition: n/a Source: /io/v4/ftp.js Facade: n/a Status: stable Basic Usage var response = require ( \"http/v4/response\" ); var ftp = require ( \"io/v4/ftp\" ); var host = \"test.rebex.net\" ; var port = 21 ; var userName = \"demo\" ; var password = \"password\" ; var ftpClient = ftp . getClient ( host , port , userName , password ); var file = ftpClient . getFileText ( \"/\" , \"readme.txt\" ); response . println ( file ); Functions Function Description Returns getClient(host, port, userName, password) Returns a FTP Client instance FTPClient Objects FTPClient Function Description Returns getRootFolder() Gets the root folder FTPFolder getFile(path, fileName) Gets the file content as an input stream InputStream getFileBinary(path, fileName) Gets the file content as byte array byte array getFileText(path, fileName) Gets the file content as string string getFolder(path, folderName) Gets the folder FTPFolder createFile(path, fileName, inputStream) Creates file from InputStream and return true if the file was created successfully boolean createFileBinary(path, fileName, bytes) Creates file from byte array and return true if the file was created successfully boolean createFileText(path, fileName, text) Creates file from string and return true if the file was created successfully boolean appendFile(path, fileName, inputStream) Appends InputStream to file and return true if the file was created successfully boolean appendFileBinary(path, fileName, bytes) Appends byte array to file and return true if the file was created successfully boolean appendFileText(path, fileName, text) Appends string to file and return true if the file was created successfully boolean createFolder(path, folderName) Creates folder FTPFolder deleteFile(path, fileName) Deletes file boolean deleteFolder(path, folderName) Deletes folder boolean close() Closes the FPT client - FTPFolder Function Description Returns getPath() Gets the folder path string getName() Gets the folder name string getFile(fileName) Gets FTPFile by fileName FTPFile getFolder(folderName) Gets FTPFolder by folderName FTPFolder list() Gets array of FTPObjects FTPObject array listFiles() Gets array of FTPFiles FTPFile array listFolders() Gets array of FTPFolder FTPFolder array createFile(fileName, inputStream) Creates file from InputStream and return true if the file was created successfully boolean createFileBinary(fileName, bytes) Creates file from byte array and return true if the file was created successfully boolean createFileText(fileName, text) Creates file from string and return true if the file was created successfully boolean createFolder(folder) Creates FTPFolder FTPFolder delete() Deletes the current folder boolean deleteFile(fileName) Deletes FTPFile boolean deleteFolder(folderName) Deletes FTPFolder boolean FTPFile Function Description Returns getPath() Gets the folder path string getName() Gets the folder name string getContent() Gets the file content InputStream getContentBinary() Gets the file content byte array getContentText() Gets the file content string setContent(inputStream) Sets the file content from an InputStream boolean setContentBinary(bytes) Sets the file content from byte array boolean setContentText(text) Sets the file content from string boolean appendContent(inputStream) Appends file content from an InputStream boolean appendContentBinary(bytes) Appends file content from an byte array boolean appendContentText(text) Appends file content from string boolean delete() Deletes the file boolean FTPObject Function Description Returns getPath() Gets the object path string getName() Gets the object name string isFile() Returns true if the object is file boolean isFolder() Returns true if the object is folder boolean getFile() Gets object as FTPFile FTPFile getFolder() Gets object as FTPFolder FTPFolder","title":"FTP Client"},{"location":"io/ftp/#ftp-client","text":"FTP Client API provides utility functions for working with FTP servers. Overview Module: io/v4/ftp Alias: io/ftp Definition: n/a Source: /io/v4/ftp.js Facade: n/a Status: stable","title":"FTP Client"},{"location":"io/ftp/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var ftp = require ( \"io/v4/ftp\" ); var host = \"test.rebex.net\" ; var port = 21 ; var userName = \"demo\" ; var password = \"password\" ; var ftpClient = ftp . getClient ( host , port , userName , password ); var file = ftpClient . getFileText ( \"/\" , \"readme.txt\" ); response . println ( file );","title":"Basic Usage"},{"location":"io/ftp/#functions","text":"Function Description Returns getClient(host, port, userName, password) Returns a FTP Client instance FTPClient","title":"Functions"},{"location":"io/ftp/#objects","text":"","title":"Objects"},{"location":"io/ftp/#ftpclient","text":"Function Description Returns getRootFolder() Gets the root folder FTPFolder getFile(path, fileName) Gets the file content as an input stream InputStream getFileBinary(path, fileName) Gets the file content as byte array byte array getFileText(path, fileName) Gets the file content as string string getFolder(path, folderName) Gets the folder FTPFolder createFile(path, fileName, inputStream) Creates file from InputStream and return true if the file was created successfully boolean createFileBinary(path, fileName, bytes) Creates file from byte array and return true if the file was created successfully boolean createFileText(path, fileName, text) Creates file from string and return true if the file was created successfully boolean appendFile(path, fileName, inputStream) Appends InputStream to file and return true if the file was created successfully boolean appendFileBinary(path, fileName, bytes) Appends byte array to file and return true if the file was created successfully boolean appendFileText(path, fileName, text) Appends string to file and return true if the file was created successfully boolean createFolder(path, folderName) Creates folder FTPFolder deleteFile(path, fileName) Deletes file boolean deleteFolder(path, folderName) Deletes folder boolean close() Closes the FPT client -","title":"FTPClient"},{"location":"io/ftp/#ftpfolder","text":"Function Description Returns getPath() Gets the folder path string getName() Gets the folder name string getFile(fileName) Gets FTPFile by fileName FTPFile getFolder(folderName) Gets FTPFolder by folderName FTPFolder list() Gets array of FTPObjects FTPObject array listFiles() Gets array of FTPFiles FTPFile array listFolders() Gets array of FTPFolder FTPFolder array createFile(fileName, inputStream) Creates file from InputStream and return true if the file was created successfully boolean createFileBinary(fileName, bytes) Creates file from byte array and return true if the file was created successfully boolean createFileText(fileName, text) Creates file from string and return true if the file was created successfully boolean createFolder(folder) Creates FTPFolder FTPFolder delete() Deletes the current folder boolean deleteFile(fileName) Deletes FTPFile boolean deleteFolder(folderName) Deletes FTPFolder boolean","title":"FTPFolder"},{"location":"io/ftp/#ftpfile","text":"Function Description Returns getPath() Gets the folder path string getName() Gets the folder name string getContent() Gets the file content InputStream getContentBinary() Gets the file content byte array getContentText() Gets the file content string setContent(inputStream) Sets the file content from an InputStream boolean setContentBinary(bytes) Sets the file content from byte array boolean setContentText(text) Sets the file content from string boolean appendContent(inputStream) Appends file content from an InputStream boolean appendContentBinary(bytes) Appends file content from an byte array boolean appendContentText(text) Appends file content from string boolean delete() Deletes the file boolean","title":"FTPFile"},{"location":"io/ftp/#ftpobject","text":"Function Description Returns getPath() Gets the object path string getName() Gets the object name string isFile() Returns true if the object is file boolean isFolder() Returns true if the object is folder boolean getFile() Gets object as FTPFile FTPFile getFolder() Gets object as FTPFolder FTPFolder","title":"FTPObject"},{"location":"io/streams/","text":"Streams Streams module provides classes and utilities for working with streams. Overview Module: io/v4/streams Alias: io/streams Definition: https://github.com/eclipse/dirigible/issues/51 Source: /io/v4/streams.js Facade: StreamsFacade Status: stable Basic Usage var streams = require ( \"io/v4/streams\" ); var response = require ( \"http/v4/response\" ); var outputStream = streams . createByteArrayOutputStream (); streams . writeText ( outputStream , \"Some text content\" ); var bytes = outputStream . getBytes (); response . println ( \"[Stream Content as Bytes]: \" + bytes ); var text = String . fromCharCode . apply ( String , bytes ); response . println ( \"[Stream Content as Text]: \" + text ); var inputStream = streams . createByteArrayInputStream ( bytes ); var outputStreamCopy = streams . createByteArrayOutputStream (); streams . copy ( inputStream , outputStreamCopy ); var copiedBytes = outputStreamCopy . getBytes (); var copiedText = String . fromCharCode . apply ( String , copiedBytes ); response . println ( \"[Stream Copied Content as Text]: \" + copiedText ); response . flush (); response . close (); Functions Function Description Returns copy(inputStream, outputStream) Copies an InputStream to an OutputStream - createByteArrayInputStream(bytes) Creates an ByteArrayInputStream from the array of bytes ByteArrayInputStream createByteArrayOutputStream() Creates an ByteArrayOutputStream ByteArrayOutputStream Objects InputStream Function Description Returns readByte() Reads a single byte from this InputStream byte readBytes() Returns the array of bytes contained in this InputStream array of byte readText() Returns a string representation of the array of bytes contained in this InputStream string close() Closes this InputStream to release the resources - OutputStream Function Description Returns writeByte(byte) Writes a single byte to this OutputStream - writeBytes(bytes) Writes the array of bytes to this OutputStream array of byte readText() Returns a string representation of the array of bytes contained in this InputStream string close() Closes this OutputStream to release the resources - ByteArrayInputStream inherited from InputStream ByteArrayOutputStream inherited from OutputStream and: Function Description Returns getBytes() Returns the array of bytes contained in this ByteArrayOutputStream array of byte getText() Returns a string representation of the array of bytes contained in this ByteArrayOutputStream string","title":"Streams"},{"location":"io/streams/#streams","text":"Streams module provides classes and utilities for working with streams. Overview Module: io/v4/streams Alias: io/streams Definition: https://github.com/eclipse/dirigible/issues/51 Source: /io/v4/streams.js Facade: StreamsFacade Status: stable","title":"Streams"},{"location":"io/streams/#basic-usage","text":"var streams = require ( \"io/v4/streams\" ); var response = require ( \"http/v4/response\" ); var outputStream = streams . createByteArrayOutputStream (); streams . writeText ( outputStream , \"Some text content\" ); var bytes = outputStream . getBytes (); response . println ( \"[Stream Content as Bytes]: \" + bytes ); var text = String . fromCharCode . apply ( String , bytes ); response . println ( \"[Stream Content as Text]: \" + text ); var inputStream = streams . createByteArrayInputStream ( bytes ); var outputStreamCopy = streams . createByteArrayOutputStream (); streams . copy ( inputStream , outputStreamCopy ); var copiedBytes = outputStreamCopy . getBytes (); var copiedText = String . fromCharCode . apply ( String , copiedBytes ); response . println ( \"[Stream Copied Content as Text]: \" + copiedText ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"io/streams/#functions","text":"Function Description Returns copy(inputStream, outputStream) Copies an InputStream to an OutputStream - createByteArrayInputStream(bytes) Creates an ByteArrayInputStream from the array of bytes ByteArrayInputStream createByteArrayOutputStream() Creates an ByteArrayOutputStream ByteArrayOutputStream","title":"Functions"},{"location":"io/streams/#objects","text":"","title":"Objects"},{"location":"io/streams/#inputstream","text":"Function Description Returns readByte() Reads a single byte from this InputStream byte readBytes() Returns the array of bytes contained in this InputStream array of byte readText() Returns a string representation of the array of bytes contained in this InputStream string close() Closes this InputStream to release the resources -","title":"InputStream"},{"location":"io/streams/#outputstream","text":"Function Description Returns writeByte(byte) Writes a single byte to this OutputStream - writeBytes(bytes) Writes the array of bytes to this OutputStream array of byte readText() Returns a string representation of the array of bytes contained in this InputStream string close() Closes this OutputStream to release the resources -","title":"OutputStream"},{"location":"io/streams/#bytearrayinputstream","text":"inherited from InputStream","title":"ByteArrayInputStream"},{"location":"io/streams/#bytearrayoutputstream","text":"inherited from OutputStream and: Function Description Returns getBytes() Returns the array of bytes contained in this ByteArrayOutputStream array of byte getText() Returns a string representation of the array of bytes contained in this ByteArrayOutputStream string","title":"ByteArrayOutputStream"},{"location":"io/zip/","text":"Zip Zip modules provides functionality for creating zip archive from files. Overview Module: io/v4/zip Alias: io/zip Definition: https://github.com/eclipse/dirigible/issues/20 Source: /io/v4/zip.js Facade: ZipFacade Status: stable Basic Usage var zip = require ( \"io/v4/zip\" ); var files = require ( \"io/v4/files\" ); var inputStream = files . createInputStream ( \"test.zip\" ); if ( inputStream . isValid ()) { try { var zipInputStream = zip . createZipInputStream ( inputStream ); var zipEntry = zipInputStream . getNextEntry (); while ( zipEntry . isValid ()) { console . error ( zipEntry . getName ()); console . log ( zipInputStream . read ()); zipEntry = zipInputStream . getNextEntry (); } } finally { zipInputStream . close (); } } else { console . log ( 'No such file' ); } var zip = require ( \"io/v4/zip\" ); var files = require ( \"io/v4/files\" ); var outputStream = files . createOutputStream ( \"test.zip\" ); if ( outputStream . isValid ()) { try { var zipOutputStream = zip . createZipOutputStream ( outputStream ); var zipEntry = zipOutputStream . createZipEntry ( \"test1.txt\" ); zipOutputStream . writeText ( \"some text\" ); zipOutputStream . createZipEntry ( \"test2.bin\" ); zipOutputStream . write ([ 60 , 61 , 62 , 63 ]); } finally { zipOutputStream . close (); } } Functions Function Description Returns createZipInputStream(inputStream) Returns the Zip archive reader object ZipInputStream createZipOutputStream(outputStream) Returns the Zip archive writer object ZipOutputStream Objects ZipInputStream Function Description Returns getNextEntry() Returns the next entry from the archive or null if no more entries found ZipEntry read() Reads from the zip input stream at the current entry point and returns the result as array of bytes array of bytes readText() Reads from the zip input stream at the current entry point and returns the result as text string close() Closes the zip input stream - ZipOutputStream Function Description Returns createZipEntry() Returns a new entry for the archive ZipEntry write(bytes) Writes an array of bytes to the zip output stream at the current entry point - writeText(text) Writes a text to the zip output stream at the current entry point - closeEntry() Closes the current entry (optional) - close() Finishes, flushes and closes the zip output stream - ZipEntry Function Description Returns getName() Returns the name of the entry string getSize() Returns the size of the entry integer getCompressedSize() Returns the compressed size of the entry integer getTime() Returns the time stamp of the entry integer getCrc() Returns the CRC sum of the entry integer getComment() Returns the comment text of the entry integer isDirectory() Returns true if the entry represents a directory and false otherwise integer isValid() Returns true if the entry is a valid one and false otherwise (after last) boolean","title":"Zip"},{"location":"io/zip/#zip","text":"Zip modules provides functionality for creating zip archive from files. Overview Module: io/v4/zip Alias: io/zip Definition: https://github.com/eclipse/dirigible/issues/20 Source: /io/v4/zip.js Facade: ZipFacade Status: stable","title":"Zip"},{"location":"io/zip/#basic-usage","text":"var zip = require ( \"io/v4/zip\" ); var files = require ( \"io/v4/files\" ); var inputStream = files . createInputStream ( \"test.zip\" ); if ( inputStream . isValid ()) { try { var zipInputStream = zip . createZipInputStream ( inputStream ); var zipEntry = zipInputStream . getNextEntry (); while ( zipEntry . isValid ()) { console . error ( zipEntry . getName ()); console . log ( zipInputStream . read ()); zipEntry = zipInputStream . getNextEntry (); } } finally { zipInputStream . close (); } } else { console . log ( 'No such file' ); } var zip = require ( \"io/v4/zip\" ); var files = require ( \"io/v4/files\" ); var outputStream = files . createOutputStream ( \"test.zip\" ); if ( outputStream . isValid ()) { try { var zipOutputStream = zip . createZipOutputStream ( outputStream ); var zipEntry = zipOutputStream . createZipEntry ( \"test1.txt\" ); zipOutputStream . writeText ( \"some text\" ); zipOutputStream . createZipEntry ( \"test2.bin\" ); zipOutputStream . write ([ 60 , 61 , 62 , 63 ]); } finally { zipOutputStream . close (); } }","title":"Basic Usage"},{"location":"io/zip/#functions","text":"Function Description Returns createZipInputStream(inputStream) Returns the Zip archive reader object ZipInputStream createZipOutputStream(outputStream) Returns the Zip archive writer object ZipOutputStream","title":"Functions"},{"location":"io/zip/#objects","text":"","title":"Objects"},{"location":"io/zip/#zipinputstream","text":"Function Description Returns getNextEntry() Returns the next entry from the archive or null if no more entries found ZipEntry read() Reads from the zip input stream at the current entry point and returns the result as array of bytes array of bytes readText() Reads from the zip input stream at the current entry point and returns the result as text string close() Closes the zip input stream -","title":"ZipInputStream"},{"location":"io/zip/#zipoutputstream","text":"Function Description Returns createZipEntry() Returns a new entry for the archive ZipEntry write(bytes) Writes an array of bytes to the zip output stream at the current entry point - writeText(text) Writes a text to the zip output stream at the current entry point - closeEntry() Closes the current entry (optional) - close() Finishes, flushes and closes the zip output stream -","title":"ZipOutputStream"},{"location":"io/zip/#zipentry","text":"Function Description Returns getName() Returns the name of the entry string getSize() Returns the size of the entry integer getCompressedSize() Returns the compressed size of the entry integer getTime() Returns the time stamp of the entry integer getCrc() Returns the CRC sum of the entry integer getComment() Returns the comment text of the entry integer isDirectory() Returns true if the entry represents a directory and false otherwise integer isValid() Returns true if the entry is a valid one and false otherwise (after last) boolean","title":"ZipEntry"},{"location":"kafka/consumer/","text":"Kafka Consumer The Kafka Consumer is listening on a Topic destination to a Kafka messaging server. Overview Module: kafka/consumer Alias: kafka/consumer Definition: https://github.com/eclipse/dirigible/issues/641 Source: /kafka/consumer.js Facade: KafkaFacade Status: stable Basic Usage Start listening on a topic var consumer = require ( \"kafka/consumer\" ); consumer . topic ( \"topic1\" , \"{}\" ). startListening ( \"<kafka-project>/<kafka-handler>\" , 1000 ); File: <kafka-project>/<kafka-handler.js> exports . onMessage = function ( message ) { console . log ( \"Hello from My Kafka Listener! Message: \" + message ); }; exports . onError = function ( error ) { console . error ( \"Error from My Kafka Listener! Error: \" + error ); }; Stop listening on a topic var consumer = require ( \"kafka/consumer\" ); consumer . topic ( \"topic1\" , \"{}\" ). stopListening (); Functions Function Description Returns topic(destination, configuration) Returns an object representing a Kafka Topic Topic Configuration object key-value pairs can be taken from https://kafka.apache.org/documentation/#consumerconfigs Objects Topic Function Description Returns startListening(handler, timeout) Receives a message from this Kafka Topic if any with the given handler and timeout in milliseconds - stopListening() Stops listening for new messages -","title":"Kafka Consumer"},{"location":"kafka/consumer/#kafka-consumer","text":"The Kafka Consumer is listening on a Topic destination to a Kafka messaging server. Overview Module: kafka/consumer Alias: kafka/consumer Definition: https://github.com/eclipse/dirigible/issues/641 Source: /kafka/consumer.js Facade: KafkaFacade Status: stable","title":"Kafka Consumer"},{"location":"kafka/consumer/#basic-usage","text":"","title":"Basic Usage"},{"location":"kafka/consumer/#start-listening-on-a-topic","text":"var consumer = require ( \"kafka/consumer\" ); consumer . topic ( \"topic1\" , \"{}\" ). startListening ( \"<kafka-project>/<kafka-handler>\" , 1000 ); File: <kafka-project>/<kafka-handler.js> exports . onMessage = function ( message ) { console . log ( \"Hello from My Kafka Listener! Message: \" + message ); }; exports . onError = function ( error ) { console . error ( \"Error from My Kafka Listener! Error: \" + error ); };","title":"Start listening on a topic"},{"location":"kafka/consumer/#stop-listening-on-a-topic","text":"var consumer = require ( \"kafka/consumer\" ); consumer . topic ( \"topic1\" , \"{}\" ). stopListening ();","title":"Stop listening on a topic"},{"location":"kafka/consumer/#functions","text":"Function Description Returns topic(destination, configuration) Returns an object representing a Kafka Topic Topic Configuration object key-value pairs can be taken from https://kafka.apache.org/documentation/#consumerconfigs","title":"Functions"},{"location":"kafka/consumer/#objects","text":"","title":"Objects"},{"location":"kafka/consumer/#topic","text":"Function Description Returns startListening(handler, timeout) Receives a message from this Kafka Topic if any with the given handler and timeout in milliseconds - stopListening() Stops listening for new messages -","title":"Topic"},{"location":"kafka/producer/","text":"Kafka Producer The Kafka Producer is sending message records to a Topic destination to a Kafka messaging server. Overview Module: kafka/producer Alias: kafka/producer Definition: https://github.com/eclipse/dirigible/issues/640 Source: /kafka/producer.js Facade: KafkaFacade Status: stable Basic Usage Send record to a given topic (implicitly create producer if needed) : var producer = require ( \"kafka/producer\" ); producer . topic ( \"topic1\" , \"{}\" ). send ( \"key1\" , \"value1\" ); Close the producer: var producer = require ( \"kafka/producer\" ); producer . close ( \"{}\" ); Functions Function Description Returns topic(destination, configuration) Returns an object representing a Kafka Topic Topic close(configuration) Closes the Producer - Configuration object key-value pairs can be taken from https://kafka.apache.org/documentation/#producerconfigs Objects Topic Function Description Returns send(key, value) Send a message record by a key and value to a Kafka Topic -","title":"Kafka Producer"},{"location":"kafka/producer/#kafka-producer","text":"The Kafka Producer is sending message records to a Topic destination to a Kafka messaging server. Overview Module: kafka/producer Alias: kafka/producer Definition: https://github.com/eclipse/dirigible/issues/640 Source: /kafka/producer.js Facade: KafkaFacade Status: stable","title":"Kafka Producer"},{"location":"kafka/producer/#basic-usage","text":"Send record to a given topic (implicitly create producer if needed) : var producer = require ( \"kafka/producer\" ); producer . topic ( \"topic1\" , \"{}\" ). send ( \"key1\" , \"value1\" ); Close the producer: var producer = require ( \"kafka/producer\" ); producer . close ( \"{}\" );","title":"Basic Usage"},{"location":"kafka/producer/#functions","text":"Function Description Returns topic(destination, configuration) Returns an object representing a Kafka Topic Topic close(configuration) Closes the Producer - Configuration object key-value pairs can be taken from https://kafka.apache.org/documentation/#producerconfigs","title":"Functions"},{"location":"kafka/producer/#objects","text":"","title":"Objects"},{"location":"kafka/producer/#topic","text":"Function Description Returns send(key, value) Send a message record by a key and value to a Kafka Topic -","title":"Topic"},{"location":"messaging/consumer/","text":"Message Consumer The Messaging Consumer is an object which can send text messages to a Queue or Topic destination in the built-in Message Broker. This version is backed by the full fledged messaging broker Apache ActiveMQ . Overview Module: messaging/v4/consumer Alias: messaging/consumer Definition: https://github.com/eclipse/dirigible/issues/92 Source: /messaging/v4/consumer.js Facade: MessagingFacade Status: stable Basic Usage var consumer = require ( \"messaging/v4/consumer\" ); var message = consumer . queue ( \"queue1\" ). receive ( 1000 ); Functions Function Description Returns queue() Returns an object representing a Message Queue Queue topic() Returns an object representing a Message Topic Topic Objects Queue Function Description Returns receive(timeout) Receives a message from this Message Queue if any or null with the given timeout in milliseconds string Topic Function Description Returns receive(timeout) Receives a message from this Message Topic if any or null with the given timeout in milliseconds string","title":"Message Consumer"},{"location":"messaging/consumer/#message-consumer","text":"The Messaging Consumer is an object which can send text messages to a Queue or Topic destination in the built-in Message Broker. This version is backed by the full fledged messaging broker Apache ActiveMQ . Overview Module: messaging/v4/consumer Alias: messaging/consumer Definition: https://github.com/eclipse/dirigible/issues/92 Source: /messaging/v4/consumer.js Facade: MessagingFacade Status: stable","title":"Message Consumer"},{"location":"messaging/consumer/#basic-usage","text":"var consumer = require ( \"messaging/v4/consumer\" ); var message = consumer . queue ( \"queue1\" ). receive ( 1000 );","title":"Basic Usage"},{"location":"messaging/consumer/#functions","text":"Function Description Returns queue() Returns an object representing a Message Queue Queue topic() Returns an object representing a Message Topic Topic","title":"Functions"},{"location":"messaging/consumer/#objects","text":"","title":"Objects"},{"location":"messaging/consumer/#queue","text":"Function Description Returns receive(timeout) Receives a message from this Message Queue if any or null with the given timeout in milliseconds string","title":"Queue"},{"location":"messaging/consumer/#topic","text":"Function Description Returns receive(timeout) Receives a message from this Message Topic if any or null with the given timeout in milliseconds string","title":"Topic"},{"location":"messaging/producer/","text":"Message Producer The Messaging Producer is an object which can send text messages to a Queue or Topic destination in the built-in Message Broker. This version is backed by the full fledged messaging broker Apache ActiveMQ . Overview Module: messaging/v4/producer Alias: messaging/producer Definition: https://github.com/eclipse/dirigible/issues/91 Source: /messaging/v4/producer.js Facade: MessagingFacade Status: stable Basic Usage var producer = require ( \"messaging/v4/producer\" ); producer . queue ( \"queue1\" ). send ( \"Text Message\" ); Functions Function Description Returns queue() Returns an object representing a Message Queue Queue topic() Returns an object representing a Message Topic Topic Objects Queue Function Description Returns send(message) Send a message to this Message Queue - Topic Function Description Returns send(message) Send a message to this Message Topic -","title":"Message Producer"},{"location":"messaging/producer/#message-producer","text":"The Messaging Producer is an object which can send text messages to a Queue or Topic destination in the built-in Message Broker. This version is backed by the full fledged messaging broker Apache ActiveMQ . Overview Module: messaging/v4/producer Alias: messaging/producer Definition: https://github.com/eclipse/dirigible/issues/91 Source: /messaging/v4/producer.js Facade: MessagingFacade Status: stable","title":"Message Producer"},{"location":"messaging/producer/#basic-usage","text":"var producer = require ( \"messaging/v4/producer\" ); producer . queue ( \"queue1\" ). send ( \"Text Message\" );","title":"Basic Usage"},{"location":"messaging/producer/#functions","text":"Function Description Returns queue() Returns an object representing a Message Queue Queue topic() Returns an object representing a Message Topic Topic","title":"Functions"},{"location":"messaging/producer/#objects","text":"","title":"Objects"},{"location":"messaging/producer/#queue","text":"Function Description Returns send(message) Send a message to this Message Queue -","title":"Queue"},{"location":"messaging/producer/#topic","text":"Function Description Returns send(message) Send a message to this Message Topic -","title":"Topic"},{"location":"mongodb/client/","text":"MongoDB Client API The MongoDB Client is giving an access to a MongoDB noSQL server. Overview Module: mongodb/client Alias: mongodb/client Definition: https://github.com/eclipse/dirigible/issues/668 Source: /mongodb/client.js Facade: MongoDBFacade Status: alpha Basic Usage var response = require ( \"http/v4/response\" ); var mongodb = require ( \"mongodb/client\" ); var mongoClient = mongodb . getClient (); var collection = mongoClient . getDB ( \"db\" ). getCollection ( \"people\" ); var person = mongodb . createBasicDBObject () . append ( \"_id\" , \"jo\" ) . append ( \"name\" , \"Jo Bloggs\" ); // or directly create an Object: // var person = {\"_id\": \"jo\", \"name\": \"Jo Bloggs\"}; collection . insert ( person ); var query = mongodb . createBasicDBObject (). append ( \"_id\" , \"jo\" ); var cursor = collection . find ( query ); var result = cursor . one (); response . println ( \"Result: \" + result . _id ); response . flush (); response . close (); Functions Function Description Returns getClient() Returns an object representing a MongoDB Client Client createBasicDBObject() Creates an empty DBObject DBObject Objects Client Function Description Returns getDB(name) Returns an object representing a MongoDB Database DB DB Function Description Returns getCollection(name) Returns an object representing a MongoDB Collection DBCollection DBCollection Function Description Returns insert(dbObject) Inserts a DBObject to a Collection - find(query, projection) Returns a DBCursor based on the optional DBObjects parameters DBCursor findOne(query, projection, sort) Returns a single DBObject based on the optional DBObjects parameters and sort DBObject findOneById(id, projection) Returns a single DBObject by id and the optional DBObject projection parameter DBObject count(query) Returns the count of matching DBObjects by the optional DBObject query parameter integer createIndex(keys, options) Creates an index by keys and optional DBObject options parameters - createIndexForField(name) Creates an index for field by name - dropIndex(index) Drops the index by the DBObeject parameter - dropIndexByName(name) Drops the index by the name parameter - dropIndexes() Drops all the indexes - remove(query) Removes the objects matching the query DBObject parameter - rename(newName) Renames the collection by the newName parameter - save(dbObject) Saves a DBObject to a Collection depends on whether _id of the object is provided or not - update(query, update, upsert, multi) Updates the matching objects by query parameter with update value and optional upsert and multi flags - updateMulti(query, update) Updates the matching objects by query parameter with update value - getNextId() Calculate the next id for this collection in case of integer sequence is used integer generateUUID() Generate UUID to be used as id string DBCursor Function Description Returns one() Returns a single DBObject DBObject batchSize(numberOfElements) Sets the batch size - getBatchSize() Gets the batch size integer getCollection() Gets the corresponding DBCollection DBCollection getCursorId() Gets the cursor id integer getKeysWanted() Returns as a keys DBObject DBObject getLimit() Gets the results limit integer close() Closes the cursor - hasNext() Returns true if there is more objects boolean next() Returns the next single DBObject DBObject getQuery() Returns as a query DBObject DBObject length() Returns the length of the results integer limit(limit) Sets the results limit ** min(min) Sets the min results ** max(max) Sets the max results ** maxTime(maxTime) Sets the maxTime timeout in ms ** size() Gets the results size integer sort(orderBy) Sort the result by the orderBy parameter - skip(numberOfElements) Skips the next numberOfElements - DBObject Function Description Returns append(key, value) Adds a pair by key and value parameters DBObject (this) toJson() Renders the DBObject as a JSON string isPartialObject() Only matters if you are going to upsert and do not want to risk losing fields - containsField(key) Whether contans a given field by key parameter boolean get(key) Returns the value by the key parameter primitive put(key, value) Adds the key - value pair - removeField(key) Removes the field by key parameter -","title":"MongoDB Client API"},{"location":"mongodb/client/#mongodb-client-api","text":"The MongoDB Client is giving an access to a MongoDB noSQL server. Overview Module: mongodb/client Alias: mongodb/client Definition: https://github.com/eclipse/dirigible/issues/668 Source: /mongodb/client.js Facade: MongoDBFacade Status: alpha","title":"MongoDB Client API"},{"location":"mongodb/client/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var mongodb = require ( \"mongodb/client\" ); var mongoClient = mongodb . getClient (); var collection = mongoClient . getDB ( \"db\" ). getCollection ( \"people\" ); var person = mongodb . createBasicDBObject () . append ( \"_id\" , \"jo\" ) . append ( \"name\" , \"Jo Bloggs\" ); // or directly create an Object: // var person = {\"_id\": \"jo\", \"name\": \"Jo Bloggs\"}; collection . insert ( person ); var query = mongodb . createBasicDBObject (). append ( \"_id\" , \"jo\" ); var cursor = collection . find ( query ); var result = cursor . one (); response . println ( \"Result: \" + result . _id ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"mongodb/client/#functions","text":"Function Description Returns getClient() Returns an object representing a MongoDB Client Client createBasicDBObject() Creates an empty DBObject DBObject","title":"Functions"},{"location":"mongodb/client/#objects","text":"","title":"Objects"},{"location":"mongodb/client/#client","text":"Function Description Returns getDB(name) Returns an object representing a MongoDB Database DB","title":"Client"},{"location":"mongodb/client/#db","text":"Function Description Returns getCollection(name) Returns an object representing a MongoDB Collection DBCollection","title":"DB"},{"location":"mongodb/client/#dbcollection","text":"Function Description Returns insert(dbObject) Inserts a DBObject to a Collection - find(query, projection) Returns a DBCursor based on the optional DBObjects parameters DBCursor findOne(query, projection, sort) Returns a single DBObject based on the optional DBObjects parameters and sort DBObject findOneById(id, projection) Returns a single DBObject by id and the optional DBObject projection parameter DBObject count(query) Returns the count of matching DBObjects by the optional DBObject query parameter integer createIndex(keys, options) Creates an index by keys and optional DBObject options parameters - createIndexForField(name) Creates an index for field by name - dropIndex(index) Drops the index by the DBObeject parameter - dropIndexByName(name) Drops the index by the name parameter - dropIndexes() Drops all the indexes - remove(query) Removes the objects matching the query DBObject parameter - rename(newName) Renames the collection by the newName parameter - save(dbObject) Saves a DBObject to a Collection depends on whether _id of the object is provided or not - update(query, update, upsert, multi) Updates the matching objects by query parameter with update value and optional upsert and multi flags - updateMulti(query, update) Updates the matching objects by query parameter with update value - getNextId() Calculate the next id for this collection in case of integer sequence is used integer generateUUID() Generate UUID to be used as id string","title":"DBCollection"},{"location":"mongodb/client/#dbcursor","text":"Function Description Returns one() Returns a single DBObject DBObject batchSize(numberOfElements) Sets the batch size - getBatchSize() Gets the batch size integer getCollection() Gets the corresponding DBCollection DBCollection getCursorId() Gets the cursor id integer getKeysWanted() Returns as a keys DBObject DBObject getLimit() Gets the results limit integer close() Closes the cursor - hasNext() Returns true if there is more objects boolean next() Returns the next single DBObject DBObject getQuery() Returns as a query DBObject DBObject length() Returns the length of the results integer limit(limit) Sets the results limit ** min(min) Sets the min results ** max(max) Sets the max results ** maxTime(maxTime) Sets the maxTime timeout in ms ** size() Gets the results size integer sort(orderBy) Sort the result by the orderBy parameter - skip(numberOfElements) Skips the next numberOfElements -","title":"DBCursor"},{"location":"mongodb/client/#dbobject","text":"Function Description Returns append(key, value) Adds a pair by key and value parameters DBObject (this) toJson() Renders the DBObject as a JSON string isPartialObject() Only matters if you are going to upsert and do not want to risk losing fields - containsField(key) Whether contans a given field by key parameter boolean get(key) Returns the value by the key parameter primitive put(key, value) Adds the key - value pair - removeField(key) Removes the field by key parameter -","title":"DBObject"},{"location":"mongodb/dao/","text":"MongoDB DAO API The MongoDB DAO simplified database access objects utility. Overview Module: mongodb/dao Alias: mongodb/dao Definition: https://github.com/eclipse/dirigible/issues/671 Source: /mongodb/dao.js Facade: MongoDBFacade Status: alpha Basic Usage var dao = require ( \"mongodb/dao\" ); //create a DAO from configuration var customers = dao . create ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , required : true }, { name : \"employeesNumber\" , column : \"ORG_EMP_NUM\" , type : \"INTEGER\" , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , required : false }] }); //Create a new customer entity var customerId = customers . insert ({ orgName : \"ACME\" , employeesNumber : 1000 }); //List all customer entities var customersList = customers . list (); //Get a particular customer entity by its id var customer = customers . find ( customerId ); //Update a customer entity property customer . orgDescription = \"ACME is a company\" ; customers . update ( customer ); //Delete a customer entity customers . remove ( customerId ); Functions Function Description Returns create(oConfiguration, loggerName?) Creates new DAO instances from oConfiguraiton JS object, which can be either standard ORM definition or a standard dirigible table definition DAO Objects DAO Function Description Returns insert(entity) inserts array or entity and returns id (or ids of array of entities was supplied as input) any list(oQuerySettings?) lists entities optionally constrained with the supplied query settings Array find(id, expand?, select?) returns an entity by its id(if any), optionally expanding inline the associations defined in expand and optionally constraining the entitiy properties to those specified in select Object update(entity) updates a persistent entity and returns for its dao chaining DAO remove(?id) delete entity by id, or array of ids, or delete all (if not argument is provided). --- count() returns the number of persisted entities Number createTable() Kept for compatibility --- dropTable() Kept for compatibility ---","title":"MongoDB DAO API"},{"location":"mongodb/dao/#mongodb-dao-api","text":"The MongoDB DAO simplified database access objects utility. Overview Module: mongodb/dao Alias: mongodb/dao Definition: https://github.com/eclipse/dirigible/issues/671 Source: /mongodb/dao.js Facade: MongoDBFacade Status: alpha","title":"MongoDB DAO API"},{"location":"mongodb/dao/#basic-usage","text":"var dao = require ( \"mongodb/dao\" ); //create a DAO from configuration var customers = dao . create ({ table : \"CUSTOMERS\" , properties : [{ name : \"id\" , column : \"ID\" , type : \"BIGINT\" , id : true }, { name : \"orgName\" , column : \"ORG_NAME\" , type : \"VARCHAR\" , required : true }, { name : \"employeesNumber\" , column : \"ORG_EMP_NUM\" , type : \"INTEGER\" , required : true }, { name : \"orgDescription\" , column : \"ORG_DESCR\" , type : \"VARCHAR\" , required : false }] }); //Create a new customer entity var customerId = customers . insert ({ orgName : \"ACME\" , employeesNumber : 1000 }); //List all customer entities var customersList = customers . list (); //Get a particular customer entity by its id var customer = customers . find ( customerId ); //Update a customer entity property customer . orgDescription = \"ACME is a company\" ; customers . update ( customer ); //Delete a customer entity customers . remove ( customerId );","title":"Basic Usage"},{"location":"mongodb/dao/#functions","text":"Function Description Returns create(oConfiguration, loggerName?) Creates new DAO instances from oConfiguraiton JS object, which can be either standard ORM definition or a standard dirigible table definition DAO","title":"Functions"},{"location":"mongodb/dao/#objects","text":"","title":"Objects"},{"location":"mongodb/dao/#dao","text":"Function Description Returns insert(entity) inserts array or entity and returns id (or ids of array of entities was supplied as input) any list(oQuerySettings?) lists entities optionally constrained with the supplied query settings Array find(id, expand?, select?) returns an entity by its id(if any), optionally expanding inline the associations defined in expand and optionally constraining the entitiy properties to those specified in select Object update(entity) updates a persistent entity and returns for its dao chaining DAO remove(?id) delete entity by id, or array of ids, or delete all (if not argument is provided). --- count() returns the number of persisted entities Number createTable() Kept for compatibility --- dropTable() Kept for compatibility ---","title":"DAO"},{"location":"net/soap/","text":"SOAP SOAP utility exposes web services frameowrk for manipulating SOAP messages, making calls to external end-points and creating simple web services Overview Module: net/v4/soap Alias: net/soap Definition: https://github.com/eclipse/dirigible/issues/390 Source: /net/v4/soap.js Facade: none Status: stable Basic Usage var soap = require ( \"net/v4/soap\" ); var response = require ( 'http/v4/response' ); response . setContentType ( \"text/plain; charset=UTF-8\" ); var requestMessage = soap . createMessage (); var part = requestMessage . getPart (); var envelope = part . getEnvelope (); envelope . addNamespaceDeclaration ( \"ws\" , \"http://ws.cdyne.com/\" ); var body = envelope . getBody (); var resolveIPElement = body . addChildElement ( \"ResolveIP\" , \"ws\" ); var ipAddressElement = resolveIPElement . addChildElement ( \"ipAddress\" , \"ws\" ); ipAddressElement . addTextNode ( \"213.239.203.158\" ); var licenseKeyElement = resolveIPElement . addChildElement ( \"licenseKey\" , \"ws\" ); licenseKeyElement . addTextNode ( \"\" ); var mimeHeaders = requestMessage . getMimeHeaders (); mimeHeaders . addHeader ( \"SOAPAction\" , \"http://ws.cdyne.com/ResolveIP\" ); requestMessage . save (); response . println ( \"Request: \" + requestMessage . getText ()); var responseMessage = soap . call ( requestMessage , \"http://ws.cdyne.com/ip2geo/ip2geo.asmx\" ); response . println ( \"Response: \" + responseMessage . getText ()); response . flush (); response . close (); Functions Function Description Returns createMessage() Creates an empty SOAP Message Message parseMessage(mimeHeaders, inputStream) Creates a message by a given MIME Headers and by parsing of the provided input stream Message parseRequest() Creates a message by parsing the standard Request input and empty headers Message createMimeHeaders() Creates an empty MimeHeaders MimeHeaders call(request, url) Calls an end-point of a SOAP Web Service with a request Message and returns the response Message Message Objects Message Function Description Returns getMimeHeaders() Returns the MimeHeaders object of this Message MimeHeaders getPart() Returns the Part object of this Message Part save() Save the changes made on the Message and its components - getText() Returns a text representation of the Message string MimeHeaders Function Description Returns addHeader(name, value) Creates and add a new MIME header - Part Function Description Returns getEnvelope() Returns the Envelope object of this Part Envelope Envelope Function Description Returns getBody() Returns the Body object of this Envelope Body getHeader() Returns the Header object of this Envelope Header addNamespaceDeclaration(prefix, uri) Creates and add a namespace attribute - createName(localName, prefix, uri) Creates a Name object to be used further Name Body Function Description Returns getChildElements() Returns an array of the child Elements [Element] addChildElement(localName, prefix) Creates and add a child Element Element Header Function Description Returns addHeaderElement(name) Creates and add a Header Element with a Name Element Name Function Description Returns getLocalName() Returns the Local Name of the Name object string getPrefix() Returns the Prefix of the Name object string getQualifiedName() Returns the Qualified Name of the Name object string getURI() Returns the URI of the Name object string Element Function Description Returns getChildElements() Returns an array of the child Elements [Element] getElementName() Returns the name of the Element Name getValue() Returns the value of the Element if any string addChildElement(localName, prefix) Creates and add a child Element Element addTextNode(text) Creates and add a text node Element addAttribute(name, value) Creates and add an attribute Element isSOAPElement() Returns true if the Element is SOAP Element and false otherwise (e.g. CDATA, PDATA, etc.) string","title":"SOAP"},{"location":"net/soap/#soap","text":"SOAP utility exposes web services frameowrk for manipulating SOAP messages, making calls to external end-points and creating simple web services Overview Module: net/v4/soap Alias: net/soap Definition: https://github.com/eclipse/dirigible/issues/390 Source: /net/v4/soap.js Facade: none Status: stable","title":"SOAP"},{"location":"net/soap/#basic-usage","text":"var soap = require ( \"net/v4/soap\" ); var response = require ( 'http/v4/response' ); response . setContentType ( \"text/plain; charset=UTF-8\" ); var requestMessage = soap . createMessage (); var part = requestMessage . getPart (); var envelope = part . getEnvelope (); envelope . addNamespaceDeclaration ( \"ws\" , \"http://ws.cdyne.com/\" ); var body = envelope . getBody (); var resolveIPElement = body . addChildElement ( \"ResolveIP\" , \"ws\" ); var ipAddressElement = resolveIPElement . addChildElement ( \"ipAddress\" , \"ws\" ); ipAddressElement . addTextNode ( \"213.239.203.158\" ); var licenseKeyElement = resolveIPElement . addChildElement ( \"licenseKey\" , \"ws\" ); licenseKeyElement . addTextNode ( \"\" ); var mimeHeaders = requestMessage . getMimeHeaders (); mimeHeaders . addHeader ( \"SOAPAction\" , \"http://ws.cdyne.com/ResolveIP\" ); requestMessage . save (); response . println ( \"Request: \" + requestMessage . getText ()); var responseMessage = soap . call ( requestMessage , \"http://ws.cdyne.com/ip2geo/ip2geo.asmx\" ); response . println ( \"Response: \" + responseMessage . getText ()); response . flush (); response . close ();","title":"Basic Usage"},{"location":"net/soap/#functions","text":"Function Description Returns createMessage() Creates an empty SOAP Message Message parseMessage(mimeHeaders, inputStream) Creates a message by a given MIME Headers and by parsing of the provided input stream Message parseRequest() Creates a message by parsing the standard Request input and empty headers Message createMimeHeaders() Creates an empty MimeHeaders MimeHeaders call(request, url) Calls an end-point of a SOAP Web Service with a request Message and returns the response Message Message","title":"Functions"},{"location":"net/soap/#objects","text":"","title":"Objects"},{"location":"net/soap/#message","text":"Function Description Returns getMimeHeaders() Returns the MimeHeaders object of this Message MimeHeaders getPart() Returns the Part object of this Message Part save() Save the changes made on the Message and its components - getText() Returns a text representation of the Message string","title":"Message"},{"location":"net/soap/#mimeheaders","text":"Function Description Returns addHeader(name, value) Creates and add a new MIME header -","title":"MimeHeaders"},{"location":"net/soap/#part","text":"Function Description Returns getEnvelope() Returns the Envelope object of this Part Envelope","title":"Part"},{"location":"net/soap/#envelope","text":"Function Description Returns getBody() Returns the Body object of this Envelope Body getHeader() Returns the Header object of this Envelope Header addNamespaceDeclaration(prefix, uri) Creates and add a namespace attribute - createName(localName, prefix, uri) Creates a Name object to be used further Name","title":"Envelope"},{"location":"net/soap/#body","text":"Function Description Returns getChildElements() Returns an array of the child Elements [Element] addChildElement(localName, prefix) Creates and add a child Element Element","title":"Body"},{"location":"net/soap/#header","text":"Function Description Returns addHeaderElement(name) Creates and add a Header Element with a Name Element","title":"Header"},{"location":"net/soap/#name","text":"Function Description Returns getLocalName() Returns the Local Name of the Name object string getPrefix() Returns the Prefix of the Name object string getQualifiedName() Returns the Qualified Name of the Name object string getURI() Returns the URI of the Name object string","title":"Name"},{"location":"net/soap/#element","text":"Function Description Returns getChildElements() Returns an array of the child Elements [Element] getElementName() Returns the name of the Element Name getValue() Returns the value of the Element if any string addChildElement(localName, prefix) Creates and add a child Element Element addTextNode(text) Creates and add a text node Element addAttribute(name, value) Creates and add an attribute Element isSOAPElement() Returns true if the Element is SOAP Element and false otherwise (e.g. CDATA, PDATA, etc.) string","title":"Element"},{"location":"net/websocket/","text":"WebSocket WebSocket API provides access to the Session object for management of the bi-directional communication based on Websockets specification. Overview Module: net/v4/websockets Alias: net/websockets Definition: https://github.com/eclipse/dirigible/issues/391 Source: /net/v4/websockets.js Facade: WebsocketsFacade Status: stable Basic Usage Client var websockets = require ( \"net/v4/websockets\" ); var uri = \"ws://echo.websocket.org:80/\" ; var handler = \"my-project/ws-handler\" function initialize () { console . log ( \"Connect to: \" + uri ); var websocket = websockets . createWebsocket ( uri , handler ); websocket . send ( \"hello\" ); } initialize (); websockets . getClientByHandler ( handler ). close (); The handler: exports . onOpen = function () { console . log ( \"Connection openned.\" ); } exports . onMessage = function ( message ) { console . log ( \"Message received: \" + message ); } exports . onError = function ( error ) { console . error ( \"Error: \" + error ); } exports . onClose = function () { console . warn ( \"Connection closed.\" ); } Server For example: my-endpoint.websocket is using the same handler from above { \"handler\": \"my-project/ws-handler\", \"endpoint\":\"my-endpoint\", \"description\":\"My Websocket\" } then you can call from a browser: var ws = new WebSocket(\"ws://localhost:8080/websockets/v4/service/my-endpoint\"); ws.send('hello'); Functions Function Description Returns createWebsocket(uri, handler, engine) Creates a WebsocketClient by URI, handler and engine type WebsocketClient getClients() Returns the list of the created WebsocketClients list of WebsocketClient metadata getClient(id) Returns the client by its id, if exists or null otherwise WebsocketClient getClientByHandler(handler) Returns the client by its handler, if exists or null otherwise WebsocketClient getMessage() Returns the message in context of OnMessage handler string getError() Returns the error in context of OnError handler string getMethod() Returns the method type in context of the handler onopen, onmessage, onerror, onclose isOnOpen() Returns true in context of OnOpen handler boolean isOnMessage() Returns true in context of OnMessage handler boolean isOnError() Returns true in context of OnError handler boolean isOnClose() Returns true in context of OnClose handler boolean Objects WebsocketClient Function Description Returns send(message) Sends a text message via the Websocket connection - close() Closes the Websocket connection -","title":"WebSocket"},{"location":"net/websocket/#websocket","text":"WebSocket API provides access to the Session object for management of the bi-directional communication based on Websockets specification. Overview Module: net/v4/websockets Alias: net/websockets Definition: https://github.com/eclipse/dirigible/issues/391 Source: /net/v4/websockets.js Facade: WebsocketsFacade Status: stable","title":"WebSocket"},{"location":"net/websocket/#basic-usage","text":"","title":"Basic Usage"},{"location":"net/websocket/#client","text":"var websockets = require ( \"net/v4/websockets\" ); var uri = \"ws://echo.websocket.org:80/\" ; var handler = \"my-project/ws-handler\" function initialize () { console . log ( \"Connect to: \" + uri ); var websocket = websockets . createWebsocket ( uri , handler ); websocket . send ( \"hello\" ); } initialize (); websockets . getClientByHandler ( handler ). close (); The handler: exports . onOpen = function () { console . log ( \"Connection openned.\" ); } exports . onMessage = function ( message ) { console . log ( \"Message received: \" + message ); } exports . onError = function ( error ) { console . error ( \"Error: \" + error ); } exports . onClose = function () { console . warn ( \"Connection closed.\" ); }","title":"Client"},{"location":"net/websocket/#server","text":"For example: my-endpoint.websocket is using the same handler from above { \"handler\": \"my-project/ws-handler\", \"endpoint\":\"my-endpoint\", \"description\":\"My Websocket\" } then you can call from a browser: var ws = new WebSocket(\"ws://localhost:8080/websockets/v4/service/my-endpoint\"); ws.send('hello');","title":"Server"},{"location":"net/websocket/#functions","text":"Function Description Returns createWebsocket(uri, handler, engine) Creates a WebsocketClient by URI, handler and engine type WebsocketClient getClients() Returns the list of the created WebsocketClients list of WebsocketClient metadata getClient(id) Returns the client by its id, if exists or null otherwise WebsocketClient getClientByHandler(handler) Returns the client by its handler, if exists or null otherwise WebsocketClient getMessage() Returns the message in context of OnMessage handler string getError() Returns the error in context of OnError handler string getMethod() Returns the method type in context of the handler onopen, onmessage, onerror, onclose isOnOpen() Returns true in context of OnOpen handler boolean isOnMessage() Returns true in context of OnMessage handler boolean isOnError() Returns true in context of OnError handler boolean isOnClose() Returns true in context of OnClose handler boolean","title":"Functions"},{"location":"net/websocket/#objects","text":"","title":"Objects"},{"location":"net/websocket/#websocketclient","text":"Function Description Returns send(message) Sends a text message via the Websocket connection - close() Closes the Websocket connection -","title":"WebsocketClient"},{"location":"platform/engines/","text":"Engines Engines object is used for executing a scripting service programmatically. Overview Module: platform/v4/engines Alias: platform/engines Definition: https://github.com/eclipse/dirigible/issues/234 Source: /platform/v4/engines.js Facade: ScriptEngineExecutorsManager Status: stable Basic Usage var engines = require ( \"platform/v4/engines\" ); var response = require ( \"http/v4/response\" ); var result = engines . getEngine ( \"javascript\" ). execute ( \"project1/hello\" , {}); response . println ( result ); response . flush (); response . close (); Functions Function Description Returns getEngine(type) Returns the engine object per type provided Engine getTypes() Returns the list of the registered engine types array of strings Objects Engine Function Description Returns execute(module, context) Executes a given module with a given context object executeCode(source, context) Executes a given source code with a given context object","title":"Engines"},{"location":"platform/engines/#engines","text":"Engines object is used for executing a scripting service programmatically. Overview Module: platform/v4/engines Alias: platform/engines Definition: https://github.com/eclipse/dirigible/issues/234 Source: /platform/v4/engines.js Facade: ScriptEngineExecutorsManager Status: stable","title":"Engines"},{"location":"platform/engines/#basic-usage","text":"var engines = require ( \"platform/v4/engines\" ); var response = require ( \"http/v4/response\" ); var result = engines . getEngine ( \"javascript\" ). execute ( \"project1/hello\" , {}); response . println ( result ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"platform/engines/#functions","text":"Function Description Returns getEngine(type) Returns the engine object per type provided Engine getTypes() Returns the list of the registered engine types array of strings","title":"Functions"},{"location":"platform/engines/#objects","text":"","title":"Objects"},{"location":"platform/engines/#engine","text":"Function Description Returns execute(module, context) Executes a given module with a given context object executeCode(source, context) Executes a given source code with a given context object","title":"Engine"},{"location":"platform/lifecycle/","text":"Lifecycle Lifecycle module provides utility functions for managing the lifecycle of the projects in the system Overview Module: platform/v4/lifecycle Alias: platform/lifecycle Definition: https://github.com/eclipse/dirigible/issues/233 Source: /platform/v4/lifecycle.js Facade: LifecycleFacade Status: stable Basic Usage var response = require ( \"http/v4/response\" ); var user = require ( \"security/v4/user\" ); var workspace = require ( \"workspace/v4/manager\" ); var lifecycle = require ( \"platform/v4/lifecycle\" ); var bytes = require ( \"io/v4/bytes\" ); var user = user . getName (); var workspaceName = \"workspace\" ; var projectName = \"project\" ; var myWorkspace = workspace . createWorkspace ( workspaceName ); var myProject = myWorkspace . createProject ( projectName ); var myFile = myProject . createFile ( \"file.js\" ); myFile . setContent ( bytes . textToByteArray ( \"console.log('Hello World!');\" )); var publishResult = lifecycle . publish ( user , workspaceName , projectName ); response . println ( \"publishResult: \" + publishResult ) Functions Function Description Returns publish(user, workspace, project) Publish project from the workspace, the project parameter is optional boolean unpublish(user, workspace, project) Unpublish project from the workspace, the project parameter is optional boolean","title":"Lifecycle"},{"location":"platform/lifecycle/#lifecycle","text":"Lifecycle module provides utility functions for managing the lifecycle of the projects in the system Overview Module: platform/v4/lifecycle Alias: platform/lifecycle Definition: https://github.com/eclipse/dirigible/issues/233 Source: /platform/v4/lifecycle.js Facade: LifecycleFacade Status: stable","title":"Lifecycle"},{"location":"platform/lifecycle/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var user = require ( \"security/v4/user\" ); var workspace = require ( \"workspace/v4/manager\" ); var lifecycle = require ( \"platform/v4/lifecycle\" ); var bytes = require ( \"io/v4/bytes\" ); var user = user . getName (); var workspaceName = \"workspace\" ; var projectName = \"project\" ; var myWorkspace = workspace . createWorkspace ( workspaceName ); var myProject = myWorkspace . createProject ( projectName ); var myFile = myProject . createFile ( \"file.js\" ); myFile . setContent ( bytes . textToByteArray ( \"console.log('Hello World!');\" )); var publishResult = lifecycle . publish ( user , workspaceName , projectName ); response . println ( \"publishResult: \" + publishResult )","title":"Basic Usage"},{"location":"platform/lifecycle/#functions","text":"Function Description Returns publish(user, workspace, project) Publish project from the workspace, the project parameter is optional boolean unpublish(user, workspace, project) Unpublish project from the workspace, the project parameter is optional boolean","title":"Functions"},{"location":"platform/registry/","text":"Registry Registry object gives access to the content in the repository and also the pre-delivered content Overview Module: platform/v4/registry Alias: platform/registry Definition: https://github.com/eclipse/dirigible/issues/508 Source: /platform/v4/registry.js Facade: ContentFacade Status: stable Basic Usage var response = require ( \"http/v4/response\" ); var repositoryContent = require ( \"platform/v4/registry\" ); var text = repositoryContent . getText ( \"platform/v4/registry.js\" ); response . println ( text ); response . flush (); response . close (); Functions Function Description Returns getContent(path) Gets the content of resource by path, as byte array array of bytes getText(path) Gets the content of resource by path, as text string find(path, pattern) Find resources under certain path (e.g. /) by pattern (e.g. *.js) array of strings","title":"Registry"},{"location":"platform/registry/#registry","text":"Registry object gives access to the content in the repository and also the pre-delivered content Overview Module: platform/v4/registry Alias: platform/registry Definition: https://github.com/eclipse/dirigible/issues/508 Source: /platform/v4/registry.js Facade: ContentFacade Status: stable","title":"Registry"},{"location":"platform/registry/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var repositoryContent = require ( \"platform/v4/registry\" ); var text = repositoryContent . getText ( \"platform/v4/registry.js\" ); response . println ( text ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"platform/registry/#functions","text":"Function Description Returns getContent(path) Gets the content of resource by path, as byte array array of bytes getText(path) Gets the content of resource by path, as text string find(path, pattern) Find resources under certain path (e.g. /) by pattern (e.g. *.js) array of strings","title":"Functions"},{"location":"platform/repository/","text":"Repository Repository object gives access to the repository. It can be used for creating artifacts such as services and web pages programmatically. Overview Module: platform/v4/repository Alias: platform/repository Definition: https://github.com/eclipse/dirigible/issues/377 Source: /platform/v4/repository.js Facade: RepositoryFacade Status: stable Basic Usage The service which list the available workspaces: var response = require ( \"http/v4/response\" ); var repositoryManager = require ( \"platform/v4/repository\" ); var resource = repositoryManager . getResource ( \"/registry/public/platform/v4/repository.js\" ); response . println ( \"Exists: \" + resource . exists ()); response . flush (); response . close (); Functions Function Description Returns getResource(path) Get Resource by path Resource createResource(path, content, contentType) Creates Resource programmatically Resource updateResource(path, content) Updates Resource content Resource deleteResource(path) Delete Resource by path - getCollection(path) Get Collection by path Collection createCollection(path) Creates Collection programmatically Collection deleteCollection(path) Delete Collection by path - find(path, pattern) Find resources under certain path (e.g. /) by pattern (e.g. *.js) array of strings Objects Resource Function Description Returns getName() Gets the Resource name string getPath() Gets the Resource path string getParent() Gets the Resource parent Collection Collection getInformation() Get the Resource information EntityInformation create() Create new Resource - delete() Delete the Resource - renameTo(name) Rename the Resource - moveTo(path) Moves the Resource to a new location - copyTo(path) Copy the Resource to a new location - exists() Returns true if the Resource exists boolean isEmpty() Returns true if the Resource is empty boolean getText() Returns the content of the Resource as text string getContent() Returns the content of the Resource byte array setContent(content) Sets the Resource content - isBinary() Returns true if the Resource content is binary boolean getContentType() Returns the content type of the Resource string Collection Function Description Returns getName() Gets the Collection name string getPath() Gets the Collection path string getParent() Gets the Collection parent Collection Collection getInformation() Get the Collection information EntityInformation create() Create new Collection - delete() Delete the Collection - renameTo(name) Rename the Collection - moveTo(path) Moves the Collection to a new location - copyTo(path) Copy the Collection to a new location - exists() Returns true if the Collection exists boolean isEmpty() Returns true if the Collection is empty boolean getCollectionsNames() Gets the names of the Collections in this Collection array of strings createCollection(name) Create new Collection Collection getCollection(name) Get Collection by name Collection removeCollection(name) Remove Collection by name - getResourcesNames() Gets the names of the Resources in this Collection array of strings getResource(name) Get Resource by name Resource removeResource(name) Remove Resource by name - createResource(name, content) Create new Resource Resource EntityInformation Function Description Returns getName() Gets the entity name string getPath() Gets the entity path string getPermissions() Gets the entity permissions string getSize() Gets the entity size string getCreatedBy() Gets the entity createdBy string getCreatedAt() Gets the entity createdAt string getModifiedBy() Gets the entity modifiedBy string getModifiedAt() Gets the entity modifiedAt string","title":"Repository"},{"location":"platform/repository/#repository","text":"Repository object gives access to the repository. It can be used for creating artifacts such as services and web pages programmatically. Overview Module: platform/v4/repository Alias: platform/repository Definition: https://github.com/eclipse/dirigible/issues/377 Source: /platform/v4/repository.js Facade: RepositoryFacade Status: stable","title":"Repository"},{"location":"platform/repository/#basic-usage","text":"The service which list the available workspaces: var response = require ( \"http/v4/response\" ); var repositoryManager = require ( \"platform/v4/repository\" ); var resource = repositoryManager . getResource ( \"/registry/public/platform/v4/repository.js\" ); response . println ( \"Exists: \" + resource . exists ()); response . flush (); response . close ();","title":"Basic Usage"},{"location":"platform/repository/#functions","text":"Function Description Returns getResource(path) Get Resource by path Resource createResource(path, content, contentType) Creates Resource programmatically Resource updateResource(path, content) Updates Resource content Resource deleteResource(path) Delete Resource by path - getCollection(path) Get Collection by path Collection createCollection(path) Creates Collection programmatically Collection deleteCollection(path) Delete Collection by path - find(path, pattern) Find resources under certain path (e.g. /) by pattern (e.g. *.js) array of strings","title":"Functions"},{"location":"platform/repository/#objects","text":"","title":"Objects"},{"location":"platform/repository/#resource","text":"Function Description Returns getName() Gets the Resource name string getPath() Gets the Resource path string getParent() Gets the Resource parent Collection Collection getInformation() Get the Resource information EntityInformation create() Create new Resource - delete() Delete the Resource - renameTo(name) Rename the Resource - moveTo(path) Moves the Resource to a new location - copyTo(path) Copy the Resource to a new location - exists() Returns true if the Resource exists boolean isEmpty() Returns true if the Resource is empty boolean getText() Returns the content of the Resource as text string getContent() Returns the content of the Resource byte array setContent(content) Sets the Resource content - isBinary() Returns true if the Resource content is binary boolean getContentType() Returns the content type of the Resource string","title":"Resource"},{"location":"platform/repository/#collection","text":"Function Description Returns getName() Gets the Collection name string getPath() Gets the Collection path string getParent() Gets the Collection parent Collection Collection getInformation() Get the Collection information EntityInformation create() Create new Collection - delete() Delete the Collection - renameTo(name) Rename the Collection - moveTo(path) Moves the Collection to a new location - copyTo(path) Copy the Collection to a new location - exists() Returns true if the Collection exists boolean isEmpty() Returns true if the Collection is empty boolean getCollectionsNames() Gets the names of the Collections in this Collection array of strings createCollection(name) Create new Collection Collection getCollection(name) Get Collection by name Collection removeCollection(name) Remove Collection by name - getResourcesNames() Gets the names of the Resources in this Collection array of strings getResource(name) Get Resource by name Resource removeResource(name) Remove Resource by name - createResource(name, content) Create new Resource Resource","title":"Collection"},{"location":"platform/repository/#entityinformation","text":"Function Description Returns getName() Gets the entity name string getPath() Gets the entity path string getPermissions() Gets the entity permissions string getSize() Gets the entity size string getCreatedBy() Gets the entity createdBy string getCreatedAt() Gets the entity createdAt string getModifiedBy() Gets the entity modifiedBy string getModifiedAt() Gets the entity modifiedAt string","title":"EntityInformation"},{"location":"platform/template-engines/","text":"Template Engines The object is used for processing of templates Overview Module: platform/v4/template-engines Alias: platform/template-engines Definition: https://github.com/eclipse/dirigible/issues/507 Source: /platform/v4/template-engines.js Facade: TemplateEngineFacade Status: stable Basic Usage var response = require ( \"http/v4/response\" ); var templateEngines = require ( \"platform/v4/template-engines\" ); var template = \"Dear ${name},\\n\\n\" + \"You have the following bills:\\n\" + \"#foreach($next in $bills)\" + \"- ${next.name}: ${next.currencySymbol}${next.value}\\n\" + \"#end\" ; var parameters = { name : \"John Doe\" , bills : [{ name : \"Electricity\" , currencySymbol : \"$\" , value : 150 }, { name : \"Cable & Internet\" , currencySymbol : \"$\" , value : 80 }, { name : \"Phone\" , currencySymbol : \"$\" , value : 35 }] }; var result = templateEngines . generate ( template , parameters ); response . println ( result ); Functions Function Description Returns generate(template, parameters) Returns the result of the generation string generateFromFile(location, parameters) Returns the result of the generation string getDefaultEngine() Returns the default template engine TemplateEngine getMustacheEngine() Returns the Mustache template engine TemplateEngine getVelocityEngine() Returns the Velocity template engine TemplateEngine getJavascriptEngine() Returns the Javascript template engine TemplateEngine Objects TemplateEngine Function Description Returns generate(template, parameters) Returns the result of the generation string setSm(sm) (mustache only) Sets the expression start symbol, default is {{ - setEm(em) (mustache only) Sets the expression end symbol, default is }} -","title":"Template Engines"},{"location":"platform/template-engines/#template-engines","text":"The object is used for processing of templates Overview Module: platform/v4/template-engines Alias: platform/template-engines Definition: https://github.com/eclipse/dirigible/issues/507 Source: /platform/v4/template-engines.js Facade: TemplateEngineFacade Status: stable","title":"Template Engines"},{"location":"platform/template-engines/#basic-usage","text":"var response = require ( \"http/v4/response\" ); var templateEngines = require ( \"platform/v4/template-engines\" ); var template = \"Dear ${name},\\n\\n\" + \"You have the following bills:\\n\" + \"#foreach($next in $bills)\" + \"- ${next.name}: ${next.currencySymbol}${next.value}\\n\" + \"#end\" ; var parameters = { name : \"John Doe\" , bills : [{ name : \"Electricity\" , currencySymbol : \"$\" , value : 150 }, { name : \"Cable & Internet\" , currencySymbol : \"$\" , value : 80 }, { name : \"Phone\" , currencySymbol : \"$\" , value : 35 }] }; var result = templateEngines . generate ( template , parameters ); response . println ( result );","title":"Basic Usage"},{"location":"platform/template-engines/#functions","text":"Function Description Returns generate(template, parameters) Returns the result of the generation string generateFromFile(location, parameters) Returns the result of the generation string getDefaultEngine() Returns the default template engine TemplateEngine getMustacheEngine() Returns the Mustache template engine TemplateEngine getVelocityEngine() Returns the Velocity template engine TemplateEngine getJavascriptEngine() Returns the Javascript template engine TemplateEngine","title":"Functions"},{"location":"platform/template-engines/#objects","text":"","title":"Objects"},{"location":"platform/template-engines/#templateengine","text":"Function Description Returns generate(template, parameters) Returns the result of the generation string setSm(sm) (mustache only) Sets the expression start symbol, default is {{ - setEm(em) (mustache only) Sets the expression end symbol, default is }} -","title":"TemplateEngine"},{"location":"platform/workspace/","text":"Workspace Workspace object gives access to the user's workspaces. It can be used for creating artifacts such as services and web pages programmatically. Overview Module: platform/v4/workspace Alias: platform/workspace Definition: https://github.com/eclipse/dirigible/issues/230 Source: /platform/v4/workspace.js Facade: WorkspaceFacade Status: stable Basic Usage The service which list the available workspaces: var workspaceManager = require ( \"platform/v4/workspace\" ); var response = require ( \"http/v4/response\" ); var workspacesNames = workspaceManager . getWorkspacesNames (); response . println ( \"Workspaces: \" + workspacesNames ); response . flush (); response . close (); Functions Function Description Returns createWorkspace(name) Creates a new Workspace programmatically Workspace getWorkspace(name) Gets the Workspace by name programmatically Workspace getWorkspacesNames() List the names of the available workspaces programmatically array of string deleteWorkspace(name) Deletes the Workspace by name programmatically - Objects Workspace Function Description Returns getProjects() List the names of the available workspaces programmatically Projects createProject(name) Creates a new Project programmatically Project getProject(name) Gets the Project by name programmatically Project deleteProject(name) Deletes the Project by name programmatically - exists() Check whether this Workspace object does exist programmatically boolean existsFolder(path) Check whether a Folder by given path exists in this Workspace programmatically boolean existsFile(path) Check whether a File by given path exists in this Workspace programmatically boolean copyProject(source, target) Copies a given Project programmatically - moveProject(source, target) Copies a given Project programmatically - Projects Function Description Returns size() Returns the size of this Projects list programmatically integer get(index) Gets a Project by index programmatically Project Project Function Description Returns getName() Returns the name of the Project programmatically string getPath() Returns the path of the Project programmatically string exists() Check whether this Project object does exist programmatically boolean createFolder(path) Creates a new Folder by name programmatically Folder existsFolder(path) Check whether a Folder by given path exists in this Project programmatically boolean getFolder(path) Gets a Folder by path programmatically Folder getFolders(path) Gets all the Folders under the path programmatically Folders deletesFolder(path) Deletes a Folder by path programmatically - createFile(path) Creates a new File by name programmatically File existsFile(path) Check whether a File by given path exists in this Project programmatically boolean getFile(path) Gets a File by path programmatically File getFiles(path) Gets all the Files under the path programmatically Files deletesFile(path) Deletes a File by path programmatically - Folders Function Description Returns size() Returns the size of this Folders list programmatically integer get(index) Gets a Folder by index programmatically Folder Files Function Description Returns size() Returns the size of this Files list programmatically integer get(index) Gets a File by index programmatically File Folder Function Description Returns getName() Returns the name of the Folder programmatically string getPath() Returns the path of the Folder programmatically string exists() Check whether this Folder object does exist programmatically boolean createFolder(path) Creates a new Folder by name programmatically Folder existsFolder(path) Check whether a Folder by given path exists in this Folder programmatically boolean getFolder(path) Gets a Folder by path programmatically Folder getFolders(path) Gets all the Folders under the path programmatically Folders deletesFolder(path) Deletes a Folder by path programmatically - createFile(path) Creates a new File by name programmatically File existsFile(path) Check whether a File by given path exists in this Folder programmatically boolean getFile(path) Gets a File by path programmatically File getFiles(path) Gets all the Files under the path programmatically Files deletesFile(path) Deletes a File by path programmatically - File Function Description Returns getName() Returns the name of the File programmatically string getPath() Returns the path of the File programmatically string exists() Check whether this File object does exist programmatically boolean getContentType() Returns the Content Type of the File programmatically string isBinary() Returns the Binary flag of the File programmatically boolean getContent() Returns the Content of the File programmatically bytes setContent(input) Sets the Content of the File programmatically by the given bytes input - getText() Returns the Content of the File programmatically string setText(input) Sets the Content of the File programmatically by the given string input -","title":"Workspace"},{"location":"platform/workspace/#workspace","text":"Workspace object gives access to the user's workspaces. It can be used for creating artifacts such as services and web pages programmatically. Overview Module: platform/v4/workspace Alias: platform/workspace Definition: https://github.com/eclipse/dirigible/issues/230 Source: /platform/v4/workspace.js Facade: WorkspaceFacade Status: stable","title":"Workspace"},{"location":"platform/workspace/#basic-usage","text":"The service which list the available workspaces: var workspaceManager = require ( \"platform/v4/workspace\" ); var response = require ( \"http/v4/response\" ); var workspacesNames = workspaceManager . getWorkspacesNames (); response . println ( \"Workspaces: \" + workspacesNames ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"platform/workspace/#functions","text":"Function Description Returns createWorkspace(name) Creates a new Workspace programmatically Workspace getWorkspace(name) Gets the Workspace by name programmatically Workspace getWorkspacesNames() List the names of the available workspaces programmatically array of string deleteWorkspace(name) Deletes the Workspace by name programmatically -","title":"Functions"},{"location":"platform/workspace/#objects","text":"","title":"Objects"},{"location":"platform/workspace/#workspace_1","text":"Function Description Returns getProjects() List the names of the available workspaces programmatically Projects createProject(name) Creates a new Project programmatically Project getProject(name) Gets the Project by name programmatically Project deleteProject(name) Deletes the Project by name programmatically - exists() Check whether this Workspace object does exist programmatically boolean existsFolder(path) Check whether a Folder by given path exists in this Workspace programmatically boolean existsFile(path) Check whether a File by given path exists in this Workspace programmatically boolean copyProject(source, target) Copies a given Project programmatically - moveProject(source, target) Copies a given Project programmatically -","title":"Workspace"},{"location":"platform/workspace/#projects","text":"Function Description Returns size() Returns the size of this Projects list programmatically integer get(index) Gets a Project by index programmatically Project","title":"Projects"},{"location":"platform/workspace/#project","text":"Function Description Returns getName() Returns the name of the Project programmatically string getPath() Returns the path of the Project programmatically string exists() Check whether this Project object does exist programmatically boolean createFolder(path) Creates a new Folder by name programmatically Folder existsFolder(path) Check whether a Folder by given path exists in this Project programmatically boolean getFolder(path) Gets a Folder by path programmatically Folder getFolders(path) Gets all the Folders under the path programmatically Folders deletesFolder(path) Deletes a Folder by path programmatically - createFile(path) Creates a new File by name programmatically File existsFile(path) Check whether a File by given path exists in this Project programmatically boolean getFile(path) Gets a File by path programmatically File getFiles(path) Gets all the Files under the path programmatically Files deletesFile(path) Deletes a File by path programmatically -","title":"Project"},{"location":"platform/workspace/#folders","text":"Function Description Returns size() Returns the size of this Folders list programmatically integer get(index) Gets a Folder by index programmatically Folder","title":"Folders"},{"location":"platform/workspace/#files","text":"Function Description Returns size() Returns the size of this Files list programmatically integer get(index) Gets a File by index programmatically File","title":"Files"},{"location":"platform/workspace/#folder","text":"Function Description Returns getName() Returns the name of the Folder programmatically string getPath() Returns the path of the Folder programmatically string exists() Check whether this Folder object does exist programmatically boolean createFolder(path) Creates a new Folder by name programmatically Folder existsFolder(path) Check whether a Folder by given path exists in this Folder programmatically boolean getFolder(path) Gets a Folder by path programmatically Folder getFolders(path) Gets all the Folders under the path programmatically Folders deletesFolder(path) Deletes a Folder by path programmatically - createFile(path) Creates a new File by name programmatically File existsFile(path) Check whether a File by given path exists in this Folder programmatically boolean getFile(path) Gets a File by path programmatically File getFiles(path) Gets all the Files under the path programmatically Files deletesFile(path) Deletes a File by path programmatically -","title":"Folder"},{"location":"platform/workspace/#file","text":"Function Description Returns getName() Returns the name of the File programmatically string getPath() Returns the path of the File programmatically string exists() Check whether this File object does exist programmatically boolean getContentType() Returns the Content Type of the File programmatically string isBinary() Returns the Binary flag of the File programmatically boolean getContent() Returns the Content of the File programmatically bytes setContent(input) Sets the Content of the File programmatically by the given bytes input - getText() Returns the Content of the File programmatically string setText(input) Sets the Content of the File programmatically by the given string input -","title":"File"},{"location":"utils/base64/","text":"Base64 Base64 object is used to encode/decode in base64. Overview Module: utils/v4/base64 Alias: utils/base64 Definition: https://github.com/eclipse/dirigible/issues/22 Source: /utils/v4/base64.js Facade: Base64Facade Status: stable Basic Usage var base64 = require ( \"utils/v4/base64\" ); var response = require ( \"http/v4/response\" ); response . println ( base64 . encode ( \"admin:admin\" )); response . println ( base64 . decode ( \"YWRtaW46YWRtaW4=\" )); response . flush (); response . close (); Functions Function Description Returns encode(input) Encode an input string to Base64 string decode(input) Decode an input string from Base64 string","title":"Base64"},{"location":"utils/base64/#base64","text":"Base64 object is used to encode/decode in base64. Overview Module: utils/v4/base64 Alias: utils/base64 Definition: https://github.com/eclipse/dirigible/issues/22 Source: /utils/v4/base64.js Facade: Base64Facade Status: stable","title":"Base64"},{"location":"utils/base64/#basic-usage","text":"var base64 = require ( \"utils/v4/base64\" ); var response = require ( \"http/v4/response\" ); response . println ( base64 . encode ( \"admin:admin\" )); response . println ( base64 . decode ( \"YWRtaW46YWRtaW4=\" )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/base64/#functions","text":"Function Description Returns encode(input) Encode an input string to Base64 string decode(input) Decode an input string from Base64 string","title":"Functions"},{"location":"utils/digest/","text":"Digest Digest object is used to encript binary/text with algorithms like md5, sha256 and sha512. Overview Module: utils/v4/digest Alias: utils/digest Definition: https://github.com/eclipse/dirigible/issues/24 Source: /utils/v4/digest.js Facade: DigestFacade Status: stable Basic Usage var digest = require ( \"utils/v4/digest\" ); var response = require ( \"http/v4/response\" ); response . println ( \"\" + digest . sha256 ( \"admin:admin\" )); response . println ( \"\" + digest . sha512 ( \"YWRtaW46YWRtaW4=\" )); response . flush (); response . close (); Functions Function Description Returns md5(input) Calculates the MD5 digest and returns the value as a 16 element byte array array of byte md5Hex(input) Calculates the MD5 digest and returns the value as a 32 character hex string string sha1(input) Returns an SHA-1 digest array of byte sha256(input) Returns an SHA-256 digest array of byte sha384(input) Returns an SHA-384 digest array of byte sha512(input) Returns an SHA-512 digest array of byte sha1Hex(input) Calculates the SHA-1 digest and returns the value as a hex string string","title":"Digest"},{"location":"utils/digest/#digest","text":"Digest object is used to encript binary/text with algorithms like md5, sha256 and sha512. Overview Module: utils/v4/digest Alias: utils/digest Definition: https://github.com/eclipse/dirigible/issues/24 Source: /utils/v4/digest.js Facade: DigestFacade Status: stable","title":"Digest"},{"location":"utils/digest/#basic-usage","text":"var digest = require ( \"utils/v4/digest\" ); var response = require ( \"http/v4/response\" ); response . println ( \"\" + digest . sha256 ( \"admin:admin\" )); response . println ( \"\" + digest . sha512 ( \"YWRtaW46YWRtaW4=\" )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/digest/#functions","text":"Function Description Returns md5(input) Calculates the MD5 digest and returns the value as a 16 element byte array array of byte md5Hex(input) Calculates the MD5 digest and returns the value as a 32 character hex string string sha1(input) Returns an SHA-1 digest array of byte sha256(input) Returns an SHA-256 digest array of byte sha384(input) Returns an SHA-384 digest array of byte sha512(input) Returns an SHA-512 digest array of byte sha1Hex(input) Calculates the SHA-1 digest and returns the value as a hex string string","title":"Functions"},{"location":"utils/escape/","text":"Escape Escape object is used to escape/unescape text in CSV, HTML3, HTML4, Javascript, Java, JSON and XML format. Overview Module: utils/v4/escape Alias: utils/escape Definition: https://github.com/eclipse/dirigible/issues/26 Source: /utils/v4/escape.js Facade: EscapeFacade Status: stable Basic Usage var escape = require ( 'utils/v4/escape' ); var response = require ( 'http/v4/response' ); var input = \"<script type='text/javascript'>alert('evil script')</script>\" ; var result = escape . escapeJavascript ( input ); response . println ( result ); response . flush (); response . close (); Functions Function Description Returns escapeCsv(input) Escapes an input CSV string string escapeJavascript(input) Escapes an input Javascript string string escapeHtml3(input) Escapes an input HTML3 string string escapeHtml4(input) Escapes an input HTML4 string string escapeJava(input) Escapes an input Java string string escapeJson(input) Escapes an input JSON string string escapeXml(input) Escapes an input XML string string unescapeCsv(input) Unescapes an input CSV string string unescapeJavascript(input) Unescapes an input Javascript string string unescapeHtml3(input) Unescapes an input HTML3 string string unescapeHtml4(input) Unescapes an input HTML4 string string unescapeJava(input) Unescapes an input Java string string unescapeJson(input) Unescapes an input JSON string string unescapeXml(input) Unescapes an input XML string string","title":"Escape"},{"location":"utils/escape/#escape","text":"Escape object is used to escape/unescape text in CSV, HTML3, HTML4, Javascript, Java, JSON and XML format. Overview Module: utils/v4/escape Alias: utils/escape Definition: https://github.com/eclipse/dirigible/issues/26 Source: /utils/v4/escape.js Facade: EscapeFacade Status: stable","title":"Escape"},{"location":"utils/escape/#basic-usage","text":"var escape = require ( 'utils/v4/escape' ); var response = require ( 'http/v4/response' ); var input = \"<script type='text/javascript'>alert('evil script')</script>\" ; var result = escape . escapeJavascript ( input ); response . println ( result ); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/escape/#functions","text":"Function Description Returns escapeCsv(input) Escapes an input CSV string string escapeJavascript(input) Escapes an input Javascript string string escapeHtml3(input) Escapes an input HTML3 string string escapeHtml4(input) Escapes an input HTML4 string string escapeJava(input) Escapes an input Java string string escapeJson(input) Escapes an input JSON string string escapeXml(input) Escapes an input XML string string unescapeCsv(input) Unescapes an input CSV string string unescapeJavascript(input) Unescapes an input Javascript string string unescapeHtml3(input) Unescapes an input HTML3 string string unescapeHtml4(input) Unescapes an input HTML4 string string unescapeJava(input) Unescapes an input Java string string unescapeJson(input) Unescapes an input JSON string string unescapeXml(input) Unescapes an input XML string string","title":"Functions"},{"location":"utils/hex/","text":"Hex Hex object is used to encode/decode text/binary in hexadecimal format. Overview Module: utils/v4/hex Alias: utils/hex Definition: https://github.com/eclipse/dirigible/issues/23 Source: /utils/v4/hex.js Facade: HexFacade Status: stable Basic Usage var hex = require ( \"utils/v4/hex\" ); var response = require ( \"http/v4/response\" ); response . println ( hex . encode ( \"Hex Encoded\" )); response . println ( hex . decode ( \"48657820456e636f646564\" )); response . flush (); response . close (); Functions Function Description Returns decode(input) Decode an input string from HEX string encode(input) Encode an input string to HEX string","title":"Hex"},{"location":"utils/hex/#hex","text":"Hex object is used to encode/decode text/binary in hexadecimal format. Overview Module: utils/v4/hex Alias: utils/hex Definition: https://github.com/eclipse/dirigible/issues/23 Source: /utils/v4/hex.js Facade: HexFacade Status: stable","title":"Hex"},{"location":"utils/hex/#basic-usage","text":"var hex = require ( \"utils/v4/hex\" ); var response = require ( \"http/v4/response\" ); response . println ( hex . encode ( \"Hex Encoded\" )); response . println ( hex . decode ( \"48657820456e636f646564\" )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/hex/#functions","text":"Function Description Returns decode(input) Decode an input string from HEX string encode(input) Encode an input string to HEX string","title":"Functions"},{"location":"utils/url/","text":"Url Url object is used to encode/decode text in the application/x-www-form-urlencoded MIME format. Overview Module: utils/v4/url Alias: utils/url Definition: https://github.com/eclipse/dirigible/issues/25 Source: /utils/v4/url.js Facade: UrlFacade Status: stable Basic Usage var url = require ( \"utils/v4/url\" ); var response = require ( \"http/v4/response\" ); response . println ( url . encode ( '<![CDATA[<meta http-equiv=\"refresh\" content=\"0;url=javascript:document.vulnerable=true;\">]]>' )); response . println ( url . decode ( '%3C%21%5BCDATA%5B%3Cmeta+http-equiv%3D%22refresh%22+content%3D%220%3Burl%3Djavascript%3Adocument.vulnerable%3Dtrue%3B%22%3E%5D%5D%3E' )); response . flush (); response . close (); Functions Function Description Returns decode(input) Decode an input string from application/x-www-form-urlencoded format string encode(input) Encode an input string to application/x-www-form-urlencoded format string escape(input) Escape an input string to comply to URI RFC 3986 string","title":"Url"},{"location":"utils/url/#url","text":"Url object is used to encode/decode text in the application/x-www-form-urlencoded MIME format. Overview Module: utils/v4/url Alias: utils/url Definition: https://github.com/eclipse/dirigible/issues/25 Source: /utils/v4/url.js Facade: UrlFacade Status: stable","title":"Url"},{"location":"utils/url/#basic-usage","text":"var url = require ( \"utils/v4/url\" ); var response = require ( \"http/v4/response\" ); response . println ( url . encode ( '<![CDATA[<meta http-equiv=\"refresh\" content=\"0;url=javascript:document.vulnerable=true;\">]]>' )); response . println ( url . decode ( '%3C%21%5BCDATA%5B%3Cmeta+http-equiv%3D%22refresh%22+content%3D%220%3Burl%3Djavascript%3Adocument.vulnerable%3Dtrue%3B%22%3E%5D%5D%3E' )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/url/#functions","text":"Function Description Returns decode(input) Decode an input string from application/x-www-form-urlencoded format string encode(input) Encode an input string to application/x-www-form-urlencoded format string escape(input) Escape an input string to comply to URI RFC 3986 string","title":"Functions"},{"location":"utils/uuid/","text":"UUID UUID object is used to generate random universally unique identifiers. Overview Module: utils/v4/uuid Alias: utils/uuid Definition: https://github.com/eclipse/dirigible/issues/27 Source: /utils/v4/uuid.js Facade: UuidFacade Status: stable Basic Usage var uuid = require ( \"utils/v4/uuid\" ); var response = require ( \"http/v4/response\" ); response . println ( uuid . random ()); response . println ( uuid . validate ( \"14a3ddce-f86d-4f51-a2e0-6e497b94bbe5\" )); response . flush (); response . close (); Functions Function Description Returns random() Returns a random UUID string string validate(input) Validates whether the provided input is a valid UUID string boolean","title":"UUID"},{"location":"utils/uuid/#uuid","text":"UUID object is used to generate random universally unique identifiers. Overview Module: utils/v4/uuid Alias: utils/uuid Definition: https://github.com/eclipse/dirigible/issues/27 Source: /utils/v4/uuid.js Facade: UuidFacade Status: stable","title":"UUID"},{"location":"utils/uuid/#basic-usage","text":"var uuid = require ( \"utils/v4/uuid\" ); var response = require ( \"http/v4/response\" ); response . println ( uuid . random ()); response . println ( uuid . validate ( \"14a3ddce-f86d-4f51-a2e0-6e497b94bbe5\" )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/uuid/#functions","text":"Function Description Returns random() Returns a random UUID string string validate(input) Validates whether the provided input is a valid UUID string boolean","title":"Functions"},{"location":"utils/xml/","text":"XML XML object is used to transfrom from JSON to XML and vice versa. Overview Module: utils/v4/xml Alias: utils/xml Definition: https://github.com/eclipse/dirigible/issues/28 Source: /utils/v4/xml.js Facade: Xml2JsonFacade Status: stable Basic Usage var xml = require ( \"utils/v4/xml\" ); var response = require ( \"http/v4/response\" ); var jsonInput = { firstName : \"John\" , lastName : \"Doe\" , bio : { age : 24 , sex : \"male\" } }; var xmlInput = \"<person>\" + \"<firstName>John</firstName>\" + \"<lastName>Doe</lastName>\" + \"<bio>\" + \"<age>24</age>\" + \"<sex>male</sex>\" + \"</bio>\" + \"</person>\" ; response . println ( xml . fromJson ( JSON . stringify ( jsonInput ))); response . println ( xml . toJson ( xmlInput )); response . flush (); response . close (); Functions Function Description Returns fromJson(json) Converts a JSON to a XML string string toJson(xml) Converts a XML to JSON string string","title":"XML"},{"location":"utils/xml/#xml","text":"XML object is used to transfrom from JSON to XML and vice versa. Overview Module: utils/v4/xml Alias: utils/xml Definition: https://github.com/eclipse/dirigible/issues/28 Source: /utils/v4/xml.js Facade: Xml2JsonFacade Status: stable","title":"XML"},{"location":"utils/xml/#basic-usage","text":"var xml = require ( \"utils/v4/xml\" ); var response = require ( \"http/v4/response\" ); var jsonInput = { firstName : \"John\" , lastName : \"Doe\" , bio : { age : 24 , sex : \"male\" } }; var xmlInput = \"<person>\" + \"<firstName>John</firstName>\" + \"<lastName>Doe</lastName>\" + \"<bio>\" + \"<age>24</age>\" + \"<sex>male</sex>\" + \"</bio>\" + \"</person>\" ; response . println ( xml . fromJson ( JSON . stringify ( jsonInput ))); response . println ( xml . toJson ( xmlInput )); response . flush (); response . close ();","title":"Basic Usage"},{"location":"utils/xml/#functions","text":"Function Description Returns fromJson(json) Converts a JSON to a XML string string toJson(xml) Converts a XML to JSON string string","title":"Functions"}]}